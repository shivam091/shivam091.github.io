<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://shivam091.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://shivam091.github.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2025-07-06T16:53:47+05:30</updated><id>https://shivam091.github.io/feed.xml</id><title type="html">Harshal LADHE</title><subtitle>Software Engineer | Freelancer | Learner</subtitle><author><name>Harshal LADHE</name><email>harshal.ladhe.1@gmail.com</email></author><entry><title type="html">Mastering Grid Areas, Alignment &amp;amp; Spanning in CSS Grid</title><link href="https://shivam091.github.io/post/mastering-css-grid-alignment-spanning" rel="alternate" type="text/html" title="Mastering Grid Areas, Alignment &amp;amp; Spanning in CSS Grid" /><published>2025-07-05T10:00:00+05:30</published><updated>2025-07-06T16:53:21+05:30</updated><id>https://shivam091.github.io/post/mastering-css-grid-alignment-spanning</id><content type="html" xml:base="https://shivam091.github.io/post/mastering-css-grid-alignment-spanning"><![CDATA[<h2 id="introduction" dir="auto">Introduction</h2>

<p dir="auto">Welcome to <strong>Part 2</strong> of the CSS Grid series!</p>

<p dir="auto">Previously, in <a href="/css/getting-started-with-css-grid">Part 1</a>, we covered basic concepts and layout building with <code class="highlighter-rouge notranslate">display: grid</code>. In this post, we‚Äôll dive into:</p>

<ul dir="auto">
  <li><code class="highlighter-rouge notranslate">grid-template-areas</code></li>
  <li>Aligning content with <code class="highlighter-rouge notranslate">place-items</code> and <code class="highlighter-rouge notranslate">place-self</code></li>
  <li>Spanning items across rows and columns</li>
  <li>Visual diagrams and real code examples</li>
</ul>

<hr />

<h2 id="grid-template-areas" dir="auto">Grid Template Areas</h2>

<p dir="auto">(<em>Include full content from original ‚ÄúGrid Template Areas‚Äù section with styles, HTML, CodePen links and explanation</em>)</p>

<hr />

<h2 id="aligning-grid-items" dir="auto">Aligning Grid Items</h2>

<p dir="auto">(<em>Full section from container-level and item-level alignment ‚Äî include ASCII diagrams and CodePens</em>)</p>

<hr />

<h2 id="spanning-grid-items" dir="auto">Spanning Grid Items</h2>

<p dir="auto">(<em>Full section with <code class="highlighter-rouge notranslate">grid-column</code>, <code class="highlighter-rouge notranslate">grid-row</code>, span examples and shorthand/longhand breakdown</em>)</p>

<hr />

<h2 id="explicit-vs-implicit-grids" dir="auto">Explicit vs Implicit Grids</h2>

<p dir="auto">(<em>Move this here from end of original post ‚Äî it makes more sense before responsive discussion in Part 3</em>)</p>

<hr />

<h2 id="conclusion" dir="auto">Conclusion</h2>

<p dir="auto">With named areas, item alignment, and grid item spanning, you now have <strong>full control over your layout structure</strong>‚Äîvisually and semantically.</p>

<p dir="auto">In <a href="/css/responsive-css-grid-layouts">Part 3 ‚Üí</a>, we‚Äôll learn how to build fully responsive layouts using <code class="highlighter-rouge notranslate">fr</code>, <code class="highlighter-rouge notranslate">minmax()</code>, and media queries‚Äî<strong>no extra frameworks needed</strong>.</p>

<hr />

<p dir="auto">üìö <strong>This is Part 2 of the CSS Grid Fundamentals Series</strong></p>

<p dir="auto">üîó Previous: <a href="/post/getting-started-with-css-grid">Part 1 ‚Üí Getting Started with Grid</a><br />
üîó Next: <a href="/post/responsive-css-grid-layouts">Part 3 ‚Üí Responsive Layouts with Grid</a></p>]]></content><author><name>Harshal Ladhe</name></author><category term="css" /><category term="beginner" /><category term="layout" /><category term="css" /><category term="grid" /><category term="layout" /><category term="grid-template-areas" /><category term="positioning" /><category term="frontend" /><summary type="html"><![CDATA[Take your CSS Grid skills to the next level by learning about named grid areas, item alignment, and how to span elements across rows or columns.]]></summary></entry><entry><title type="html">Responsive CSS Grid Layouts: fr Units, minmax(), and auto-fit Explained</title><link href="https://shivam091.github.io/post/responsive-css-grid-layouts" rel="alternate" type="text/html" title="Responsive CSS Grid Layouts: fr Units, minmax(), and auto-fit Explained" /><published>2025-07-05T09:00:00+05:30</published><updated>2025-07-06T16:53:21+05:30</updated><id>https://shivam091.github.io/post/responsive-css-grid-layouts</id><content type="html" xml:base="https://shivam091.github.io/post/responsive-css-grid-layouts"><![CDATA[<h2 id="introduction" dir="auto">Introduction</h2>

<p dir="auto">Welcome to the final part of the CSS Grid Fundamentals series! In <a href="/css/mastering-css-grid-alignment-spanning">Part 2</a>, we covered alignment and item positioning.</p>

<p dir="auto">Now, we‚Äôll explore the responsive side of Grid, including:</p>

<ul dir="auto">
  <li>Fractional units (<code class="highlighter-rouge notranslate">fr</code>)</li>
  <li><code class="highlighter-rouge notranslate">minmax()</code> for fluid sizing</li>
  <li><code class="highlighter-rouge notranslate">auto-fit</code> vs <code class="highlighter-rouge notranslate">auto-fill</code></li>
  <li>Implicit grids</li>
  <li>Using Grid with or without media queries</li>
</ul>

<hr />

<h2 id="fractional-units-fr" dir="auto">Fractional Units (<code class="highlighter-rouge notranslate">fr</code>)</h2>

<p dir="auto">(<em>Include all related content and CodePen for <code class="highlighter-rouge notranslate">fr</code> and <code class="highlighter-rouge notranslate">repeat()</code></em>)</p>

<hr />

<h2 id="minmax-function" dir="auto">minmax() Function</h2>

<p dir="auto">(<em>Detailed explanation with the card example and CodePen</em>)</p>

<hr />

<h2 id="auto-fit-vs-auto-fill" dir="auto">Auto-fit vs Auto-fill</h2>

<p dir="auto">(<em>Full section with use case explanation and clarification</em>)</p>

<hr />

<h2 id="responsive-grid-with-media-queries" dir="auto">Responsive Grid with Media Queries</h2>

<p dir="auto">(<em>Example with <code class="highlighter-rouge notranslate">@media</code>, 3-column to 1-column layout</em>)</p>

<hr />

<h2 id="quick-reference-common-grid-properties" dir="auto">Quick Reference: Common Grid Properties</h2>

<p dir="auto">(<em>Include table of essential grid properties from end of original post</em>)</p>

<hr />

<h2 id="conclusion" dir="auto">Conclusion</h2>

<p dir="auto">Congrats! You now have a <strong>complete understanding of CSS Grid</strong>‚Äîfrom setup to advanced responsive layouts.</p>

<p dir="auto">You can now confidently use Grid to build modern UIs that are flexible, scalable, and elegant.</p>

<hr />

<p dir="auto">üìö <strong>This is Part 3 of the CSS Grid Fundamentals Series</strong></p>

<p dir="auto">üîó Previous: <a href="/post/mastering-css-grid-alignment-spanning">Part 2 ‚Üí Grid Areas, Alignment &amp; Spanning</a></p>]]></content><author><name>Harshal Ladhe</name></author><category term="css" /><category term="beginner" /><category term="responsive" /><category term="css" /><category term="grid" /><category term="responsive" /><category term="layout" /><category term="fr-units" /><category term="minmax" /><category term="media-queries" /><summary type="html"><![CDATA[Learn how to build truly responsive CSS Grid layouts using fractional units, the minmax() function, auto-fit vs auto-fill, and media queries.]]></summary></entry><entry><title type="html">Getting Started with CSS Grid: Learn 2D Layouts with Ease</title><link href="https://shivam091.github.io/post/getting-started-with-css-grid" rel="alternate" type="text/html" title="Getting Started with CSS Grid: Learn 2D Layouts with Ease" /><published>2025-07-04T22:43:00+05:30</published><updated>2025-07-06T16:53:21+05:30</updated><id>https://shivam091.github.io/post/getting-started-with-css-grid</id><content type="html" xml:base="https://shivam091.github.io/post/getting-started-with-css-grid"><![CDATA[<h2 id="introduction" dir="auto">Introduction</h2>

<p dir="auto">CSS Grid is one of the most powerful layout systems in web development today. It enables you to build two-dimensional layouts using rows and columns with minimal effort. Unlike Flexbox, which is one-dimensional, Grid handles layout in <strong>both axes</strong> simultaneously.</p>

<p dir="auto">This post is the first in a three-part series on CSS Grid. We‚Äôll begin with:</p>

<ul dir="auto">
  <li>What CSS Grid is and why it‚Äôs useful</li>
  <li>Key terminology</li>
  <li>The most essential properties</li>
  <li>Simple layouts to get started</li>
</ul>

<hr />

<h2 id="why-css-grid" dir="auto">Why CSS Grid?</h2>

<p dir="auto">CSS Grid allows complex layouts without floats, media queries, or JavaScript. It‚Äôs native, declarative, and flexible.</p>

<hr />

<h2 id="basic-terminology" dir="auto">Basic Terminology</h2>

<ul dir="auto">
  <li><strong>Grid Container</strong></li>
  <li><strong>Grid Item</strong></li>
  <li><strong>Grid Line</strong></li>
  <li><strong>Grid Track</strong></li>
  <li><strong>Grid Cell</strong></li>
</ul>

<p dir="auto">(<em>Detailed explanations as in original content</em>)</p>

<hr />

<h2 id="building-layouts-with-css-grid" dir="auto">Building Layouts with CSS Grid</h2>

<h3 id="fundamental-properties" dir="auto">Fundamental Properties</h3>

<ul dir="auto">
  <li><code class="highlighter-rouge notranslate">display: grid</code></li>
  <li><code class="highlighter-rouge notranslate">grid-template-columns</code>, <code class="highlighter-rouge notranslate">grid-template-rows</code></li>
  <li><code class="highlighter-rouge notranslate">gap</code></li>
  <li><code class="highlighter-rouge notranslate">grid-column</code>, <code class="highlighter-rouge notranslate">grid-row</code></li>
</ul>

<p dir="auto">(<em>Include all content under ‚ÄúBuilding Layouts‚Ä¶‚Äù and ‚ÄúColumn and Row Templates‚Äù from original post, with CodePen links</em>)</p>

<hr />

<h2 id="conclusion" dir="auto">Conclusion</h2>

<p dir="auto">You‚Äôve just built your first layouts using CSS Grid! üéâ</p>

<p dir="auto">In <a href="/css/mastering-css-grid-alignment-spanning">Part 2 ‚Üí</a>, we‚Äôll explore how to align content, use <code class="highlighter-rouge notranslate">grid-template-areas</code>, and span items across rows and columns for real-world use cases.</p>

<hr />

<p dir="auto">üìö <strong>This is Part 1 of the CSS Grid Fundamentals Series</strong></p>

<p dir="auto">üîó Next: <a href="/post/mastering-css-grid-alignment-spanning">Part 2 ‚Üí Mastering Grid Areas, Alignment &amp; Spanning</a></p>]]></content><author><name>Harshal Ladhe</name></author><category term="css" /><category term="beginner" /><category term="css" /><category term="grid" /><category term="layout" /><category term="web design" /><category term="frontend" /><category term="css-grid" /><summary type="html"><![CDATA[A beginner-friendly introduction to CSS Grid layout, its core concepts, and how to create your first 2D grid-based layouts with practical examples.]]></summary></entry><entry><title type="html">Components</title><link href="https://shivam091.github.io/post/components" rel="alternate" type="text/html" title="Components" /><published>2025-06-16T18:20:00+05:30</published><updated>2025-07-05T19:22:10+05:30</updated><id>https://shivam091.github.io/post/components</id><content type="html" xml:base="https://shivam091.github.io/post/components"><![CDATA[<h2 id="codeblocks" dir="auto">Codeblocks</h2>

<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-close">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-minimize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-maximize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg role="img" aria-hidden="true" focusable="false">
        <use href="/assets/img/sprite.svg#icon-code" />
      </svg>
      <span class="visually-hidden">Code language:</span>
      Ruby
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-hash" />
        </svg>
      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-copy" />
        </svg>
      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre><span class="c1"># Gemfile</span>
<span class="n">gem</span> <span class="s1">'httparty'</span>

<span class="c1"># app/services/weather_api.rb</span>
<span class="nb">require</span> <span class="s1">'httparty'</span>

<span class="k">class</span> <span class="nc">WeatherApi</span>
  <span class="no">API_KEY</span> <span class="o">=</span> <span class="s1">'your_api_key'</span>
  <span class="no">BASE_URL</span> <span class="o">=</span> <span class="s1">'https://api.openweathermap.org/data/2.5/weather'</span>

  <span class="k">def</span> <span class="nf">fetch_weather</span><span class="p">(</span><span class="n">city</span><span class="p">)</span>
    <span class="n">url</span> <span class="o">=</span> <span class="s2">"</span><span class="si">#{</span><span class="no">BASE_URL</span><span class="si">}</span><span class="s2">?q=</span><span class="si">#{</span><span class="n">city</span><span class="si">}</span><span class="s2">&amp;appid=</span><span class="si">#{</span><span class="no">API_KEY</span><span class="si">}</span><span class="s2">&amp;units=metric"</span>
    <span class="n">response</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="k">raise</span> <span class="s2">"API Error: </span><span class="si">#{</span><span class="n">response</span><span class="p">.</span><span class="nf">code</span><span class="si">}</span><span class="s2">"</span> <span class="k">unless</span> <span class="n">response</span><span class="p">.</span><span class="nf">success?</span>
    <span class="n">response</span><span class="p">.</span><span class="nf">parsed_body</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># app/controllers/weather_controller.rb</span>
<span class="k">def</span> <span class="nf">show</span>
  <span class="n">city</span> <span class="o">=</span> <span class="n">params</span><span class="p">[</span><span class="ss">:city</span><span class="p">]</span>
  <span class="n">weather_data</span> <span class="o">=</span> <span class="no">WeatherApi</span><span class="p">.</span><span class="nf">new</span><span class="p">.</span><span class="nf">fetch_weather</span><span class="p">(</span><span class="n">city</span><span class="p">)</span>
  <span class="vi">@temperature</span> <span class="o">=</span> <span class="n">weather_data</span><span class="p">[</span><span class="s1">'main'</span><span class="p">][</span><span class="s1">'temp'</span><span class="p">]</span>
<span class="k">end</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<h2 id="alerts" dir="auto">Alerts</h2>

<h3 id="default" dir="auto">Default</h3>

<div class="alert alert-accent" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg role="img" aria-hidden="true" focusable="false">
  <use href="/assets/img/sprite.svg#icon-info-circle" />
</svg>

  </div>
  <div class="alert-content">
    This is default alert.
  </div>
  
</div>

<h3 id="with-icon-heading-and-dismiss" dir="auto">With icon, heading, and dismiss</h3>

<div class="alert alert-accent alert-dismissible" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg role="img" aria-hidden="true" focusable="false">
  <use href="/assets/img/sprite.svg#icon-info-circle" />
</svg>

  </div>
  <div class="alert-content">
    <div class="alert-heading">Information</div>
This is just for your information.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg role="img" aria-hidden="true" focusable="false">
    <use href="/assets/img/sprite.svg#icon-times" />
  </svg>
</button>

</div>

<div class="alert alert-success alert-dismissible" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg role="img" aria-hidden="true" focusable="false">
  <use href="/assets/img/sprite.svg#icon-bulb" />
</svg>

  </div>
  <div class="alert-content">
    <div class="alert-heading">Heads Up!</div>
Your profile has been updated successfully.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg role="img" aria-hidden="true" focusable="false">
    <use href="/assets/img/sprite.svg#icon-times" />
  </svg>
</button>

</div>

<div class="alert alert-danger alert-dismissible" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg role="img" aria-hidden="true" focusable="false">
  <use href="/assets/img/sprite.svg#icon-times" />
</svg>

  </div>
  <div class="alert-content">
    <div class="alert-heading">Error :(</div>
Failed to save your changes. Please try again.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg role="img" aria-hidden="true" focusable="false">
    <use href="/assets/img/sprite.svg#icon-times" />
  </svg>
</button>

</div>

<div class="alert alert-attention alert-dismissible" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg role="img" aria-hidden="true" focusable="false">
  <use href="/assets/img/sprite.svg#icon-exclamation-triangle" />
</svg>

  </div>
  <div class="alert-content">
    <div class="alert-heading">Attention</div>
This action requires confirmation.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg role="img" aria-hidden="true" focusable="false">
    <use href="/assets/img/sprite.svg#icon-times" />
  </svg>
</button>

</div>

<h3 id="with-icon-outline-and-dismiss" dir="auto">With icon, outline, and dismiss</h3>

<div class="alert alert-accent alert-dismissible alert-outlined" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg role="img" aria-hidden="true" focusable="false">
  <use href="/assets/img/sprite.svg#icon-info-circle" />
</svg>

  </div>
  <div class="alert-content">
    An example outlined accent alert with an icon.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg role="img" aria-hidden="true" focusable="false">
    <use href="/assets/img/sprite.svg#icon-times" />
  </svg>
</button>

</div>

<div class="alert alert-success alert-dismissible alert-outlined" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg role="img" aria-hidden="true" focusable="false">
  <use href="/assets/img/sprite.svg#icon-bulb" />
</svg>

  </div>
  <div class="alert-content">
    An example outlined success alert with an icon.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg role="img" aria-hidden="true" focusable="false">
    <use href="/assets/img/sprite.svg#icon-times" />
  </svg>
</button>

</div>

<div class="alert alert-danger alert-dismissible alert-outlined" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg role="img" aria-hidden="true" focusable="false">
  <use href="/assets/img/sprite.svg#icon-times" />
</svg>

  </div>
  <div class="alert-content">
    An example outlined danger alert with an icon.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg role="img" aria-hidden="true" focusable="false">
    <use href="/assets/img/sprite.svg#icon-times" />
  </svg>
</button>

</div>

<div class="alert alert-attention alert-dismissible alert-outlined" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg role="img" aria-hidden="true" focusable="false">
  <use href="/assets/img/sprite.svg#icon-exclamation-triangle" />
</svg>

  </div>
  <div class="alert-content">
    An example outlined attention alert with an icon.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg role="img" aria-hidden="true" focusable="false">
    <use href="/assets/img/sprite.svg#icon-times" />
  </svg>
</button>

</div>

<h3 id="with-links" dir="auto">With links</h3>

<div class="alert alert-accent" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg role="img" aria-hidden="true" focusable="false">
  <use href="/assets/img/sprite.svg#icon-info-circle" />
</svg>

  </div>
  <div class="alert-content">
    <div class="alert-heading">Information</div>
This is an <a href="#">important notification</a> that requires your attention.
You can <a href="/settings">update your settings here</a>.
An example showing the <code class="language-plaintext highlighter-rouge">warning</code> type prompt.
  </div>
  
</div>

<h3 id="markdown-support" dir="auto">Markdown support</h3>

<div class="alert alert-danger" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg role="img" aria-hidden="true" focusable="false">
  <use href="/assets/img/sprite.svg#icon-times" />
</svg>

  </div>
  <div class="alert-content">
    <h3 class="alert-heading" id="markdown-enabled-alert">Markdown enabled alert</h3>

<p>This content is <strong>processed</strong> as <em>Markdown</em>.</p>

  </div>
  
</div>

<h2 id="icons" dir="auto">Icons</h2>

<svg id="custom-id" class="icon icon-folder-open custom-class" width="20" height="20" role="img" aria-label="Open folder" focusable="false">
  <use href="/assets/img/sprite.svg#icon-folder-open" />
</svg>]]></content><author><name>Harshal Ladhe</name></author><category term="blogging" /><category term="components" /><category term="typography" /><category term="design" /><category term="styleguide" /><summary type="html"><![CDATA[This post is a comprehensive test of various components. It includes alerts, code blocks, buttons, and more.]]></summary></entry><entry><title type="html">Understanding CSS Grid: A Complete Guide</title><link href="https://shivam091.github.io/post/understanding-css-grid" rel="alternate" type="text/html" title="Understanding CSS Grid: A Complete Guide" /><published>2025-06-07T18:40:00+05:30</published><updated>2025-07-06T12:11:06+05:30</updated><id>https://shivam091.github.io/post/understanding-css-grid</id><content type="html" xml:base="https://shivam091.github.io/post/understanding-css-grid"><![CDATA[<h2 id="introduction" dir="auto">Introduction</h2>

<p dir="auto">CSS Grid is one of the most powerful tools for building web layouts. In this article, we‚Äôll explore all the fundamentals, from basic to advanced usage.</p>

<h2 id="why-css-grid" dir="auto">Why CSS grid?</h2>

<p dir="auto">Grid allows you to design complex layouts using rows and columns with minimal code. Unlike flexbox, which is one-dimensional, grid is two-dimensional. This makes CSS Grid extremely powerful for both horizontal and vertical layout management.</p>

<h2 id="basic-terminology" dir="auto">Basic terminology</h2>

<ul dir="auto">
  <li><strong>Grid Container</strong>: The parent element where grid is applied.</li>
  <li><strong>Grid Item</strong>: The children of the grid container.</li>
  <li><strong>Grid Line</strong>: The lines dividing the grid tracks.</li>
  <li><strong>Grid Track</strong>: The space between two grid lines (either row or column).</li>
  <li><strong>Grid Cell</strong>: The intersection of a grid row and a grid column.</li>
</ul>

<h2 id="css-grid-properties" dir="auto">CSS grid properties</h2>

<p dir="auto">Here are some of the most commonly used properties for defining a grid layout:</p>

<ul dir="auto">
  <li><strong>display: grid;</strong> - Turns the container into a grid layout.</li>
  <li><strong>grid-template-columns</strong> - Defines the number and size of columns.</li>
  <li><strong>grid-template-rows</strong> - Defines the number and size of rows.</li>
  <li><strong>gap</strong> - Specifies the space between rows and columns in the grid.</li>
  <li><strong>grid-column</strong> - Defines how many columns an item will span.</li>
  <li><strong>grid-row</strong> - Defines how many rows an item will span.</li>
</ul>

<h3 id="grid-layout-example" dir="auto">Grid layout example</h3>

<p dir="auto">Here‚Äôs an example of a simple 3-column grid layout:</p>

<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-close">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-minimize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-maximize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg role="img" aria-hidden="true" focusable="false">
        <use href="/assets/img/sprite.svg#icon-code" />
      </svg>
      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-hash" />
        </svg>
      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-copy" />
        </svg>
      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="nf">repeat</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">1fr</span><span class="p">);</span> <span class="c">/* 3 equal columns */</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span> <span class="c">/* Space between columns and rows */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p dir="auto">This layout has 3 columns of equal width (<code class="highlighter-rouge notranslate">1fr</code> stands for 1 fraction of the available space), and there‚Äôs a gap of <code class="highlighter-rouge notranslate">1rem</code> between both rows and columns.</p>

<h3 id="understanding-fr-fractional-units" dir="auto">Understanding <code class="highlighter-rouge notranslate">fr</code> (Fractional Units)</h3>

<p dir="auto">The <code class="highlighter-rouge notranslate">fr</code> unit is a flexible length unit that allows us to create responsive grids. It distributes available space in a grid container proportionally.
In the example above, <code class="highlighter-rouge notranslate">1fr</code> means each column will take up an equal share of the available space.</p>

<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-close">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-minimize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-maximize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg role="img" aria-hidden="true" focusable="false">
        <use href="/assets/img/sprite.svg#icon-code" />
      </svg>
      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-hash" />
        </svg>
      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-copy" />
        </svg>
      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">2fr</span> <span class="m">1fr</span><span class="p">;</span> <span class="c">/* First column takes 2/3 of the space, second takes 1/3 */</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p dir="auto">In the above code, the first column will take up 2 fractions of the available space, and the second will take 1 fraction.
The total available space is divided into 3 parts, with the first column getting 2 parts and the second getting 1.</p>

<h3 id="other-useful-properties" dir="auto">Other useful properties</h3>

<p dir="auto"><strong>grid-template-areas</strong> - Defines a grid using named areas. This can make positioning easier.</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-close">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-minimize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-maximize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg role="img" aria-hidden="true" focusable="false">
        <use href="/assets/img/sprite.svg#icon-code" />
      </svg>
      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-hash" />
        </svg>
      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-copy" />
        </svg>
      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-areas</span><span class="p">:</span>
    <span class="s1">"header header header"</span>
    <span class="s1">"main main sidebar"</span>
    <span class="s1">"footer footer footer"</span><span class="p">;</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p dir="auto"><strong>justify-items</strong> - Aligns items horizontally within their grid cell.</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-close">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-minimize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-maximize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg role="img" aria-hidden="true" focusable="false">
        <use href="/assets/img/sprite.svg#icon-code" />
      </svg>
      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-hash" />
        </svg>
      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-copy" />
        </svg>
      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">justify-items</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span> <span class="c">/* Centers grid items horizontally */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p dir="auto"><strong>align-items</strong> - Aligns items vertically within their grid cell.</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-close">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-minimize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-maximize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg role="img" aria-hidden="true" focusable="false">
        <use href="/assets/img/sprite.svg#icon-code" />
      </svg>
      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-hash" />
        </svg>
      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-copy" />
        </svg>
      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">align-items</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span> <span class="c">/* Centers grid items vertically */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p dir="auto"><strong>justify-self</strong> - Aligns a specific grid item horizontally within its grid cell.</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-close">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-minimize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-maximize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg role="img" aria-hidden="true" focusable="false">
        <use href="/assets/img/sprite.svg#icon-code" />
      </svg>
      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-hash" />
        </svg>
      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-copy" />
        </svg>
      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="code"><pre><span class="nc">.item</span> <span class="p">{</span>
  <span class="nl">justify-self</span><span class="p">:</span> <span class="nb">end</span><span class="p">;</span> <span class="c">/* Aligns this specific item to the right */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p dir="auto"><strong>align-self</strong> - Aligns a specific grid item vertically within its grid cell.</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-close">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-minimize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-maximize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg role="img" aria-hidden="true" focusable="false">
        <use href="/assets/img/sprite.svg#icon-code" />
      </svg>
      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-hash" />
        </svg>
      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-copy" />
        </svg>
      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="code"><pre><span class="nc">.item</span> <span class="p">{</span>
  <span class="nl">align-self</span><span class="p">:</span> <span class="nb">start</span><span class="p">;</span> <span class="c">/* Aligns this specific item to the top */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<h3 id="responsive-design-with-css-grid" dir="auto">Responsive design with CSS grid</h3>

<p dir="auto">CSS Grid makes responsive design easier than ever. You can modify your grid layout based on screen size using media queries.</p>

<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-close">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-minimize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
      <svg role="img" aria-hidden="true" focusable="false" class="code-block-action code-maximize">
        <use href="/assets/img/sprite.svg#icon-circle-fill" />
      </svg>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg role="img" aria-hidden="true" focusable="false">
        <use href="/assets/img/sprite.svg#icon-code" />
      </svg>
      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-hash" />
        </svg>
      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg role="img" aria-hidden="true" focusable="false">
          <use href="/assets/img/sprite.svg#icon-copy" />
        </svg>
      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="nf">repeat</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">1fr</span><span class="p">);</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">@media</span> <span class="p">(</span><span class="n">max-width</span><span class="p">:</span> <span class="m">768px</span><span class="p">)</span> <span class="p">{</span>
  <span class="nc">.grid</span> <span class="p">{</span>
    <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">1fr</span><span class="p">;</span> <span class="c">/* Stack columns on small screens */</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p dir="auto">In this example, the grid has 3 columns on larger screens, but on screens smaller than <code class="highlighter-rouge notranslate">768px</code>, the grid switches to 1 column.</p>

<h2 id="common-css-grid-properties" dir="auto">Common CSS grid properties</h2>

<p dir="auto">Here‚Äôs a simple table summarizing key grid properties:</p>

<table dir="auto" role="table" class="markdown-table">
  <thead>
    <tr>
      <th>Property</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>grid-template-columns</td>
      <td>Defines column structure</td>
    </tr>
    <tr>
      <td>grid-template-rows</td>
      <td>Defines row structure</td>
    </tr>
    <tr>
      <td>gap</td>
      <td>Space between items</td>
    </tr>
    <tr>
      <td>grid-template-areas</td>
      <td>Defines named areas for grid items</td>
    </tr>
    <tr>
      <td>justify-items</td>
      <td>Aligns grid items horizontally</td>
    </tr>
    <tr>
      <td>align-items</td>
      <td>Aligns grid items vertically</td>
    </tr>
  </tbody>
</table>

<h2 id="conclusion" dir="auto">Conclusion</h2>

<p dir="auto">CSS Grid makes layout development more accessible and powerful. By understanding and utilizing its properties, you can create complex layouts with minimal code. Mastering CSS Grid will significantly improve your UI skills, especially when dealing with complex designs.</p>]]></content><author><name>Harshal Ladhe</name></author><category term="css" /><category term="css" /><category term="grid" /><summary type="html"><![CDATA[CSS Grid is one of the most powerful tools for building web layouts.]]></summary></entry><entry><title type="html">Text and Typography</title><link href="https://shivam091.github.io/post/typography" rel="alternate" type="text/html" title="Text and Typography" /><published>2025-05-31T01:00:00+05:30</published><updated>2025-07-05T19:15:26+05:30</updated><id>https://shivam091.github.io/post/typography</id><content type="html" xml:base="https://shivam091.github.io/post/typography"><![CDATA[<h2 id="headings" dir="auto">Headings</h2>

<h1 id="h1-heading-usually-reserved-for-post-title" dir="auto">H1 Heading (usually reserved for post title)</h1>
<h2 id="h2-heading" dir="auto">H2 Heading</h2>
<h3 id="h3-heading" dir="auto">H3 Heading</h3>
<h4 id="h4-heading" dir="auto">H4 Heading</h4>
<h5 id="h5-heading" dir="auto">H5 Heading</h5>
<h6 id="h6-heading" dir="auto">H6 Heading</h6>

<h2 id="paragraphs" dir="auto">Paragraphs</h2>

<p dir="auto">Lorem ipsum dolor sit amet, <strong>consectetur</strong> adipiscing elit. Nulla <em>vehicula</em>, <code class="highlighter-rouge notranslate">inline code</code>, <a href="https://example.com" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://example.com" class="external-link">external link</a>, and a line break:<br />
New line here.</p>

<h2 id="blockquote" dir="auto">Blockquote</h2>

<blockquote dir="auto">
  <p dir="auto">‚ÄúDesign is not just what it looks like and feels like. Design is how it works.‚Äù<br />
‚Äî <em>Steve Jobs</em></p>
</blockquote>

<h2 id="links" dir="auto">Links</h2>

<p dir="auto"><a href="https://example.com" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://example.com" class="external-link">External Link</a><br />
<a href="/about/">Internal Link</a><br />
Mailto: <a href="mailto:test@example.com">Send Email</a></p>

<h2 id="lists" dir="auto">Lists</h2>

<h3 id="unordered-list" dir="auto">Unordered List</h3>

<ul dir="auto">
  <li>Chapter 1
    <ul dir="auto">
      <li>Section 1
        <ul dir="auto">
          <li>Paragraph 1</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Chapter 2
    <ul dir="auto">
      <li>Section 2</li>
    </ul>
  </li>
</ul>

<h3 id="ordered-list" dir="auto">Ordered List</h3>

<ol dir="auto">
  <li>First item</li>
  <li>Second item
    <ol dir="auto">
      <li>Nested
        <ol dir="auto">
          <li>Nested again</li>
        </ol>
      </li>
    </ol>
  </li>
  <li>Third item</li>
</ol>

<h3 id="task-list" dir="auto">Task List</h3>

<ul class="task-list" dir="auto">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Job
    <ul class="task-list" dir="auto">
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Step 1</li>
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Step 2</li>
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Step 3</li>
    </ul>
  </li>
</ul>

<h3 id="description-lists" dir="auto">Description Lists</h3>
<dl>
  <dt>Sun</dt>
  <dd>the star around which the earth orbits</dd>
  <dt>Moon</dt>
  <dd>the natural satellite of the earth, visible by reflected light from the sun</dd>
</dl>

<h2 id="inline-elements" dir="auto">Inline Elements</h2>

<p dir="auto"><strong>bold text</strong>,
<em>italic text</em>,
<code class="highlighter-rouge notranslate">code</code>,
<del>strikethrough</del>,
<u>underlined</u>,
<small>small text</small>
<mark>highlighted</mark> text.
<abbr title="attribute">attr</abbr></p>

<h2 id="code-blocks" dir="auto">Code Blocks</h2>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># Gemfile</span>
<span class="n">gem</span> <span class="s1">'httparty'</span>

<span class="c1"># app/services/weather_api.rb</span>
<span class="nb">require</span> <span class="s1">'httparty'</span>

<span class="k">class</span> <span class="nc">WeatherApi</span>
  <span class="no">API_KEY</span> <span class="o">=</span> <span class="s1">'your_api_key'</span>
  <span class="no">BASE_URL</span> <span class="o">=</span> <span class="s1">'https://api.openweathermap.org/data/2.5/weather'</span>

  <span class="k">def</span> <span class="nf">fetch_weather</span><span class="p">(</span><span class="n">city</span><span class="p">)</span>
    <span class="n">url</span> <span class="o">=</span> <span class="s2">"</span><span class="si">#{</span><span class="no">BASE_URL</span><span class="si">}</span><span class="s2">?q=</span><span class="si">#{</span><span class="n">city</span><span class="si">}</span><span class="s2">&amp;appid=</span><span class="si">#{</span><span class="no">API_KEY</span><span class="si">}</span><span class="s2">&amp;units=metric"</span>
    <span class="n">response</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="k">raise</span> <span class="s2">"API Error: </span><span class="si">#{</span><span class="n">response</span><span class="p">.</span><span class="nf">code</span><span class="si">}</span><span class="s2">"</span> <span class="k">unless</span> <span class="n">response</span><span class="p">.</span><span class="nf">success?</span>
    <span class="n">response</span><span class="p">.</span><span class="nf">parsed_body</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># app/controllers/weather_controller.rb</span>
<span class="k">def</span> <span class="nf">show</span>
  <span class="n">city</span> <span class="o">=</span> <span class="n">params</span><span class="p">[</span><span class="ss">:city</span><span class="p">]</span>
  <span class="n">weather_data</span> <span class="o">=</span> <span class="no">WeatherApi</span><span class="p">.</span><span class="nf">new</span><span class="p">.</span><span class="nf">fetch_weather</span><span class="p">(</span><span class="n">city</span><span class="p">)</span>
  <span class="vi">@temperature</span> <span class="o">=</span> <span class="n">weather_data</span><span class="p">[</span><span class="s1">'main'</span><span class="p">][</span><span class="s1">'temp'</span><span class="p">]</span>
<span class="k">end</span></code></pre></figure>

<p dir="auto">Inline <code class="highlighter-rouge notranslate">console.log("Hi")</code> inside text.</p>

<h2 id="details--summary" dir="auto">Details / Summary</h2>

<details>
  <summary>Click to expand</summary>
  <p>This is hidden content revealed with HTML <code>&lt;details&gt;</code> and <code>&lt;summary&gt;</code> tags.</p>
</details>

<h2 id="figures-and-images" dir="auto">Figures and Images</h2>

<h3 id="image-with-caption" dir="auto">Image with Caption</h3>

<figure>
  <img src="https://via.placeholder.com/600x200" alt="Example Image" />
  <figcaption>This is a caption below the image.</figcaption>
</figure>

<h3 id="simple-image" dir="auto">Simple Image</h3>

<p dir="auto"><img src="https://via.placeholder.com/400x200" alt="Alt text" /></p>

<h2 id="tables" dir="auto">Tables</h2>

<table dir="auto" role="table" class="markdown-table">
  <thead>
    <tr>
      <th style="text-align: right">Feature</th>
      <th style="text-align: center">Supported</th>
      <th style="text-align: left">Notes</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: right">Tables</td>
      <td style="text-align: center">‚úÖ</td>
      <td style="text-align: left">Markdown &amp; HTML</td>
    </tr>
    <tr>
      <td style="text-align: right">GFM</td>
      <td style="text-align: center">‚úÖ</td>
      <td style="text-align: left">Supported on GitHub</td>
    </tr>
    <tr>
      <td style="text-align: right">Footnotes</td>
      <td style="text-align: center">‚úÖ</td>
      <td style="text-align: left">In Markdown config</td>
    </tr>
  </tbody>
</table>

<h2 id="filepath" dir="auto">Filepath</h2>

<p dir="auto">Here is the <code class="filepath highlighter-rouge notranslate">/path/to/the/file.extend</code>.</p>

<h2 id="footnotes" dir="auto">Footnotes</h2>

<p dir="auto">This sentence has a footnote.
          <sup id="fnref:1">
            <a href="#fn:1" class="footnote" rel="footnote" role="doc-noteref" aria-describedby="footnote-label">1</a>
          </sup>
        </p>

<p dir="auto">This sentence has an another footnote.
          <sup id="fnref:2">
            <a href="#fn:2" class="footnote" rel="footnote" role="doc-noteref" aria-describedby="footnote-label">2</a>
          </sup>
        </p>

<h2 id="misc-elements" dir="auto">Misc elements</h2>

<p dir="auto"><strong>Abbreviation:</strong><br />
The abbreviation for HyperText Markup Language is <abbr title="HyperText Markup Language">HTML</abbr>.</p>

<p dir="auto"><strong>Keyboard Input:</strong><br />
To save, press <kbd>Ctrl</kbd> + <kbd>S</kbd>.</p>

<p dir="auto"><strong>Subscript/Superscript:</strong><br />
H<sub>2</sub>O and E = mc<sup>2</sup></p>

<p dir="auto"><strong>Time Tag:</strong><br />
<time datetime="2025-05-31">May 31, 2025</time></p>
<section class="footnotes" role="doc-endnotes" dir="auto">

          <h2 id="footnote-label" class="visually-hidden" dir="auto">Footnotes</h2>
          <ol class="footnote-list" dir="auto">
  <li id="fn:1" class="footnote-list-item">
    <p dir="auto">This is the footnote content.&nbsp;
            <a href="#fnref:1" class="reverse-footnote" aria-label="Back to reference 1" role="doc-backlink">‚Ü©</a>
          </p>
  </li>
  <li id="fn:2" class="footnote-list-item">
    <p dir="auto">This is the another footnote content.&nbsp;
            <a href="#fnref:2" class="reverse-footnote" aria-label="Back to reference 2" role="doc-backlink">‚Ü©</a>
          </p>
  </li>
  </ol>
</section>]]></content><author><name>Harshal Ladhe</name></author><category term="blogging" /><category term="typography" /><category term="typography" /><category term="design" /><category term="styleguide" /><summary type="html"><![CDATA[This post is a comprehensive test of various HTML elements. It includes headings, paragraphs, lists, tables, forms, code, and more.]]></summary></entry></feed>