<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xml:lang="en">
  <generator uri="https://jekyllrb.com" version="4.3.3">Jekyll</generator>
  <title>Harshal V. LADHE</title>
  <subtitle>I’m a software engineer, freelancer, and lifelong learner passionate about building clean, scalable web solutions. I contribute to open-source, embrace minimalism in code and life, and stay curious about emerging tech.</subtitle>
  <id>https://shivam091.github.io/</id>
  <icon>https://shivam091.github.io/img/favicon.png</icon>
  <updated>2025-08-30T12:30:09+05:30</updated>
  <rights>© 2025 Harshal V. LADHE</rights>

  <link rel="alternate" type="text/html" href="https://shivam091.github.io" />
  <link rel="self" type="application/atom+xml" href="https://shivam091.github.io/atom.xml" />

  
  <author>
    <name>Harshal V. LADHE</name>
    <email>harshal.ladhe.1@gmail.com</email>
    <uri>https://shivam091.github.io</uri>
  </author>
  

  
  <entry xml:lang="en">
    <title>Unleashing CSS Logical Properties</title>
    <link rel="alternate" type="text/html" href="https://shivam091.github.io/post/unleashing-css-logical-properties" />
    <id>https://shivam091.github.io/post/unleashing-css-logical-properties</id>

    <published>2025-08-24T10:22:19+05:30</published>
    <updated>2025-08-24T10:22:19+05:30</updated>

    
    <media:thumbnail
      url="https://shivam091.github.io/assets/img/posts/css/unleashing-css-logical-properties/cover.png"
      width="1200"
      height="800" />
    

    <summary type="html">
      Future-proof your layouts with CSS Logical Properties — one set of styles that adapts across languages, directions, and writing modes — no more messy RTL hac...
    </summary>
    <content type="html"><![CDATA[<h2  id="introduction" dir="auto">Introduction</h2>
<p  dir="auto">In modern web design, layouts must seamlessly adapt to different languages and writing modes — <strong>CSS Logical Properties</strong> offer a future-proof way
to style elements that respect <strong>writing direction</strong>, <strong>text flow</strong>, and <strong>orientation</strong>.</p>
<p  dir="auto">Whether it’s <strong>right-to-left (RTL)</strong> languages like Arabic and Hebrew, or vertical writing in Japanese, logical properties let you create one
stylesheet that works everywhere.</p>
<p  dir="auto">Instead of tying layout to fixed physical directions (<code  class="highlighter-rouge notranslate">left</code>, <code  class="highlighter-rouge notranslate">right</code>, <code  class="highlighter-rouge notranslate">top</code>, <code  class="highlighter-rouge notranslate">bottom</code>), they use flow-relative directions: <strong>start</strong>, <strong>end</strong>, <strong>inline</strong>, and <strong>block</strong>.</p>
<p  dir="auto"><strong>With physical properties:</strong></p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
</pre></td><td class="code"><pre><span class="c">/* Physical properties */</span>
<span class="nt">margin-left</span><span class="o">:</span> <span class="err">1</span><span class="nt">rem</span><span class="o">;</span> <span class="c">/* Always on the left side */</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">In an RTL layout, <code  class="highlighter-rouge notranslate">margin-left</code> still applies to the left side — which may no longer be the “start” of the text.</p>
<p  dir="auto"><strong>With logical properties:</strong></p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
</pre></td><td class="code"><pre><span class="c">/* Logical equivalent */</span>
<span class="nt">margin-inline-start</span><span class="o">:</span> <span class="err">1</span><span class="nt">rem</span><span class="o">;</span> <span class="c">/* Adapts to start side based on writing mode */</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">If the document switches to RTL, <code  class="highlighter-rouge notranslate">margin-inline-start</code> automatically applies to the right — no extra styles needed.</p>
<p  dir="auto">This ensures your layout is <strong>writing mode aware</strong>.</p>

          <blockquote  dir="auto">
            <p  dir="auto">Logical properties are broadly supported in current versions of Chrome, Edge, Firefox, and Safari; verify specifics on MDN when targeting older browsers.</p>
          </blockquote>
        
<h2  id="benefits-of-logical-properties" dir="auto">Benefits of Logical Properties</h2>

          <ol  dir="auto">
              <li><p  dir="auto"><strong>Internationalization Ready</strong> – Works for RTL and vertical writing without needing separate stylesheets.</p></li>
  <li><p  dir="auto"><strong>Consistent Layouts</strong> – Automatically adjusts for writing mode changes, keeping design predictable.</p></li>
  <li><p  dir="auto"><strong>Cleaner Code</strong> – Reduces redundancy and removes the need for duplicated directional styles.</p></li>
  <li><p  dir="auto"><strong>Accessibility Friendly</strong> – Plays nicely with screen readers in RTL and vertical text contexts.</p></li>
  <li><p  dir="auto"><strong>Performance Friendly</strong> – Fewer overrides and media queries improve maintainability.</p></li>
  <li><p  dir="auto"><strong>Future Proof</strong> – Ready for expanded language and writing system support as browsers evolve.</p></li>

          </ol>
        
<h2  id="when-to-use-logical-vs-physical" dir="auto">When to Use Logical vs. Physical</h2>
<p  dir="auto">Logical properties shine when your layout needs to adapt across <strong>different writing modes</strong>, such as left-to-right (English), right-to-left (Arabic/Hebrew), or vertical scripts (Japanese). They future-proof your styles so you don’t have to rewrite CSS when switching directions or supporting multilingual content.</p>
<p  dir="auto">That said, <strong>physical properties aren’t “wrong.”</strong> If your project is a small, LTR-only site (like a personal blog or an internal tool with no internationalization needs), using <code  class="highlighter-rouge notranslate">margin-left</code> or <code  class="highlighter-rouge notranslate">padding-top</code> may be perfectly fine and even easier for quick prototyping.</p>
<p  dir="auto">Think of it this way:</p>

          <ul  dir="auto">
              <li><p  dir="auto">Use <strong>logical properties</strong> when accessibility, scalability, and localization are priorities.</p></li>
  <li><p  dir="auto">Use <strong>physical properties</strong> when the content direction is fixed and simplicity matters.</p></li>

          </ul>
        

          <blockquote  dir="auto">
            <p  dir="auto">Flow-relative properties help assistive tech expose consistent semantics across LTR, RTL, and vertical scripts, reducing
the risk of one-off overrides that drift out of sync.</p>
          </blockquote>
        
<h2  id="understanding-inline-vs-block-axes" dir="auto">Understanding Inline vs Block Axes</h2>
<p  dir="auto"><strong>Inline axis</strong> — the direction in which text flows.</p>
<p  dir="auto"><strong>Block axis</strong> — the direction perpendicular to the inline axis, where blocks (paragraphs, divs) stack.</p>
<p  dir="auto"><strong>Key idea</strong>: Logical properties use <code  class="highlighter-rouge notranslate">inline</code> / <code  class="highlighter-rouge notranslate">block</code> combined with <code  class="highlighter-rouge notranslate">start</code> / <code  class="highlighter-rouge notranslate">end</code>:</p>
          <ul  dir="auto">
              <li><p  dir="auto"><code  class="highlighter-rouge notranslate">inline-start</code> – leading edge of the inline axis (left in LTR, right in RTL, top in some vertical modes).</p></li>
  <li><p  dir="auto"><code  class="highlighter-rouge notranslate">inline-end</code> – trailing edge of the inline axis.</p></li>
  <li><p  dir="auto"><code  class="highlighter-rouge notranslate">block-start</code> – leading edge of the block axis (top in horizontal writing).</p></li>
  <li><p  dir="auto"><code  class="highlighter-rouge notranslate">block-end</code> – trailing edge of the block axis.</p></li>

          </ul>
        
<h3  id="horizontal-tb-ltr--eg-english" dir="auto"><code  class="highlighter-rouge notranslate">horizontal-tb</code> (LTR – e.g., English)</h3>
<pre><code>+-----------------------------------------+
| inline-start                 inline-end |
|    (left)         → inline →   (right)  |
| block-start (top)                       |
|                                         |
|        ↓ block                          |
|                                         |
| block-end (bottom)                      |
+-----------------------------------------+
</code></pre>

<h3  id="horizontal-tb-rtl--eg-arabic-hebrew" dir="auto"><code  class="highlighter-rouge notranslate">horizontal-tb</code> (RTL – e.g., Arabic, Hebrew)</h3>
<pre><code>+-----------------------------------------+
| inline-end                 inline-start |
|    (left)         ← inline ←   (right)  |
| block-start (top)                       |
|                                         |
|        ↓ block                          |
|                                         |
| block-end (bottom)                      |
+-----------------------------------------+
</code></pre>


          <blockquote  dir="auto">
            <p  dir="auto">In RTL: inline axis flows <strong>right</strong> → <strong>left</strong>, so <code  class="highlighter-rouge notranslate">inline-start</code> = right, <code  class="highlighter-rouge notranslate">inline-end</code> = left.</p>
          </blockquote>
        
<h3  id="vertical-rl-eg-traditional-mongolian" dir="auto"><code  class="highlighter-rouge notranslate">vertical-rl</code> (e.g., Traditional Mongolian)</h3>
<pre><code>+----------------+
| block-start  → |  (right)
| inline-start   |  (top)
|                |
|        ↓ block |
|                |
| inline-end     |  (bottom)
| block-end    ← |  (left)
+----------------+
</code></pre>

<h3  id="vertical-lr-eg-some-east-asian-scripts" dir="auto"><code  class="highlighter-rouge notranslate">vertical-lr</code> (e.g., some East Asian scripts)</h3>
<pre><code>+----------------+
| block-start  ← |  (left)
| inline-start   |  (top)
|                |
|        ↓ block |
|                |
| inline-end     |  (bottom)
| block-end    → |  (right)
+----------------+
</code></pre>

<h3  id="quick-reference-logical-vs-physical-mappings" dir="auto">Quick Reference: Logical vs Physical Mappings</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>Writing mode</th>
      <th>Inline axis</th>
      <th>Block axis</th>
      <th>inline-start</th>
      <th>inline-end</th>
      <th>block-start</th>
      <th>block-end</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code  class="highlighter-rouge notranslate">horizontal-tb</code> LTR</td>
      <td>left → right</td>
      <td>top → bottom</td>
      <td>left</td>
      <td>right</td>
      <td>top</td>
      <td>bottom</td>
    </tr>
    <tr>
      <td><code  class="highlighter-rouge notranslate">horizontal-tb</code> RTL</td>
      <td>right → left</td>
      <td>top → bottom</td>
      <td>right</td>
      <td>left</td>
      <td>top</td>
      <td>bottom</td>
    </tr>
    <tr>
      <td><code  class="highlighter-rouge notranslate">vertical-rl</code></td>
      <td>top → bottom</td>
      <td>right → left</td>
      <td>top</td>
      <td>bottom</td>
      <td>right</td>
      <td>left</td>
    </tr>
    <tr>
      <td><code  class="highlighter-rouge notranslate">vertical-lr</code></td>
      <td>top → bottom</td>
      <td>left → right</td>
      <td>top</td>
      <td>bottom</td>
      <td>left</td>
      <td>right</td>
    </tr>
  </tbody>

          </table>
        

          <blockquote  dir="auto">
            <p  dir="auto">Think of <code  class="highlighter-rouge notranslate">inline-*</code> as ‘text flow direction’ and <code  class="highlighter-rouge notranslate">block-*</code> as ‘line stacking direction’.</p>
          </blockquote>
        
<h3  id="inline-vs-block-in-action" dir="auto">Inline vs. Block in Action</h3>
<p  dir="auto"><strong>Example 1 — Inline / Block sizing</strong></p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="nc">.box</span> <span class="p">{</span>
  <span class="py">inline-size</span><span class="p">:</span> <span class="m">40ch</span><span class="p">;</span>    <span class="c">/* horizontal-tb: width; vertical-rl/lr: height */</span>
  <span class="py">block-size</span><span class="p">:</span> <span class="m">10rem</span><span class="p">;</span>    <span class="c">/* horizontal-tb: height; vertical-rl/lr: width */</span>
  <span class="py">padding-inline</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span> <span class="c">/* horizontal-tb: left &amp; right; vertical: top &amp; bottom */</span>
  <span class="py">padding-block</span><span class="p">:</span> <span class="m">0.5rem</span><span class="p">;</span><span class="c">/* horizontal-tb: top &amp; bottom; vertical: right &amp; left */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong>Example 2 — Direction-aware margins</strong></p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="nc">.card</span> <span class="p">{</span>
  <span class="py">margin-inline-start</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span> <span class="c">/* horizontal LTR: left; horizontal RTL: right; vertical: top */</span>
  <span class="py">margin-block-start</span><span class="p">:</span> <span class="m">2rem</span><span class="p">;</span>  <span class="c">/* horizontal: top; vertical-rl: right; vertical-lr: left */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong>Example 3 — Switching writing modes</strong></p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="c">/* Default: horizontal LTR */</span>
<span class="nc">.article</span> <span class="p">{</span>
  <span class="nl">writing-mode</span><span class="p">:</span> <span class="n">horizontal-tb</span><span class="p">;</span>
  <span class="nl">direction</span><span class="p">:</span> <span class="nb">ltr</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">/* Vertical (e.g., Japanese-style) */</span>
<span class="nc">.vertical</span> <span class="p">{</span>
  <span class="nl">writing-mode</span><span class="p">:</span> <span class="n">vertical-rl</span><span class="p">;</span>
  <span class="c">/* Set `direction` only if your content is RTL; otherwise omit. */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<h2  id="categories-of-logical-properties" dir="auto">Categories of Logical Properties</h2>
<p  dir="auto">Here’s a categorized list of logical properties with their physical equivalents — use this as your quick lookup table.</p>
<h3  id="dimension" dir="auto">Dimension</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">inline-size</code></strong></td>
      <td>Logical width in the inline axis</td>
      <td><code  class="highlighter-rouge notranslate">width</code></td>
      <td><code  class="highlighter-rouge notranslate">width</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">block-size</code></strong></td>
      <td>Logical height in the block axis</td>
      <td><code  class="highlighter-rouge notranslate">height</code></td>
      <td><code  class="highlighter-rouge notranslate">height</code></td>
    </tr>
    <tr>
      <td>3</td>
      <td><strong><code  class="highlighter-rouge notranslate">min-inline-size</code></strong></td>
      <td>Minimum width in the inline axis</td>
      <td><code  class="highlighter-rouge notranslate">min-width</code></td>
      <td><code  class="highlighter-rouge notranslate">min-width</code></td>
    </tr>
    <tr>
      <td>4</td>
      <td><strong><code  class="highlighter-rouge notranslate">max-inline-size</code></strong></td>
      <td>Maximum width in the inline axis</td>
      <td><code  class="highlighter-rouge notranslate">max-width</code></td>
      <td><code  class="highlighter-rouge notranslate">max-width</code></td>
    </tr>
    <tr>
      <td>5</td>
      <td><strong><code  class="highlighter-rouge notranslate">min-block-size</code></strong></td>
      <td>Minimum height in the block axis</td>
      <td><code  class="highlighter-rouge notranslate">min-height</code></td>
      <td><code  class="highlighter-rouge notranslate">min-height</code></td>
    </tr>
    <tr>
      <td>6</td>
      <td><strong><code  class="highlighter-rouge notranslate">max-block-size</code></strong></td>
      <td>Maximum height in the block axis</td>
      <td><code  class="highlighter-rouge notranslate">max-height</code></td>
      <td><code  class="highlighter-rouge notranslate">max-height</code></td>
    </tr>
  </tbody>

          </table>
        
<h3  id="margin" dir="auto">Margin</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">margin-inline-start</code></strong></td>
      <td>Margin at the start of the inline axis</td>
      <td><code  class="highlighter-rouge notranslate">margin-left</code></td>
      <td><code  class="highlighter-rouge notranslate">margin-right</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">margin-inline-end</code></strong></td>
      <td>Margin at the end of the inline axis</td>
      <td><code  class="highlighter-rouge notranslate">margin-right</code></td>
      <td><code  class="highlighter-rouge notranslate">margin-left</code></td>
    </tr>
    <tr>
      <td>3</td>
      <td><strong><code  class="highlighter-rouge notranslate">margin-inline</code></strong></td>
      <td>Shorthand for both <code  class="highlighter-rouge notranslate">margin-inline-start</code> and <code  class="highlighter-rouge notranslate">margin-inline-end</code></td>
      <td><code  class="highlighter-rouge notranslate">margin-left</code> + <code  class="highlighter-rouge notranslate">margin-right</code></td>
      <td><code  class="highlighter-rouge notranslate">margin-right</code> + <code  class="highlighter-rouge notranslate">margin-left</code></td>
    </tr>
    <tr>
      <td>4</td>
      <td><strong><code  class="highlighter-rouge notranslate">margin-block-start</code></strong></td>
      <td>Margin at the start of the block axis</td>
      <td><code  class="highlighter-rouge notranslate">margin-top</code></td>
      <td><code  class="highlighter-rouge notranslate">margin-top</code></td>
    </tr>
    <tr>
      <td>5</td>
      <td><strong><code  class="highlighter-rouge notranslate">margin-block-end</code></strong></td>
      <td>Margin at the end of the block axis</td>
      <td><code  class="highlighter-rouge notranslate">margin-bottom</code></td>
      <td><code  class="highlighter-rouge notranslate">margin-bottom</code></td>
    </tr>
    <tr>
      <td>6</td>
      <td><strong><code  class="highlighter-rouge notranslate">margin-block</code></strong></td>
      <td>Shorthand for both <code  class="highlighter-rouge notranslate">margin-block-start</code> and <code  class="highlighter-rouge notranslate">margin-block-end</code></td>
      <td><code  class="highlighter-rouge notranslate">margin-top</code> + <code  class="highlighter-rouge notranslate">margin-bottom</code></td>
      <td><code  class="highlighter-rouge notranslate">margin-top</code> + <code  class="highlighter-rouge notranslate">margin-bottom</code></td>
    </tr>
  </tbody>

          </table>
        
<h3  id="padding" dir="auto">Padding</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">padding-inline-start</code></strong></td>
      <td>Padding at the start of the inline axis</td>
      <td><code  class="highlighter-rouge notranslate">padding-left</code></td>
      <td><code  class="highlighter-rouge notranslate">padding-right</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">padding-inline-end</code></strong></td>
      <td>Padding at the end of the inline axis</td>
      <td><code  class="highlighter-rouge notranslate">padding-right</code></td>
      <td><code  class="highlighter-rouge notranslate">padding-left</code></td>
    </tr>
    <tr>
      <td>3</td>
      <td><strong><code  class="highlighter-rouge notranslate">padding-inline</code></strong></td>
      <td>Shorthand for both <code  class="highlighter-rouge notranslate">padding-inline-start</code> and <code  class="highlighter-rouge notranslate">padding-inline-end</code></td>
      <td><code  class="highlighter-rouge notranslate">padding-left</code> + <code  class="highlighter-rouge notranslate">padding-right</code></td>
      <td><code  class="highlighter-rouge notranslate">padding-right</code> + <code  class="highlighter-rouge notranslate">padding-left</code></td>
    </tr>
    <tr>
      <td>4</td>
      <td><strong><code  class="highlighter-rouge notranslate">padding-block-start</code></strong></td>
      <td>Padding at the start of the block axis</td>
      <td><code  class="highlighter-rouge notranslate">padding-top</code></td>
      <td><code  class="highlighter-rouge notranslate">padding-top</code></td>
    </tr>
    <tr>
      <td>5</td>
      <td><strong><code  class="highlighter-rouge notranslate">padding-block-end</code></strong></td>
      <td>Padding at the end of the block axis</td>
      <td><code  class="highlighter-rouge notranslate">padding-bottom</code></td>
      <td><code  class="highlighter-rouge notranslate">padding-bottom</code></td>
    </tr>
    <tr>
      <td>6</td>
      <td><strong><code  class="highlighter-rouge notranslate">padding-block</code></strong></td>
      <td>Shorthand for both <code  class="highlighter-rouge notranslate">padding-block-start</code> and <code  class="highlighter-rouge notranslate">padding-block-end</code></td>
      <td><code  class="highlighter-rouge notranslate">padding-top</code> + <code  class="highlighter-rouge notranslate">padding-bottom</code></td>
      <td><code  class="highlighter-rouge notranslate">padding-top</code> + <code  class="highlighter-rouge notranslate">padding-bottom</code></td>
    </tr>
  </tbody>

          </table>
        
<h3  id="borders" dir="auto">Borders</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-inline-start</code></strong></td>
      <td>Border at the start of the inline axis</td>
      <td><code  class="highlighter-rouge notranslate">border-left</code></td>
      <td><code  class="highlighter-rouge notranslate">border-right</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-inline-end</code></strong></td>
      <td>Border at the end of the inline axis</td>
      <td><code  class="highlighter-rouge notranslate">border-right</code></td>
      <td><code  class="highlighter-rouge notranslate">border-left</code></td>
    </tr>
    <tr>
      <td>3</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-inline</code></strong></td>
      <td>Shorthand for both <code  class="highlighter-rouge notranslate">border-inline-start</code> and <code  class="highlighter-rouge notranslate">border-inline-end</code></td>
      <td><code  class="highlighter-rouge notranslate">border-left</code> + <code  class="highlighter-rouge notranslate">border-right</code></td>
      <td><code  class="highlighter-rouge notranslate">border-right</code> + <code  class="highlighter-rouge notranslate">border-left</code></td>
    </tr>
    <tr>
      <td>4</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-block-start</code></strong></td>
      <td>Border at the start of the block axis</td>
      <td><code  class="highlighter-rouge notranslate">border-top</code></td>
      <td><code  class="highlighter-rouge notranslate">border-top</code></td>
    </tr>
    <tr>
      <td>5</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-block-end</code></strong></td>
      <td>Border at the end of the block axis</td>
      <td><code  class="highlighter-rouge notranslate">border-bottom</code></td>
      <td><code  class="highlighter-rouge notranslate">border-bottom</code></td>
    </tr>
    <tr>
      <td>6</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-block</code></strong></td>
      <td>Shorthand for both <code  class="highlighter-rouge notranslate">border-block-start</code> and <code  class="highlighter-rouge notranslate">border-block-end</code></td>
      <td><code  class="highlighter-rouge notranslate">border-top</code> + <code  class="highlighter-rouge notranslate">border-bottom</code></td>
      <td><code  class="highlighter-rouge notranslate">border-top</code> + <code  class="highlighter-rouge notranslate">border-bottom</code></td>
    </tr>
    <tr>
      <td>7</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-inline-start-width</code></strong></td>
      <td>Width of the border at inline-start</td>
      <td><code  class="highlighter-rouge notranslate">border-left-width</code></td>
      <td><code  class="highlighter-rouge notranslate">border-right-width</code></td>
    </tr>
    <tr>
      <td>8</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-inline-start-color</code></strong></td>
      <td>Color of the border at inline-start</td>
      <td><code  class="highlighter-rouge notranslate">border-left-color</code></td>
      <td><code  class="highlighter-rouge notranslate">border-right-color</code></td>
    </tr>
    <tr>
      <td>9</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-inline-start-style</code></strong></td>
      <td>Style of the border at inline-start</td>
      <td><code  class="highlighter-rouge notranslate">border-left-style</code></td>
      <td><code  class="highlighter-rouge notranslate">border-right-style</code></td>
    </tr>
    <tr>
      <td>10</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-inline-end-width</code></strong></td>
      <td>Width of the border at inline-end</td>
      <td><code  class="highlighter-rouge notranslate">border-right-width</code></td>
      <td><code  class="highlighter-rouge notranslate">border-left-width</code></td>
    </tr>
    <tr>
      <td>11</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-inline-end-color</code></strong></td>
      <td>Color of the border at inline-end</td>
      <td><code  class="highlighter-rouge notranslate">border-right-color</code></td>
      <td><code  class="highlighter-rouge notranslate">border-left-color</code></td>
    </tr>
    <tr>
      <td>12</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-inline-end-style</code></strong></td>
      <td>Style of the border at inline-end</td>
      <td><code  class="highlighter-rouge notranslate">border-right-style</code></td>
      <td><code  class="highlighter-rouge notranslate">border-left-style</code></td>
    </tr>
    <tr>
      <td>13</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-block-start-width</code></strong></td>
      <td>Width of the border at block-start</td>
      <td><code  class="highlighter-rouge notranslate">border-top-width</code></td>
      <td><code  class="highlighter-rouge notranslate">border-top-width</code></td>
    </tr>
    <tr>
      <td>14</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-block-start-color</code></strong></td>
      <td>Color of the border at block-start</td>
      <td><code  class="highlighter-rouge notranslate">border-top-color</code></td>
      <td><code  class="highlighter-rouge notranslate">border-top-color</code></td>
    </tr>
    <tr>
      <td>15</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-block-start-style</code></strong></td>
      <td>Style of the border at block-start</td>
      <td><code  class="highlighter-rouge notranslate">border-top-style</code></td>
      <td><code  class="highlighter-rouge notranslate">border-top-style</code></td>
    </tr>
    <tr>
      <td>16</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-block-end-width</code></strong></td>
      <td>Width of the border at block-end</td>
      <td><code  class="highlighter-rouge notranslate">border-bottom-width</code></td>
      <td><code  class="highlighter-rouge notranslate">border-bottom-width</code></td>
    </tr>
    <tr>
      <td>17</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-block-end-color</code></strong></td>
      <td>Color of the border at block-end</td>
      <td><code  class="highlighter-rouge notranslate">border-bottom-color</code></td>
      <td><code  class="highlighter-rouge notranslate">border-bottom-color</code></td>
    </tr>
    <tr>
      <td>18</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-block-end-style</code></strong></td>
      <td>Style of the border at block-end</td>
      <td><code  class="highlighter-rouge notranslate">border-bottom-style</code></td>
      <td><code  class="highlighter-rouge notranslate">border-bottom-style</code></td>
    </tr>
    <tr>
      <td>19</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-inline-width</code></strong></td>
      <td>Shorthand for width of borders on both inline sides</td>
      <td><code  class="highlighter-rouge notranslate">border-left-width</code> + <code  class="highlighter-rouge notranslate">border-right-width</code></td>
      <td><code  class="highlighter-rouge notranslate">border-right-width</code> + <code  class="highlighter-rouge notranslate">border-left-width</code></td>
    </tr>
    <tr>
      <td>20</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-inline-style</code></strong></td>
      <td>Shorthand for style of borders on both inline sides</td>
      <td><code  class="highlighter-rouge notranslate">border-left-style</code> + <code  class="highlighter-rouge notranslate">border-right-style</code></td>
      <td><code  class="highlighter-rouge notranslate">border-right-style</code> + <code  class="highlighter-rouge notranslate">border-left-style</code></td>
    </tr>
    <tr>
      <td>21</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-inline-color</code></strong></td>
      <td>Shorthand for color of borders on both inline sides</td>
      <td><code  class="highlighter-rouge notranslate">border-left-color</code> + <code  class="highlighter-rouge notranslate">border-right-color</code></td>
      <td><code  class="highlighter-rouge notranslate">border-right-color</code> + <code  class="highlighter-rouge notranslate">border-left-color</code></td>
    </tr>
    <tr>
      <td>22</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-block-width</code></strong></td>
      <td>Shorthand for width of borders on both block sides</td>
      <td><code  class="highlighter-rouge notranslate">border-top-width</code> + <code  class="highlighter-rouge notranslate">border-bottom-width</code></td>
      <td><code  class="highlighter-rouge notranslate">border-top-width</code> + <code  class="highlighter-rouge notranslate">border-bottom-width</code></td>
    </tr>
    <tr>
      <td>23</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-block-style</code></strong></td>
      <td>Shorthand for style of borders on both block sides</td>
      <td><code  class="highlighter-rouge notranslate">border-top-style</code> + <code  class="highlighter-rouge notranslate">border-bottom-style</code></td>
      <td><code  class="highlighter-rouge notranslate">border-top-style</code> + <code  class="highlighter-rouge notranslate">border-bottom-style</code></td>
    </tr>
    <tr>
      <td>24</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-block-color</code></strong></td>
      <td>Shorthand for color of borders on both block sides</td>
      <td><code  class="highlighter-rouge notranslate">border-top-color</code> + <code  class="highlighter-rouge notranslate">border-bottom-color</code></td>
      <td><code  class="highlighter-rouge notranslate">border-top-color</code> + <code  class="highlighter-rouge notranslate">border-bottom-color</code></td>
    </tr>
  </tbody>

          </table>
        
<h3  id="border-radius" dir="auto">Border Radius</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-start-start-radius</code></strong></td>
      <td>Radius for the corner where block-start and inline-start meet</td>
      <td><code  class="highlighter-rouge notranslate">border-top-left-radius</code></td>
      <td><code  class="highlighter-rouge notranslate">border-top-right-radius</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-start-end-radius</code></strong></td>
      <td>Radius for the corner where block-start and inline-end meet</td>
      <td><code  class="highlighter-rouge notranslate">border-top-right-radius</code></td>
      <td><code  class="highlighter-rouge notranslate">border-top-left-radius</code></td>
    </tr>
    <tr>
      <td>3</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-end-start-radius</code></strong></td>
      <td>Radius for the corner where block-end and inline-start meet</td>
      <td><code  class="highlighter-rouge notranslate">border-bottom-left-radius</code></td>
      <td><code  class="highlighter-rouge notranslate">border-bottom-right-radius</code></td>
    </tr>
    <tr>
      <td>4</td>
      <td><strong><code  class="highlighter-rouge notranslate">border-end-end-radius</code></strong></td>
      <td>Radius for the corner where block-end and inline-end meet</td>
      <td><code  class="highlighter-rouge notranslate">border-bottom-right-radius</code></td>
      <td><code  class="highlighter-rouge notranslate">border-bottom-left-radius</code></td>
    </tr>
  </tbody>

          </table>
        
<h3  id="positioning--offsets" dir="auto">Positioning / Offsets</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">inset-inline-start</code></strong></td>
      <td>Offset from the inline-start edge</td>
      <td><code  class="highlighter-rouge notranslate">left</code></td>
      <td><code  class="highlighter-rouge notranslate">right</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">inset-inline-end</code></strong></td>
      <td>Offset from the inline-end edge</td>
      <td><code  class="highlighter-rouge notranslate">right</code></td>
      <td><code  class="highlighter-rouge notranslate">left</code></td>
    </tr>
    <tr>
      <td>3</td>
      <td><strong><code  class="highlighter-rouge notranslate">inset-inline</code></strong></td>
      <td>Shorthand for both <code  class="highlighter-rouge notranslate">inset-inline-start</code> and <code  class="highlighter-rouge notranslate">inset-inline-end</code></td>
      <td><code  class="highlighter-rouge notranslate">left</code> + <code  class="highlighter-rouge notranslate">right</code></td>
      <td><code  class="highlighter-rouge notranslate">right</code> + <code  class="highlighter-rouge notranslate">left</code></td>
    </tr>
    <tr>
      <td>4</td>
      <td><strong><code  class="highlighter-rouge notranslate">inset-block-start</code></strong></td>
      <td>Offset from the block-start edge</td>
      <td><code  class="highlighter-rouge notranslate">top</code></td>
      <td><code  class="highlighter-rouge notranslate">top</code></td>
    </tr>
    <tr>
      <td>5</td>
      <td><strong><code  class="highlighter-rouge notranslate">inset-block-end</code></strong></td>
      <td>Offset from the block-end edge</td>
      <td><code  class="highlighter-rouge notranslate">bottom</code></td>
      <td><code  class="highlighter-rouge notranslate">bottom</code></td>
    </tr>
    <tr>
      <td>6</td>
      <td><strong><code  class="highlighter-rouge notranslate">inset-block</code></strong></td>
      <td>Shorthand for both <code  class="highlighter-rouge notranslate">inset-block-start</code> and <code  class="highlighter-rouge notranslate">inset-block-end</code></td>
      <td><code  class="highlighter-rouge notranslate">top</code> + <code  class="highlighter-rouge notranslate">bottom</code></td>
      <td><code  class="highlighter-rouge notranslate">top</code> + <code  class="highlighter-rouge notranslate">bottom</code></td>
    </tr>
    <tr>
      <td>7</td>
      <td><strong><code  class="highlighter-rouge notranslate">inset</code></strong></td>
      <td>Shorthand for all four logical inset properties</td>
      <td><code  class="highlighter-rouge notranslate">top</code> + <code  class="highlighter-rouge notranslate">right</code> + <code  class="highlighter-rouge notranslate">bottom</code> + <code  class="highlighter-rouge notranslate">left</code></td>
      <td><code  class="highlighter-rouge notranslate">top</code> + <code  class="highlighter-rouge notranslate">right</code> + <code  class="highlighter-rouge notranslate">bottom</code> + <code  class="highlighter-rouge notranslate">left</code></td>
    </tr>
  </tbody>

          </table>
        
<h3  id="resizing" dir="auto">Resizing</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property / Value</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">resize: block</code></strong></td>
      <td>Allows resize in block axis only.</td>
      <td><code  class="highlighter-rouge notranslate">resize: vertical</code></td>
      <td><code  class="highlighter-rouge notranslate">resize: vertical</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">resize: inline</code></strong></td>
      <td>Allows resize in inline axis only.</td>
      <td><code  class="highlighter-rouge notranslate">resize: horizontal</code></td>
      <td><code  class="highlighter-rouge notranslate">resize: horizontal</code></td>
    </tr>
  </tbody>

          </table>
        
<h3  id="containment" dir="auto">Containment</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">contain-intrinsic-block-size</code></strong></td>
      <td>Specifies the element’s intrinsic size in the block (vertical) axis when its contents are subject to size containment.</td>
      <td><code  class="highlighter-rouge notranslate">contain-intrinsic-height</code></td>
      <td><code  class="highlighter-rouge notranslate">contain-intrinsic-height</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">contain-intrinsic-inline-size</code></strong></td>
      <td>Specifies the element’s intrinsic size in the inline (horizontal) axis when its contents are subject to size containment.</td>
      <td><code  class="highlighter-rouge notranslate">contain-intrinsic-width</code></td>
      <td><code  class="highlighter-rouge notranslate">contain-intrinsic-width</code></td>
    </tr>
  </tbody>

          </table>
        
<h3  id="floats--clears" dir="auto">Floats &amp; Clears</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property / Value</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">float: inline-start</code></strong></td>
      <td>Floats an element to the start side of the inline axis (like <code  class="highlighter-rouge notranslate">float: left</code> in LTR).</td>
      <td><code  class="highlighter-rouge notranslate">float: left</code></td>
      <td><code  class="highlighter-rouge notranslate">float: right</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">float: inline-end</code></strong></td>
      <td>Floats an element to the end side of the inline axis.</td>
      <td><code  class="highlighter-rouge notranslate">float: right</code></td>
      <td><code  class="highlighter-rouge notranslate">float: left</code></td>
    </tr>
    <tr>
      <td>3</td>
      <td><strong><code  class="highlighter-rouge notranslate">clear: inline-start</code></strong></td>
      <td>Prevents floating elements on the start side.</td>
      <td><code  class="highlighter-rouge notranslate">clear: left</code></td>
      <td><code  class="highlighter-rouge notranslate">clear: right</code></td>
    </tr>
    <tr>
      <td>4</td>
      <td><strong><code  class="highlighter-rouge notranslate">clear: inline-end</code></strong></td>
      <td>Prevents floating elements on the end side.</td>
      <td><code  class="highlighter-rouge notranslate">clear: right</code></td>
      <td><code  class="highlighter-rouge notranslate">clear: left</code></td>
    </tr>
  </tbody>

          </table>
        
<h3  id="text-alignment" dir="auto">Text Alignment</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property / Value</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">text-align: start</code></strong></td>
      <td>Aligns text to the start side of the inline axis.</td>
      <td><code  class="highlighter-rouge notranslate">text-align: left</code></td>
      <td><code  class="highlighter-rouge notranslate">text-align: right</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">text-align: end</code></strong></td>
      <td>Aligns text to the end side of the inline axis.</td>
      <td><code  class="highlighter-rouge notranslate">text-align: right</code></td>
      <td><code  class="highlighter-rouge notranslate">text-align: left</code></td>
    </tr>
  </tbody>

          </table>
        
<h3  id="tables" dir="auto">Tables</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property / Value</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">caption-side: block-start</code></strong></td>
      <td>Places table caption before table block axis.</td>
      <td><code  class="highlighter-rouge notranslate">caption-side: top</code></td>
      <td><code  class="highlighter-rouge notranslate">caption-side: top</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">caption-side: block-end</code></strong></td>
      <td>Places table caption after table block axis.</td>
      <td><code  class="highlighter-rouge notranslate">caption-side: bottom</code></td>
      <td><code  class="highlighter-rouge notranslate">caption-side: bottom</code></td>
    </tr>
    <tr>
      <td>3</td>
      <td><strong><code  class="highlighter-rouge notranslate">caption-side: inline-start</code></strong></td>
      <td>Places caption at inline start of table.</td>
      <td><code  class="highlighter-rouge notranslate">caption-side: left</code></td>
      <td><code  class="highlighter-rouge notranslate">caption-side: right</code></td>
    </tr>
    <tr>
      <td>4</td>
      <td><strong><code  class="highlighter-rouge notranslate">caption-side: inline-end</code></strong></td>
      <td>Places caption at inline end of table.</td>
      <td><code  class="highlighter-rouge notranslate">caption-side: right</code></td>
      <td><code  class="highlighter-rouge notranslate">caption-side: left</code></td>
    </tr>
  </tbody>

          </table>
        
<h3  id="scroll-margin" dir="auto">Scroll Margin</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-margin-inline-start</code></strong></td>
      <td>Scroll margin at inline start edge</td>
      <td><code  class="highlighter-rouge notranslate">scroll-margin-left</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-margin-right</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-margin-inline-end</code></strong></td>
      <td>Scroll margin at inline end edge</td>
      <td><code  class="highlighter-rouge notranslate">scroll-margin-right</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-margin-left</code></td>
    </tr>
    <tr>
      <td>3</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-margin-inline</code></strong></td>
      <td>Shorthand for both <code  class="highlighter-rouge notranslate">inline-start</code> and <code  class="highlighter-rouge notranslate">inline-end</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-margin-left</code> + <code  class="highlighter-rouge notranslate">scroll-margin-right</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-margin-right</code> + <code  class="highlighter-rouge notranslate">scroll-margin-left</code></td>
    </tr>
    <tr>
      <td>4</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-margin-block-start</code></strong></td>
      <td>Scroll margin at block start edge</td>
      <td><code  class="highlighter-rouge notranslate">scroll-margin-top</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-margin-top</code></td>
    </tr>
    <tr>
      <td>5</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-margin-block-end</code></strong></td>
      <td>Scroll margin at block end edge</td>
      <td><code  class="highlighter-rouge notranslate">scroll-margin-bottom</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-margin-bottom</code></td>
    </tr>
    <tr>
      <td>6</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-margin-block</code></strong></td>
      <td>Shorthand for both <code  class="highlighter-rouge notranslate">block-start</code> and <code  class="highlighter-rouge notranslate">block-end</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-margin-top</code> + <code  class="highlighter-rouge notranslate">scroll-margin-bottom</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-margin-top</code> + <code  class="highlighter-rouge notranslate">scroll-margin-bottom</code></td>
    </tr>
  </tbody>

          </table>
        
<h3  id="scroll-padding" dir="auto">Scroll Padding</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-padding-inline-start</code></strong></td>
      <td>Scroll padding at inline start edge</td>
      <td><code  class="highlighter-rouge notranslate">scroll-padding-left</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-padding-right</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-padding-inline-end</code></strong></td>
      <td>Scroll padding at inline end edge</td>
      <td><code  class="highlighter-rouge notranslate">scroll-padding-right</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-padding-left</code></td>
    </tr>
    <tr>
      <td>3</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-padding-inline</code></strong></td>
      <td>Shorthand for both <code  class="highlighter-rouge notranslate">inline-start</code> and <code  class="highlighter-rouge notranslate">inline-end</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-padding-left</code> + <code  class="highlighter-rouge notranslate">scroll-padding-right</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-padding-right</code> + <code  class="highlighter-rouge notranslate">scroll-padding-left</code></td>
    </tr>
    <tr>
      <td>4</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-padding-block-start</code></strong></td>
      <td>Scroll padding at block start edge</td>
      <td><code  class="highlighter-rouge notranslate">scroll-padding-top</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-padding-top</code></td>
    </tr>
    <tr>
      <td>5</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-padding-block-end</code></strong></td>
      <td>Scroll padding at block end edge</td>
      <td><code  class="highlighter-rouge notranslate">scroll-padding-bottom</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-padding-bottom</code></td>
    </tr>
    <tr>
      <td>6</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-padding-block</code></strong></td>
      <td>Shorthand for both <code  class="highlighter-rouge notranslate">block-start</code> and <code  class="highlighter-rouge notranslate">block-end</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-padding-top</code> + <code  class="highlighter-rouge notranslate">scroll-padding-bottom</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-padding-top</code> + <code  class="highlighter-rouge notranslate">scroll-padding-bottom</code></td>
    </tr>
  </tbody>

          </table>
        
<h3  id="overflow" dir="auto">Overflow</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">overflow-block</code></strong></td>
      <td>Controls overflow in the block direction (top → bottom in LTR/RTL).</td>
      <td><code  class="highlighter-rouge notranslate">overflow-y</code></td>
      <td><code  class="highlighter-rouge notranslate">overflow-y</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">overflow-inline</code></strong></td>
      <td>Controls overflow in the inline direction (left → right in LTR, right → left in RTL).</td>
      <td><code  class="highlighter-rouge notranslate">overflow-x</code></td>
      <td><code  class="highlighter-rouge notranslate">overflow-x</code></td>
    </tr>
  </tbody>

          </table>
        
<h3  id="overscroll-behavior" dir="auto">Overscroll Behavior</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">overscroll-behavior-inline</code></strong></td>
      <td>Overscroll behavior in inline axis</td>
      <td><code  class="highlighter-rouge notranslate">overscroll-behavior-x</code></td>
      <td><code  class="highlighter-rouge notranslate">overscroll-behavior-x</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">overscroll-behavior-block</code></strong></td>
      <td>Overscroll behavior in block axis</td>
      <td><code  class="highlighter-rouge notranslate">overscroll-behavior-y</code></td>
      <td><code  class="highlighter-rouge notranslate">overscroll-behavior-y</code></td>
    </tr>
  </tbody>

          </table>
        

          <blockquote  dir="auto">
            <p  dir="auto">Note: Inline maps to horizontal, block maps to vertical — regardless of writing direction.</p>
          </blockquote>
        
<h3  id="scroll-snap" dir="auto">Scroll Snap</h3>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>#</th>
      <th>Logical Property / Value</th>
      <th>Description</th>
      <th>Physical LTR Equivalent</th>
      <th>Physical RTL Equivalent</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-snap-type: block</code></strong></td>
      <td>Defines scroll snapping along the <strong>block axis</strong> (vertical in LTR/RTL).</td>
      <td><code  class="highlighter-rouge notranslate">scroll-snap-type: y</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-snap-type: y</code></td>
    </tr>
    <tr>
      <td>2</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-snap-type: inline</code></strong></td>
      <td>Defines scroll snapping along the <strong>inline axis</strong> (horizontal in LTR/RTL).</td>
      <td><code  class="highlighter-rouge notranslate">scroll-snap-type: x</code></td>
      <td><code  class="highlighter-rouge notranslate">scroll-snap-type: x</code></td>
    </tr>
    <tr>
      <td>3</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-snap-align: start</code></strong></td>
      <td>Snap aligns the element’s <strong>start edge</strong> with the scroll container’s snap position.</td>
      <td>Top / Left</td>
      <td>Top / Right</td>
    </tr>
    <tr>
      <td>4</td>
      <td><strong><code  class="highlighter-rouge notranslate">scroll-snap-align: end</code></strong></td>
      <td>Snap aligns the element’s <strong>end edge</strong> with the scroll container’s snap position.</td>
      <td>Bottom / Right</td>
      <td>Bottom / Left</td>
    </tr>
  </tbody>

          </table>
        
<h2  id="interactive-example" dir="auto">Interactive Example</h2>
<p  dir="auto">Now that we’ve seen the different categories of logical properties, let’s try a small live example to see them in action.</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      HTML
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-html" data-lang="html"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="c">&lt;!-- Logical padding &amp; margin example --&gt;</span>
<span class="nt">&lt;article</span> <span class="na">class=</span><span class="s">"card"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;header</span> <span class="na">class=</span><span class="s">"card-header"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"avatar"</span><span class="nt">&gt;&lt;/div&gt;</span>
    <span class="nt">&lt;div&gt;</span>
      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"title"</span><span class="nt">&gt;</span>Logical padding <span class="ni">&amp;amp;</span> margin<span class="nt">&lt;/div&gt;</span>
      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"meta"</span><span class="nt">&gt;</span>Uses <span class="nt">&lt;code&gt;</span>padding-inline<span class="nt">&lt;/code&gt;</span> <span class="ni">&amp;amp;</span> <span class="nt">&lt;code&gt;</span>margin-block<span class="nt">&lt;/code&gt;&lt;/div&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/header&gt;</span>

  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card-body"</span><span class="nt">&gt;</span>
    Logical properties adapt based on writing mode <span class="err">&amp;</span> direction.
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/article&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="nc">.card</span> <span class="p">{</span>
  <span class="py">padding-block</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="py">padding-inline</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/NPGavRO" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/NPGavRO" class="external-link">View Full Interactive Demo on CodePen</a></p>
<h2  id="best-practices" dir="auto">Best Practices</h2>

          <ul  dir="auto">
              <li><p  dir="auto"><strong>Start with fallbacks</strong> — Use physical as fallbacks, then layer logical — don’t mix both unintentionally</p></li>
  <li><p  dir="auto"><strong>Test different flows</strong> — Validate layouts in both <code  class="highlighter-rouge notranslate">horizontal-tb</code> and <code  class="highlighter-rouge notranslate">vertical-rl</code> writing modes to catch axis-mapping issues.</p></li>
  <li><p  dir="auto"><strong>Prefer explicit properties</strong> — Use individual logical properties (<code  class="highlighter-rouge notranslate">margin-inline-start</code>) instead of shorthands for broader browser support.</p></li>
  <li><p  dir="auto"><strong>Handle RTL layouts</strong> — Apply <code  class="highlighter-rouge notranslate">direction: rtl</code> for languages like <strong>Arabic</strong> and <strong>Hebrew</strong> to switch inline flow automatically.</p></li>
  <li><p  dir="auto"><strong>Control writing flow</strong> — Use <code  class="highlighter-rouge notranslate">writing-mode</code> for vertical text layouts, keeping in mind that block and inline axes swap roles.</p></li>
  <li><p  dir="auto"><strong>Use alignment shortcuts</strong> — Rely on <code  class="highlighter-rouge notranslate">text-align: start</code> / <code  class="highlighter-rouge notranslate">end</code> to adapt automatically in LTR and RTL contexts.</p></li>
  <li><p  dir="auto"><strong>Adopt logical positioning</strong> — Replace physical offsets (<code  class="highlighter-rouge notranslate">top</code>, <code  class="highlighter-rouge notranslate">right</code>, <code  class="highlighter-rouge notranslate">bottom</code>, <code  class="highlighter-rouge notranslate">left</code>) with <code  class="highlighter-rouge notranslate">inset-block</code> / <code  class="highlighter-rouge notranslate">inset-inline</code> for flexibility.</p></li>
  <li><p  dir="auto"><strong>Check browser support</strong> — Always confirm on <a  href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values#browser_compatibility" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values#browser_compatibility" class="external-link">MDN’s compatibility tables</a> before using less common logical properties.</p></li>

          </ul>
        
<h2  id="fallbacks-for-older-browsers" dir="auto">Fallbacks for Older Browsers</h2>
<p  dir="auto">If you need to support older browsers that don’t recognize logical properties, you can define physical property fallbacks first, followed by
your logical properties. This ensures that browsers without logical property support (e.g., Internet Explorer) still display layouts correctly.</p>
<p  dir="auto"><strong>Without Logical Properties (LTR &amp; RTL handled separately):</strong></p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre><span class="c">/* LTR */</span>
<span class="nc">.card</span> <span class="p">{</span>
  <span class="nl">margin-left</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">padding-left</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">text-align</span><span class="p">:</span> <span class="nb">left</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">/* RTL */</span>
<span class="nt">html</span><span class="o">[</span><span class="nt">dir</span><span class="o">=</span><span class="s1">"rtl"</span><span class="o">]</span> <span class="nc">.card</span> <span class="p">{</span>
  <span class="nl">margin-right</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">padding-right</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">text-align</span><span class="p">:</span> <span class="nb">right</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong>With Logical Properties (Single stylesheet):</strong></p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="code"><pre><span class="nc">.card</span> <span class="p">{</span>
  <span class="py">margin-inline-start</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="py">padding-inline-start</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">text-align</span><span class="p">:</span> <span class="nb">start</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong>Hybrid Approach (Fallback + Logical):</strong></p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="nc">.card</span> <span class="p">{</span>
  <span class="c">/* Physical property fallbacks */</span>
  <span class="nl">margin-left</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">padding-left</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">text-align</span><span class="p">:</span> <span class="nb">left</span><span class="p">;</span>

  <span class="c">/* Logical properties override */</span>
  <span class="py">margin-inline-start</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="py">padding-inline-start</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">text-align</span><span class="p">:</span> <span class="nb">start</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong><code  class="highlighter-rouge notranslate">@supports</code>-Based Approach (Clean separation)</strong></p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="c">/* Physical property fallbacks */</span>
<span class="nc">.card</span> <span class="p">{</span>
  <span class="nl">margin-left</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">padding-left</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">text-align</span><span class="p">:</span> <span class="nb">left</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">/* Apply logical properties only if supported */</span>
<span class="k">@supports</span> <span class="p">(</span><span class="n">margin-inline-start</span><span class="p">:</span> <span class="m">1rem</span><span class="p">)</span> <span class="p">{</span>
  <span class="nc">.card</span> <span class="p">{</span>
    <span class="py">margin-inline-start</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
    <span class="py">padding-inline-start</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
    <span class="nl">text-align</span><span class="p">:</span> <span class="nb">start</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<details>
  <summary>
    <svg version="1.0" role="img" class="icon icon-plus" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1.25rem" height="1.25rem" fill="currentColor" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="6" y1="12" x2="18" y2="12" />
  <line x1="12" y1="18" x2="12" y2="6" />
</svg>

    <p dir="auto"><strong>Why use <code class="highlighter-rouge notranslate">@supports?</code></strong></p>
  </summary>
  <div class="content">
    
          <ul dir="auto">
              <li><p dir="auto">Keeps fallback styles intact for older browsers without relying solely on cascade overrides.</p></li>
  <li><p dir="auto">Ensures logical properties are parsed only when supported.</p></li>
  <li><p dir="auto">Makes debugging easier by clearly separating legacy and modern styles.</p></li>

          </ul>
        
  </div>
</details>

<h2  id="conclusion" dir="auto">Conclusion</h2>
<p  dir="auto">CSS Logical Properties are the future of responsive, internationalized web design. They eliminate the need for duplicate styles for different
writing directions, ensuring your layouts adapt naturally to any language or script.</p>
<p  dir="auto">By adopting them now, you’re creating layouts that are <strong>direction-aware</strong>, <strong>international-ready</strong>, and <strong>easy to maintain</strong>—without the extra headaches.</p>]]></content>

    
      <category term="css" scheme="urn:taxonomy:tag" />
    
      <category term="web-development" scheme="urn:taxonomy:tag" />
    
      <category term="layout" scheme="urn:taxonomy:tag" />
    
      <category term="responsive" scheme="urn:taxonomy:tag" />
    
      <category term="rtl" scheme="urn:taxonomy:tag" />
    
      <category term="logical-properties" scheme="urn:taxonomy:tag" />
    
      <category term="writing-modes" scheme="urn:taxonomy:tag" />
    
      <category term="internationalization" scheme="urn:taxonomy:tag" />
    
      <category term="i18n" scheme="urn:taxonomy:tag" />
    
      <category term="frontend" scheme="urn:taxonomy:tag" />
    
      <category term="best-practices" scheme="urn:taxonomy:tag" />
    
      <category term="globalization" scheme="urn:taxonomy:tag" />
    
      <category term="accessibility" scheme="urn:taxonomy:tag" />
    

    
      <category term="CSS" scheme="urn:taxonomy:category" />
    
  </entry>
  
  <entry xml:lang="en">
    <title>Mastering JavaScript Operators: A Complete Guide with Examples</title>
    <link rel="alternate" type="text/html" href="https://shivam091.github.io/post/mastering-js-operators" />
    <id>https://shivam091.github.io/post/mastering-js-operators</id>

    <published>2025-08-08T22:28:06+05:30</published>
    <updated>2025-08-08T22:28:06+05:30</updated>

    

    <summary type="html">
      Learn every JavaScript operator with clear syntax, use cases, and examples—from arithmetic to optional chaining, bitwise, and beyond.
    </summary>
    <content type="html"><![CDATA[<h2  id="introduction" dir="auto">Introduction</h2>
<p  dir="auto">JavaScript offers a wide range of operators that help you write clean, expressive, and efficient code.</p>
<p  dir="auto">Whether you’re comparing values, assigning variables, performing calculations, or safely accessing deeply nested properties—<strong>operators are essential to mastering JavaScript.</strong></p>
<p  dir="auto">In this post, we’ll break down <strong>all JavaScript operators</strong> grouped by category, with <strong>clear syntax and real-world examples</strong> for each.</p>
<h2  id="what-youll-learn" dir="auto">What You’ll Learn</h2>

          <ul  dir="auto">
              <li><p  dir="auto">All JS operators categorized for easy understanding</p></li>
  <li><p  dir="auto">Clear code examples and use cases</p></li>
  <li><p  dir="auto">Modern syntax like <code  class="highlighter-rouge notranslate">??</code>, <code  class="highlighter-rouge notranslate">?.</code>, <code  class="highlighter-rouge notranslate">|&gt;</code>, and more</p></li>
  <li><p  dir="auto">Tips and best practices for clean coding</p></li>

          </ul>
        
<h2  id="arithmetic-operators" dir="auto">Arithmetic Operators</h2>
<h3  id="-addition" dir="auto"><code  class="highlighter-rouge notranslate">+</code> Addition</h3>
<p  dir="auto">This operator adds two numbers together, or concatenates two strings together. If a number and a string are used together, it performs a concatenation.</p>
<p  dir="auto">Less commonly, it can be used as a unary operator, to try and convert a string containing digits to a number. It’s a somewhat
obscure trick, and it’s generally better to use the <code  class="highlighter-rouge notranslate">Number()</code> helper instead.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">5</span> <span class="o">+</span> <span class="mi">3</span><span class="p">);</span> <span class="c1">// 8</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Hello </span><span class="dl">"</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">World</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// "Hello World"</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">5</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">3</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// '53'</span>

<span class="c1">// As a unary operator</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">+</span><span class="dl">'</span><span class="s1">5</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// 5 (number)</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">+</span><span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// NaN</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">+</span><span class="kc">true</span><span class="p">);</span> <span class="c1">// 1 (number)</span></code></pre></figure>

<h3  id="--subtraction" dir="auto"><code  class="highlighter-rouge notranslate">-</code> Subtraction</h3>
<p  dir="auto">This operator subtracts the right operand from the left. It’s a mathematical operator.</p>
<p  dir="auto">As a unary operator, it can also be used to signify that a number is negative—for example <code  class="highlighter-rouge notranslate">-5</code> isn’t subtracting anything, it’s indicating that this
number’s value is negative 5.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">10</span> <span class="o">-</span> <span class="mi">4</span><span class="p">);</span> <span class="c1">// 6</span>

<span class="c1">// As a unary operator</span>
<span class="kd">const</span> <span class="nx">negNum</span> <span class="o">=</span> <span class="o">-</span><span class="mi">5</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">5</span> <span class="o">+</span> <span class="nx">negNum</span><span class="p">);</span> <span class="c1">// 0 (number)</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">-</span><span class="dl">"</span><span class="s2">5</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// -5 (number)</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">-</span><span class="kc">false</span><span class="p">);</span> <span class="c1">// -0 (number)</span></code></pre></figure>

<h3  id="-multiplication" dir="auto"><code  class="highlighter-rouge notranslate">*</code> Multiplication</h3>
<p  dir="auto">This operator performs a mathematical multiplication operation.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">6</span><span class="p">,</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">7</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">*</span> <span class="nx">y</span><span class="p">);</span> <span class="c1">// 42</span></code></pre></figure>

<h3  id="-division" dir="auto"><code  class="highlighter-rouge notranslate">/</code> Division</h3>
<p  dir="auto">This operator divides the left operand by the right.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">10</span> <span class="o">/</span> <span class="mi">2</span><span class="p">);</span> <span class="c1">// 5</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">5</span> <span class="o">/</span> <span class="mi">4</span><span class="p">);</span> <span class="c1">// 1.25</span></code></pre></figure>

<h3  id="-remainder-modulo" dir="auto"><code  class="highlighter-rouge notranslate">%</code> Remainder (Modulo)</h3>
<p  dir="auto">This operator is in the same mathematical family as Addition (<code  class="highlighter-rouge notranslate">+</code>) or Multiplication (<code  class="highlighter-rouge notranslate">*</code>).</p>
<p  dir="auto">It evaluates to the remainder of dividing the left operand by the right.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">10</span> <span class="o">%</span> <span class="mi">3</span><span class="p">);</span> <span class="c1">// 1</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">8</span> <span class="o">%</span> <span class="mi">4</span><span class="p">);</span> <span class="c1">// 0</span></code></pre></figure>

<h3  id="-exponentiation" dir="auto"><code  class="highlighter-rouge notranslate">**</code> Exponentiation</h3>
<p  dir="auto">This operator raises the left operand to the power of the right.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">**</span> <span class="mi">2</span><span class="p">);</span> <span class="c1">// 4</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">**</span> <span class="mi">3</span><span class="p">);</span> <span class="c1">// 8</span></code></pre></figure>

<p  dir="auto"><strong>Compatibility: ES2016+</strong></p>
<h2  id="logical-operators" dir="auto">Logical Operators</h2>
<h3  id="-logical-and" dir="auto"><code  class="highlighter-rouge notranslate">&amp;&amp;</code> Logical AND</h3>
<p  dir="auto">This operator is commonly used to check if all supplied values are truthy.</p>
<p  dir="auto">It also works as a control-flow operator: it will return the first falsy value. If none of the values are falsy, it will return the final value.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="c1">// As a logical operator:</span>
<span class="k">if </span><span class="p">(</span><span class="nx">someCondition</span> <span class="o">&amp;&amp;</span> <span class="nx">someOtherCondition</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// Code here is only run if both variables are true, or truthy.</span>
<span class="p">}</span>

<span class="c1">// As a control flow operator:</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="mi">4</span><span class="p">);</span>         <span class="c1">// 0, since it's the first falsy value</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="mi">4</span><span class="p">);</span>         <span class="c1">// 4, since neither value is falsy</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="mi">3</span><span class="p">);</span>    <span class="c1">// 3, since all values are truthy</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">a</span><span class="dl">'</span> <span class="o">&amp;&amp;</span> <span class="dl">''</span> <span class="o">&amp;&amp;</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">// '', the first falsy value</span></code></pre></figure>

<h3  id="-logical-or" dir="auto"><code  class="highlighter-rouge notranslate">||</code> Logical OR</h3>
<p  dir="auto">This operator is commonly used to check if either supplied value is truthy.</p>
<p  dir="auto">It also works as a control-flow operator: it will return the first truthy value. If none of the values are truthy, it will return the final value.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="c1">// As a logical operator:</span>
<span class="k">if </span><span class="p">(</span><span class="nx">someCondition</span> <span class="o">||</span> <span class="nx">someOtherCondition</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// Code here is only run if at least one of</span>
  <span class="c1">// the two variables hold truthy values.</span>
<span class="p">}</span>

<span class="c1">// As a control flow operator:</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">0</span> <span class="o">||</span> <span class="mi">4</span><span class="p">);</span>      <span class="c1">// 4, since it's the first truthy value</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">2</span> <span class="o">||</span> <span class="mi">4</span><span class="p">);</span>      <span class="c1">// 2, since it's the first truthy value</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">''</span> <span class="o">||</span> <span class="mi">0</span><span class="p">);</span>     <span class="c1">// 0, since no values are truthy</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">1</span> <span class="o">||</span> <span class="mi">2</span> <span class="o">||</span> <span class="mi">3</span><span class="p">);</span> <span class="c1">// 1, since it found a truthy value right away!</span></code></pre></figure>

<h3  id="-logical-not" dir="auto"><code  class="highlighter-rouge notranslate">!</code> Logical NOT</h3>
<p  dir="auto">This operator, colloquially known as a bang, negates a boolean value.
False becomes true, true becomes false.</p>
<p  dir="auto">It also works on non-boolean values. Any falsy value will evaluate to <code  class="highlighter-rouge notranslate">true</code>, and likewise any truthy value will evaluate to <code  class="highlighter-rouge notranslate">false</code>.</p>
<p  dir="auto">It can be repeated to turn any truthy value to true, and any falsy value to false.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">!</span><span class="kc">true</span><span class="p">);</span> <span class="c1">// false</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">!</span><span class="kc">false</span><span class="p">);</span> <span class="c1">// true</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span> <span class="c1">// true</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">!</span><span class="mi">10</span><span class="p">);</span> <span class="c1">// false</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">!!</span><span class="mi">0</span><span class="p">);</span> <span class="c1">// false</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">!!</span><span class="mi">10</span><span class="p">);</span> <span class="c1">// true</span></code></pre></figure>

<p  dir="auto">When placed at the end of a variable, this symbol acts as the TypeScript <em>Non-null Assertion Operator</em> instead.</p>
<h3  id="-double-not" dir="auto"><code  class="highlighter-rouge notranslate">!!</code> Double NOT</h3>
<p  dir="auto">This operator converts any value to strict boolean (true/false).</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="o">!!</span><span class="dl">"</span><span class="s2">text</span><span class="dl">"</span><span class="p">;</span> <span class="c1">// true</span>
<span class="o">!!</span><span class="mi">0</span><span class="p">;</span>     <span class="c1">// false</span></code></pre></figure>

<h2  id="bitwise-operators" dir="auto">Bitwise Operators</h2>
<p  dir="auto">Bitwise operators operate on 32-bit integer representations of numbers.</p>

          <blockquote  dir="auto">
            <p  dir="auto">Caution: Bitwise operators coerce to 32-bit signed integers — not suitable for very large integers.</p>
          </blockquote>
        
<h3  id="-bitwise-and" dir="auto"><code  class="highlighter-rouge notranslate">&amp;</code> Bitwise AND</h3>
<p  dir="auto">This operator performs a bitwise AND operation on each bit of two integers</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">&amp;</span> <span class="nx">y</span><span class="p">);</span> <span class="c1">// 1  (0101 &amp; 0011 = 0001)</span></code></pre></figure>

<p  dir="auto">Not to be confused with the Logical AND operator (<code  class="highlighter-rouge notranslate">&amp;&amp;</code>)</p>
<h3  id="-bitwise-or" dir="auto"><code  class="highlighter-rouge notranslate">|</code> Bitwise OR</h3>
<p  dir="auto">This operator performs a bitwise OR operation on each bit of two integers.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">|</span> <span class="nx">y</span><span class="p">);</span> <span class="c1">// 7 (0101 | 0011 = 0111)</span></code></pre></figure>

<p  dir="auto">Not to be confused with the Logical OR operator (<code  class="highlighter-rouge notranslate">||</code>)</p>
<h3  id="-bitwise-xor" dir="auto"><code  class="highlighter-rouge notranslate">^</code> Bitwise XOR</h3>
<p  dir="auto">This operator performs a bitwise exclusive OR on each bit of two integers.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">^</span> <span class="nx">y</span><span class="p">);</span> <span class="c1">// 6 (0101 ^ 0011 = 0110)</span></code></pre></figure>

<h3  id="-bitwise-not" dir="auto"><code  class="highlighter-rouge notranslate">~</code> Bitwise NOT</h3>
<p  dir="auto">This operator inverts all the bits of the value it’s called with (two’s complement).</p>
<p  dir="auto">check ex</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">~</span><span class="mi">5</span><span class="p">);</span> <span class="c1">// -6</span>
<span class="c1">// ~00000000000000000000000000000101</span>
<span class="c1">// = 11111111111111111111111111111010 (-6)</span></code></pre></figure>

<h3  id="-left-shift" dir="auto"><code  class="highlighter-rouge notranslate">&lt;&lt;</code> Left Shift</h3>
<p  dir="auto">This operator shifts bits to the left, adding zeros on the right.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">&lt;&lt;</span> <span class="nx">y</span><span class="p">);</span> <span class="c1">// 10 (0101 &lt;&lt; 0001 = 1010)</span></code></pre></figure>

<h3  id="-right-shift" dir="auto"><code  class="highlighter-rouge notranslate">&gt;&gt;</code> Right Shift</h3>
<p  dir="auto">This operator shifts bits to the right, preserving sign bit.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">&gt;&gt;</span> <span class="nx">y</span><span class="p">);</span> <span class="c1">// 2 (0101 &gt;&gt; 0001 = 0010)</span></code></pre></figure>

<h3  id="-unsigned-right-shift" dir="auto"><code  class="highlighter-rouge notranslate">&gt;&gt;&gt;</code> Unsigned Right Shift</h3>
<p  dir="auto">This operator shifts bits to the right, filling with zeros, ignoring sign.</p>
<p  dir="auto">check ex</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="o">-</span><span class="mi">5</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">&gt;&gt;&gt;</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// -5 &gt;&gt;&gt; 1 = 2147483645</span></code></pre></figure>

<h2  id="assignment-operators" dir="auto">Assignment Operators</h2>
<p  dir="auto">Assignment operators assign values to variables.</p>
<h3  id="arithmetic-assignment-operators" dir="auto">Arithmetic Assignment Operators</h3>
<h4  id="-assignment" dir="auto"><code  class="highlighter-rouge notranslate">=</code> Assignment</h4>
<p  dir="auto">This operator assigns a value to the variable.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 10</span></code></pre></figure>

<h4  id="-addition-assignment" dir="auto"><code  class="highlighter-rouge notranslate">+=</code> Addition Assignment</h4>
<p  dir="auto">This operator adds a value to the variable, and overwrites that variable’s value with the result.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
<span class="nx">x</span> <span class="o">+=</span> <span class="mi">2</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 12 (10 + 2)</span></code></pre></figure>

<h4  id="--subtraction-assignment" dir="auto"><code  class="highlighter-rouge notranslate">-=</code> Subtraction Assignment</h4>
<p  dir="auto">This operator subtracts a value from the variable, and overwrites that variable’s value with the result.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
<span class="nx">x</span> <span class="o">-=</span> <span class="mi">2</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 8 (10 - 2)</span></code></pre></figure>

<h4  id="-multiplication-assignment" dir="auto"><code  class="highlighter-rouge notranslate">*=</code> Multiplication Assignment</h4>
<p  dir="auto">This operator multiplies a variable by a value, and overwrites that variable’s value with the result.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
<span class="nx">x</span> <span class="o">*=</span> <span class="mi">2</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 20 (10 * 2)</span></code></pre></figure>

<h4  id="-division-assignment" dir="auto"><code  class="highlighter-rouge notranslate">/=</code> Division Assignment</h4>
<p  dir="auto">This operator divides a variable by a value, and overwrites that variable’s value with the result.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
<span class="nx">x</span> <span class="o">/=</span> <span class="mi">2</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 5 (10 / 2)</span></code></pre></figure>

<h4  id="-remainder-assignment" dir="auto"><code  class="highlighter-rouge notranslate">%=</code> Remainder Assignment</h4>
<p  dir="auto">This operator assigns the remainder after division, and overwrites that variable’s value with the result.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
<span class="nx">x</span> <span class="o">%=</span> <span class="mi">2</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 2 (10 %= 4)</span></code></pre></figure>

<h4  id="-exponentiation-assignment" dir="auto"><code  class="highlighter-rouge notranslate">**=</code> Exponentiation Assignment</h4>
<p  dir="auto">This operator applies an exponentiation (bringing the value to the power of X), an assigns the result to the affected variable.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
<span class="nx">x</span> <span class="o">**=</span> <span class="mi">2</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 100 (10 ** 2)</span></code></pre></figure>

<h3  id="logical-assignment-operators" dir="auto">Logical Assignment Operators</h3>
<h4  id="-logical-and-assignment" dir="auto"><code  class="highlighter-rouge notranslate">&amp;&amp;=</code> Logical AND Assignment</h4>
<p  dir="auto">This operator assigns a value to a variable, but only if that variable already holds a <code  class="highlighter-rouge notranslate">truthy</code> value.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

<span class="nx">x</span> <span class="o">&amp;&amp;=</span> <span class="mi">2</span><span class="p">;</span> <span class="c1">// No effect, since 0 is falsy</span>
<span class="nx">y</span> <span class="o">&amp;&amp;=</span> <span class="mi">2</span><span class="p">;</span> <span class="c1">// Assigns 2, since 1 is truthy</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">);</span> <span class="c1">// 0, 2</span></code></pre></figure>

<h4  id="-logical-or-assignment" dir="auto"><code  class="highlighter-rouge notranslate">||=</code> Logical OR Assignment</h4>
<p  dir="auto">This operator assigns a value to a variable, but only if that variable already holds a <code  class="highlighter-rouge notranslate">falsy</code> value.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

<span class="nx">x</span> <span class="o">||=</span> <span class="mi">2</span><span class="p">;</span> <span class="c1">// Assigns 2, since 0 is falsy</span>
<span class="nx">y</span> <span class="o">||=</span> <span class="mi">2</span><span class="p">;</span> <span class="c1">// Has no effect, since 'y' held a truthy value</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">);</span> <span class="c1">// 2, 1</span></code></pre></figure>

<h4  id="-logical-nullish-assignment" dir="auto"><code  class="highlighter-rouge notranslate">??=</code> Logical Nullish Assignment</h4>
<p  dir="auto">This operator updates a variable with a new value, but only if that variable currently holds a “nullish” value (either <code  class="highlighter-rouge notranslate">null</code> or <code  class="highlighter-rouge notranslate">undefined</code>).
This operator is also known as <em><strong>Nullish Coalescing Assignment</strong></em>.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">y</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">z</span><span class="p">;</span>

<span class="nx">x</span> <span class="o">??=</span> <span class="mi">2</span><span class="p">;</span> <span class="c1">// Has no effect, since 'x' already holds a value</span>
<span class="nx">y</span> <span class="o">??=</span> <span class="mi">2</span><span class="p">;</span> <span class="c1">// Updates 'y' to hold this new value</span>
<span class="nx">z</span> <span class="o">??=</span> <span class="mi">2</span><span class="p">;</span> <span class="c1">// Updates 'z' to hold this new value (by not assigning 'z' a value initially, it was considered undefined).</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">,</span> <span class="nx">z</span><span class="p">);</span> <span class="c1">// 0, 2, 2</span></code></pre></figure>

<h3  id="bitwise-assignment-operators" dir="auto">Bitwise Assignment Operators</h3>
<h4  id="-bitwise-and-assignment" dir="auto"><code  class="highlighter-rouge notranslate">&amp;=</code> Bitwise AND Assignment</h4>
<p  dir="auto">This operator performs a bitwise AND operation to a variable, and overwrites the result into the same variable.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
<span class="nx">x</span> <span class="o">&amp;=</span> <span class="mi">3</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 1</span></code></pre></figure>

<h4  id="-bitwise-or-assignment" dir="auto"><code  class="highlighter-rouge notranslate">|=</code> Bitwise OR Assignment</h4>
<p  dir="auto">This operator performs a bitwise OR operation on a variable, and assigns the result to that same variable.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
<span class="nx">x</span> <span class="o">|=</span> <span class="mi">3</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 7</span></code></pre></figure>

<h4  id="-bitwise-xor-assignment" dir="auto"><code  class="highlighter-rouge notranslate">^=</code> Bitwise XOR Assignment</h4>
<p  dir="auto">This operator performs a bitwise XOR operation on a variable, and assigns the result to that same variable.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
<span class="nx">x</span> <span class="o">^=</span> <span class="mi">3</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 6</span></code></pre></figure>

<h4  id="-left-shift-assignment" dir="auto"><code  class="highlighter-rouge notranslate">&lt;&lt;=</code> Left Shift Assignment</h4>
<p  dir="auto">This operator performs a bitwise left shift operation on a variable, and overwrites the variable with this new value.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
<span class="nx">x</span> <span class="o">&lt;&lt;=</span> <span class="mi">1</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 10</span></code></pre></figure>

<h4  id="-right-shift-assignment" dir="auto"><code  class="highlighter-rouge notranslate">&gt;&gt;=</code> Right Shift Assignment</h4>
<p  dir="auto">This operator performs a bitwise right shift operation on a variable, and overwrites the variable with this new value (sign-preserving).</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
<span class="nx">x</span> <span class="o">&gt;&gt;=</span> <span class="mi">1</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 2</span></code></pre></figure>

<h4  id="-unsigned-right-shift-assignment" dir="auto"><code  class="highlighter-rouge notranslate">&gt;&gt;&gt;=</code> Unsigned Right Shift Assignment</h4>
<p  dir="auto">This operator performs a unsigned bitwise right shift (unsigned) operation on a variable, and overwrites the variable with this new value .</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="o">-</span><span class="mi">5</span><span class="p">;</span>
<span class="nx">x</span> <span class="o">&gt;&gt;&gt;=</span> <span class="mi">1</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 2147483645</span></code></pre></figure>

<h2  id="comparison-operators" dir="auto">Comparison Operators</h2>

          <blockquote  dir="auto">
            <p  dir="auto">Note: Comparison involving <code  class="highlighter-rouge notranslate">NaN</code> is always <code  class="highlighter-rouge notranslate">false</code> (except <code  class="highlighter-rouge notranslate">Object.is</code>), and <code  class="highlighter-rouge notranslate">NaN !== NaN</code></p>
          </blockquote>
        
<h3  id="-equality" dir="auto"><code  class="highlighter-rouge notranslate">==</code> Equality</h3>
<p  dir="auto">This operator checks to see if two values are equivalent.</p>
<p  dir="auto">Unlike the <em>strict equality operator</em> (<code  class="highlighter-rouge notranslate">===</code>), this operator ignores the type and focuses exclusively on the value.
For example, the number <code  class="highlighter-rouge notranslate">10</code> is considered equivalent to the string “10”.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>

<span class="c1">// The numbers are different so they're not equal.</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">==</span> <span class="mi">11</span><span class="p">);</span> <span class="c1">// false</span>

<span class="c1">// The numbers are the same, so they're equal!</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">==</span> <span class="mi">10</span><span class="p">);</span> <span class="c1">// true</span>

<span class="c1">// The value matches, regardless of type.</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">==</span> <span class="dl">"</span><span class="s2">10'); // true</span></code></pre></figure>

<h3  id="-strict-equality" dir="auto"><code  class="highlighter-rouge notranslate">===</code> Strict Equality</h3>
<p  dir="auto">This operator checks to see if two values are equivalent.</p>
<p  dir="auto">Unlike the <em>equality operator</em> (<code  class="highlighter-rouge notranslate">==</code>), this operator checks the type as well as the value.
For example, the number <code  class="highlighter-rouge notranslate">10</code> is not considered equivalent to the string “10”.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>

<span class="c1">// The numbers are different so they're not equal.</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">===</span> <span class="mi">11</span><span class="p">);</span> <span class="c1">// false</span>

<span class="c1">// The numbers are the same, so they're equal!</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">===</span> <span class="mi">10</span><span class="p">);</span> <span class="c1">// true</span>

<span class="c1">// The values are the same, but the type is different.</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">10'); // false</span></code></pre></figure>

<h3  id="-inequality" dir="auto"><code  class="highlighter-rouge notranslate">!=</code> Inequality</h3>
<p  dir="auto">This operator checks to see if two values are not equal (type coercion allowed).</p>
<p  dir="auto">Unlike the <em>strict inequality operator</em> (<code  class="highlighter-rouge notranslate">!==</code>), the value’s type isn’t considered. For example, the number <code  class="highlighter-rouge notranslate">2</code> is considered
equivalent to the string “2”, so the expression <code  class="highlighter-rouge notranslate">2 != '2'</code> returns <code  class="highlighter-rouge notranslate">false</code>. This is generally a bad thing, and it’s recommended
to use the <strong>strict inequality operator</strong> instead.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">const</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>

<span class="c1">// The numbers are different, so they are inequal.</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">!=</span> <span class="mi">11</span><span class="p">);</span> <span class="c1">// true</span>

<span class="c1">// The numbers are the same, they are not inequal.</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">!=</span> <span class="mi">10</span><span class="p">);</span> <span class="c1">// false</span>

<span class="c1">// Even though the types are different, the values are the same, so they're considered equal.</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">!=</span> <span class="dl">"</span><span class="s2">10</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// false</span></code></pre></figure>

<h3  id="-strict-inequality" dir="auto"><code  class="highlighter-rouge notranslate">!==</code> Strict Inequality</h3>
<p  dir="auto">This operator checks to see if two values are not equivalent.</p>
<p  dir="auto">Unlike the <em>inequality operator</em> (<code  class="highlighter-rouge notranslate">!=</code>), this operator considers the type as well as the value. For example, the number <code  class="highlighter-rouge notranslate">2</code>
is not considered equivalent to the string “2”.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">const</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>

<span class="c1">// The numbers are different, so they are inequal.</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">!==</span> <span class="mi">11</span><span class="p">);</span> <span class="c1">// true</span>

<span class="c1">// The numbers are the same, so they're not inequal.</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">!==</span> <span class="mi">10</span><span class="p">);</span> <span class="c1">// false</span>

<span class="c1">// The values are the same, but the type is different, so they are still considered inequal.</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span> <span class="o">!==</span> <span class="dl">"</span><span class="s2">10</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// true</span></code></pre></figure>

<h3  id="-greater-than" dir="auto"><code  class="highlighter-rouge notranslate">&gt;</code> Greater Than</h3>
<p  dir="auto">This operator checks to see if the value on the left is larger than the value on the right.</p>
<p  dir="auto">For numbers, this works as you’d probably expect. For strings, things can be surprising; each character is converted to its
appropriate character code. This means that casing matters, as shown in the examples below.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">10</span> <span class="o">&gt;</span> <span class="mi">15</span><span class="p">);</span> <span class="c1">// false</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">-</span><span class="mi">20</span> <span class="o">&gt;</span> <span class="mi">15</span><span class="p">);</span> <span class="c1">// false</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mf">0.5</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// false</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">1</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// false</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">b</span><span class="dl">'</span> <span class="o">&gt;</span> <span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// true</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">B</span><span class="dl">'</span> <span class="o">&gt;</span> <span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// false</span></code></pre></figure>

<h3  id="-less-than" dir="auto"><code  class="highlighter-rouge notranslate">&lt;</code> Less Than</h3>
<p  dir="auto">This operator checks to see if the value on the left is smaller than the value on the right.</p>
<p  dir="auto">For numbers, this works as you’d probably expect. For strings, things can be surprising; each character is converted to its
appropriate character code. This means that casing matters, as shown in the examples below.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">10</span> <span class="o">&lt;</span> <span class="mi">15</span><span class="p">);</span> <span class="c1">// true</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">-</span><span class="mi">20</span> <span class="o">&lt;</span> <span class="mi">15</span><span class="p">);</span> <span class="c1">// true</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mf">0.5</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// true</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">1</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// false</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">b</span><span class="dl">'</span> <span class="o">&lt;</span> <span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// false</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">B</span><span class="dl">'</span> <span class="o">&lt;</span> <span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// true</span></code></pre></figure>

<h3  id="-greater-than-or-equal-to" dir="auto"><code  class="highlighter-rouge notranslate">&gt;=</code> Greater Than or Equal To</h3>
<p  dir="auto">This operator checks to see if the value on the left is larger than, or the same as, the value on the right.</p>
<p  dir="auto">For numbers, this works as you’d probably expect. For strings, things can be surprising; each character is converted to its
appropriate character code. This means that casing matters, as shown in the examples below.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">10</span> <span class="o">&gt;=</span> <span class="mi">15</span><span class="p">);</span> <span class="c1">// false</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">-</span><span class="mi">20</span> <span class="o">&gt;=</span> <span class="mi">15</span><span class="p">);</span> <span class="c1">// false</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mf">0.5</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// false</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">1</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// true</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">b</span><span class="dl">'</span> <span class="o">&gt;=</span> <span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// true</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">B</span><span class="dl">'</span> <span class="o">&gt;=</span> <span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// false</span></code></pre></figure>

<h3  id="-less-than-or-equal-to" dir="auto"><code  class="highlighter-rouge notranslate">&lt;=</code> Less Than or Equal To</h3>
<p  dir="auto">This operator checks to see if the value on the left is smaller than, or the same as, the value on the right.</p>
<p  dir="auto">For numbers, this works as you’d probably expect. For strings, things can be surprising; each character is converted to its
appropriate character code. This means that casing matters, as shown in the examples below.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">10</span> <span class="o">&lt;=</span> <span class="mi">15</span><span class="p">);</span> <span class="c1">// true</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">-</span><span class="mi">20</span> <span class="o">&lt;=</span> <span class="mi">15</span><span class="p">);</span> <span class="c1">// true</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mf">0.5</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// true</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">1</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// true</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">b</span><span class="dl">'</span> <span class="o">&lt;=</span> <span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// false</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">B</span><span class="dl">'</span> <span class="o">&lt;=</span> <span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// true</span></code></pre></figure>

<h3  id="instanceof" dir="auto"><code  class="highlighter-rouge notranslate">instanceof</code></h3>
<p  dir="auto">This operator tests whether an object has the prototype property of a given constructor in its prototype chain.
It returns <code  class="highlighter-rouge notranslate">true</code> if the left operand is an instance of the right operand, otherwise <code  class="highlighter-rouge notranslate">false</code>.</p>
<p  dir="auto">This is useful for type checking, especially when working with custom classes.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">class</span> <span class="nc">Animal</span> <span class="p">{}</span>
<span class="kd">class</span> <span class="nc">Dog</span> <span class="kd">extends</span> <span class="nc">Animal</span> <span class="p">{}</span>

<span class="kd">const</span> <span class="nx">myDog</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Dog</span><span class="p">();</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">myDog</span> <span class="k">instanceof</span> <span class="nx">Dog</span><span class="p">);</span>     <span class="c1">// true  -&gt; myDog's prototype chain includes Dog.prototype</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">myDog</span> <span class="k">instanceof</span> <span class="nx">Animal</span><span class="p">);</span>  <span class="c1">// true  -&gt; myDog inherits from Animal</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">myDog</span> <span class="k">instanceof</span> <span class="nb">Object</span><span class="p">);</span>  <span class="c1">// true  -&gt; All objects inherit from Object</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">myDog</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">);</span>   <span class="c1">// false -&gt; Array not in myDog's prototype chain</span></code></pre></figure>

<h2  id="unary-operators" dir="auto">Unary Operators</h2>
<h3  id="-increment" dir="auto"><code  class="highlighter-rouge notranslate">++</code> Increment</h3>
<p  dir="auto">This operator is meant to be used on variables that hold numbers. When used, it increases that variable’s value by 1.</p>
<p  dir="auto">It can be used as a prefix (<code  class="highlighter-rouge notranslate">++x</code>) or postfix (<code  class="highlighter-rouge notranslate">x++</code>) operator, affecting when the increment occurs relative to the expression’s evaluation.</p>
<p  dir="auto">This is commonly used in conjunction with <code  class="highlighter-rouge notranslate">while</code> loops, or anywhere that requires a counter.</p>
<p  dir="auto">It’s functionally equivalent to <code  class="highlighter-rouge notranslate">x = x + 1</code>;</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">++</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 6 (x is now 6)</span>

<span class="kd">let</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">y</span><span class="o">++</span><span class="p">);</span> <span class="c1">// 5 (y is now 6)</span></code></pre></figure>

<h3  id="---decrement" dir="auto"><code  class="highlighter-rouge notranslate">--</code> Decrement</h3>
<p  dir="auto">This operator is meant to be used on variables that hold numbers. When used, it decreases that variable’s value by 1.</p>
<p  dir="auto">Similar to increment, it can be prefix or postfix.</p>
<p  dir="auto">This is commonly used in conjunction with <code  class="highlighter-rouge notranslate">while</code> loops, or anywhere that requires a counter.</p>
<p  dir="auto">It’s functionally equivalent to <code  class="highlighter-rouge notranslate">x = x - 1</code>;</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="o">--</span><span class="nx">x</span><span class="p">);</span> <span class="c1">// 9 (x is now 9)</span>

<span class="kd">let</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">y</span><span class="o">--</span><span class="p">);</span> <span class="c1">// 10 (y is now 9)</span></code></pre></figure>

<h3  id="typeof" dir="auto"><code  class="highlighter-rouge notranslate">typeof</code></h3>
<p  dir="auto">This operator is used to determine the data type of its operand. It returns a string indicating the type of the evaluated operand.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="k">typeof</span> <span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// "string"</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="k">typeof</span> <span class="mi">123</span><span class="p">);</span> <span class="c1">// "number"</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="k">typeof</span> <span class="kc">undefined</span><span class="p">);</span> <span class="c1">// "undefined"</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="k">typeof</span> <span class="kc">true</span><span class="p">);</span> <span class="c1">// "boolean"</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nc">Symbol</span><span class="p">());</span> <span class="c1">// "symbol"</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="k">typeof</span> <span class="p">{});</span> <span class="c1">// "object" (object literal)</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="k">typeof</span> <span class="p">[]);</span> <span class="c1">// "object" (array)</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="k">typeof</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{});</span> <span class="c1">// "function" (function)</span></code></pre></figure>

<p  dir="auto"><strong>Purpose and Use Cases:</strong></p>
<p  dir="auto">This operator is useful for:</p>

          <ul  dir="auto">
              <li><p  dir="auto"><strong>Type checking</strong>: Verifying the data type of a variable or value, especially when dealing with dynamic or unknown data.</p></li>
  <li><p  dir="auto"><strong>Conditional logic</strong>: Performing different actions based on the type of a variable.</p></li>
  <li><p  dir="auto"><strong>Debugging</strong>: Identifying unexpected data types during development.</p></li>

          </ul>
        
<h3  id="delete" dir="auto"><code  class="highlighter-rouge notranslate">delete</code></h3>
<p  dir="auto">This operator is used to remove a property from an object or an element from an array.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">const</span> <span class="nx">person</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">John Doe</span><span class="dl">"</span><span class="p">,</span>
  <span class="na">age</span><span class="p">:</span> <span class="mi">30</span>
<span class="p">};</span>

<span class="k">delete</span> <span class="nx">person</span><span class="p">.</span><span class="nx">age</span><span class="p">;</span> <span class="c1">// Removes the 'age' property from the person object.</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">person</span><span class="p">);</span> <span class="c1">// Output: { name: "John Doe" }</span></code></pre></figure>

<p  dir="auto"><strong>Important Considerations:</strong></p>

          <ul  dir="auto">
              <li><p  dir="auto">The <code  class="highlighter-rouge notranslate">delete</code> operator is designed for object properties and has no effect on variables or functions declared directly in the global
scope or within a function scope.</p></li>
  <li><p  dir="auto">Avoid using <code  class="highlighter-rouge notranslate">delete</code> on properties of predefined JavaScript objects (e.g., <code  class="highlighter-rouge notranslate">Array</code>, <code  class="highlighter-rouge notranslate">Boolean</code>, <code  class="highlighter-rouge notranslate">Date</code>, <code  class="highlighter-rouge notranslate">Function</code>, <code  class="highlighter-rouge notranslate">Math</code>, <code  class="highlighter-rouge notranslate">Number</code>, <code  class="highlighter-rouge notranslate">RegExp</code>, <code  class="highlighter-rouge notranslate">String</code>)
as this can lead to unexpected behavior or application crashes.</p></li>
  <li><p  dir="auto">In performance-critical applications, frequent use of delete can potentially lead to de-optimization by JavaScript engines.</p></li>
  <li><p  dir="auto">The <code  class="highlighter-rouge notranslate">delete</code> operator can not be used to delete elements from the DOM. This is typically achieved by manipulating the DOM using methods like
<code  class="highlighter-rouge notranslate">removeChild()</code> or using the newer <code  class="highlighter-rouge notranslate">remove()</code>.</p></li>

          </ul>
        
<h3  id="void" dir="auto"><code  class="highlighter-rouge notranslate">void</code></h3>
<p  dir="auto">This operator evaluates an expression and returns <code  class="highlighter-rouge notranslate">undefined</code>.</p>
<p  dir="auto">The primary function of <code  class="highlighter-rouge notranslate">void</code> is to ensure that the result of an expression is <code  class="highlighter-rouge notranslate">undefined</code>. This is useful when
you want to execute code but explicitly discard any return value.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">y</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="k">void</span><span class="p">(</span><span class="nx">x</span> <span class="o">+</span> <span class="nx">y</span><span class="p">));</span> <span class="c1">// undefined</span></code></pre></figure>

<h2  id="special-operators" dir="auto">Special Operators</h2>
<h3  id="--ternary" dir="auto"><code  class="highlighter-rouge notranslate">? :</code> Ternary</h3>
<p  dir="auto">This operator is also known as the conditional operator, provides a concise way to write conditional expressions. It is a shorthand for
a simple <code  class="highlighter-rouge notranslate">if...else</code> statement and is the only JavaScript operator that takes three operands.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">age</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">canVote</span> <span class="o">=</span> <span class="nx">age</span> <span class="o">&gt;=</span> <span class="mi">18</span> <span class="p">?</span> <span class="dl">"</span><span class="s2">Yes</span><span class="dl">"</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">No</span><span class="dl">"</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">canVote</span><span class="p">);</span> <span class="c1">// "Yes"</span></code></pre></figure>

<h3  id="-comma" dir="auto"><code  class="highlighter-rouge notranslate">,</code> Comma</h3>
<p  dir="auto">This operator evaluates each of its operands from left to right and returns the value of the rightmost operand. It is distinct from commas used as separators in array literals, object literals, or function parameters/arguments.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="c1">// 30</span>

<span class="kd">let</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">b</span> <span class="o">=</span> <span class="p">(</span><span class="nx">a</span><span class="o">++</span><span class="p">,</span> <span class="nx">a</span> <span class="o">+</span> <span class="mi">5</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span> <span class="c1">// 2</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span> <span class="c1">// 7 (2 + 5)</span></code></pre></figure>

<h3  id="-optional-chaining" dir="auto"><code  class="highlighter-rouge notranslate">?.</code> Optional Chaining</h3>
<p  dir="auto">This operator is similar to the <em>Property Accessor operator</em> (<code  class="highlighter-rouge notranslate">.</code>); used to access a property of an object with a difference that it’s safe to chain;
if at any point, a nullish value (<code  class="highlighter-rouge notranslate">null</code> or <code  class="highlighter-rouge notranslate">undefined</code>) is encountered, the chain short-circuits and returns <code  class="highlighter-rouge notranslate">undefined</code>.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">const</span> <span class="nx">user</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">profile</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Harshal</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">age</span><span class="p">:</span> <span class="mi">21</span>
  <span class="p">}</span>
<span class="p">};</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">user</span><span class="p">.</span><span class="nx">address</span><span class="p">.</span><span class="nx">street</span><span class="p">);</span> <span class="c1">// Uncaught TypeError: Cannot read properties of undefined (reading 'street')</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">user</span><span class="p">?.</span><span class="nx">address</span><span class="p">?.</span><span class="nx">street</span><span class="p">);</span> <span class="c1">// undefined</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">user</span><span class="p">?.</span><span class="nx">profile</span><span class="p">?.</span><span class="nx">age</span><span class="p">);</span> <span class="c1">// 21</span>

<span class="cm">/* When the property name is stored in a variable: */</span>
<span class="kd">const</span> <span class="nx">outerKey</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">profile</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">relevantKey</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">age</span><span class="dl">"</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">user</span><span class="p">?.[</span><span class="nx">outerKey</span><span class="p">]?.[</span><span class="nx">relevantKey</span><span class="p">]);</span></code></pre></figure>

<p  dir="auto"><strong>Compatibility: ES2020+</strong></p>
<h3  id="-nullish-coalescing" dir="auto"><code  class="highlighter-rouge notranslate">??</code> Nullish Coalescing</h3>
<p  dir="auto">This relatively-new addition to the language is similar to the Logical OR operator (<code  class="highlighter-rouge notranslate">||</code>), except instead of relying on truthy/falsy values,
it relies on “nullish” values (<code  class="highlighter-rouge notranslate">null</code> and <code  class="highlighter-rouge notranslate">undefined</code>).</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">4</span> <span class="o">??</span> <span class="mi">5</span><span class="p">);</span> <span class="c1">// 4, since neither value is nullish</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="kc">null</span> <span class="o">??</span> <span class="mi">10</span><span class="p">);</span> <span class="c1">// 10, since 'null' is nullish</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="kc">undefined</span> <span class="o">??</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">// 0, since 'undefined' is nullish</span>

<span class="c1">// Here's a case where it differs from Logical OR (||):</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">0</span> <span class="o">??</span> <span class="mi">5</span><span class="p">);</span> <span class="c1">// 0</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">0</span> <span class="o">||</span> <span class="mi">5</span><span class="p">);</span> <span class="c1">// 5</span></code></pre></figure>

<p  dir="auto"><strong>Compatibility: ES2020+, it was introduced in Chrome 80 / Firefox 72 / Safari 13.1. It has no IE support.</strong></p>
<h3  id="-restspread" dir="auto"><code  class="highlighter-rouge notranslate">...</code> Rest/Spread</h3>
<p  dir="auto">It’s technically not an operator, it’s special syntax we can use and it serves two mirror purposes:</p>

          <ul  dir="auto">
              <li>
<p  dir="auto"><strong>Rest:</strong> This syntax is used in function definitions to collect additional function arguments. It’s useful when you don’t know how many
parameters a function needs. It collects them into an array.</p>  </li>
  <li>
<p  dir="auto"><strong>Spread:</strong> This syntax performs the opposite of “rest”, and can be used to populate a function from an array. It can also be used to
clone or merge arrays and objects.</p>  </li>

          </ul>
        
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="cm">/* Rest */</span>
<span class="kd">function</span> <span class="nf">sum</span><span class="p">(...</span><span class="nx">nums</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">nums</span><span class="p">.</span><span class="nf">reduce</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nf">sum</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">));</span> <span class="c1">// 6</span>

<span class="cm">/* Spread */</span>
<span class="kd">const</span> <span class="nx">threeNums</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span> <span class="c1">// 6</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nf">sum</span><span class="p">(...</span><span class="nx">threeNums</span><span class="p">));</span>

<span class="cm">/* Cloning an array */</span>
<span class="kd">const</span> <span class="nx">data</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>
<span class="kd">const</span> <span class="nx">dataCopy</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">data</span><span class="p">,</span> <span class="mi">4</span><span class="p">];</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">dataCopy</span><span class="p">);</span> <span class="c1">// [1, 2, 3, 4]</span>

<span class="cm">/* Merging an object */</span>
<span class="kd">const</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span> <span class="na">a</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="na">b</span><span class="p">:</span> <span class="mi">1</span> <span class="p">};</span>
<span class="kd">const</span> <span class="nx">newObj</span> <span class="o">=</span> <span class="p">{...</span><span class="nx">obj</span><span class="p">,</span> <span class="na">b</span><span class="p">:</span> <span class="mi">2</span><span class="p">};</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">newObj</span><span class="p">);</span> <span class="c1">// { a: 1, b: 2 };</span></code></pre></figure>

<h3  id="-property-accessor" dir="auto"><code  class="highlighter-rouge notranslate">.</code> Property Accessor</h3>
<p  dir="auto">This operator is used to pluck out a property from an object. This only works if you know the key of the property.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">const</span> <span class="nx">person</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Harshal</span><span class="dl">"</span><span class="p">,</span>
  <span class="na">address</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">city</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Mumbai</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">province</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Maharashtra</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">country</span><span class="p">:</span> <span class="dl">"</span><span class="s2">India</span><span class="dl">"</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">person</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span> <span class="c1">// "Harshal"</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">person</span><span class="p">.</span><span class="nx">address</span><span class="p">.</span><span class="nx">city</span><span class="p">);</span> <span class="c1">// "Mumbai"</span></code></pre></figure>

<p  dir="auto">If the property name is held in a variable, you’ll need to use bracket notation instead:</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">const</span> <span class="nx">relevantKey</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">city</span><span class="dl">"</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">person</span><span class="p">.</span><span class="nx">address</span><span class="p">.</span><span class="nx">relevantKey</span><span class="p">);</span> <span class="c1">// undefined</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">person</span><span class="p">.</span><span class="nx">address</span><span class="p">[</span><span class="nx">relevantKey</span><span class="p">]);</span> <span class="sr">/ "Mumbai"</span></code></pre></figure>

<h3  id="-pipeline" dir="auto"><code  class="highlighter-rouge notranslate">|&gt;</code> Pipeline</h3>
<p  dir="auto">It functions as a sort of “inverted” function call; instead of calling a function with an argument, you “pipe” an argument into a function.</p>
<p  dir="auto">It reads left-to-right like a chain of transformations (similar to Unix pipes or functional languages).</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="cm">/* Traditional function call */</span>
<span class="kd">function</span> <span class="nf">multiply</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">x</span> <span class="o">*</span> <span class="mi">2</span><span class="p">;</span>
<span class="p">}</span>
<span class="kd">let</span> <span class="nx">result</span> <span class="o">=</span> <span class="nf">multiply</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span> <span class="c1">// 10</span>

<span class="cm">/* Proposed piped alternative */</span>
<span class="kd">let</span> <span class="nx">result</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">|&gt;</span> <span class="p">(</span><span class="nx">x</span> <span class="o">=&gt;</span> <span class="nx">x</span> <span class="o">*</span> <span class="mi">2</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span> <span class="c1">// 10</span></code></pre></figure>

<p  dir="auto"><strong>Compatibility: The pipeline operator is a TC39 stage-2 proposal, not standard yet.</strong></p>
<h3  id="-arrow" dir="auto"><code  class="highlighter-rouge notranslate">=&gt;</code> Arrow</h3>
<p  dir="auto">This operator provides a concise syntax for writing function expressions.</p>
<p  dir="auto"><strong>Concise Syntax:</strong> Arrow functions offer a shorter way to define functions, particularly for simple, single-line functions or callbacks.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="cm">/* Traditional function */</span>
<span class="kd">function</span> <span class="nf">add</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span><span class="p">;</span>
<span class="p">}</span>

<span class="cm">/* Using arrow operator */</span>
<span class="kd">const</span> <span class="nx">add</span> <span class="o">=</span> <span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span><span class="p">;</span></code></pre></figure>

<p  dir="auto"><strong>Implicit Return:</strong> For single-expression arrow functions, the <code  class="highlighter-rouge notranslate">return</code> keyword and curly braces <code  class="highlighter-rouge notranslate">{}</code> can be omitted, and the
expression’s result is implicitly returned.</p>
<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">const</span> <span class="nx">multiply</span> <span class="o">=</span> <span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">x</span> <span class="o">*</span> <span class="nx">y</span><span class="p">;</span>

<span class="c1">// Arrow functions are convenient when used as callbacks for array methods:</span>
<span class="kd">const</span> <span class="nx">nums</span> <span class="o">=</span> <span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">];</span>
<span class="kd">const</span> <span class="nx">positiveNums</span> <span class="o">=</span> <span class="nx">nums</span><span class="p">.</span><span class="nf">filter</span><span class="p">(</span><span class="nx">num</span> <span class="o">=&gt;</span> <span class="nx">num</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">positiveNums</span><span class="p">);</span> <span class="c1">// [0, 1, 2]</span></code></pre></figure>


          <blockquote  dir="auto">
            <p  dir="auto">Note: Arrow functions are somewhat limited: they don’t have their own context (so <code  class="highlighter-rouge notranslate">this</code> cannot be used), nor can they be used as constructors.</p>
          </blockquote>
        
<h2  id="quick-tips" dir="auto">Quick Tips</h2>

          <ol  dir="auto">
              <li><p  dir="auto">Use <code  class="highlighter-rouge notranslate">===</code> and <code  class="highlighter-rouge notranslate">!==</code> instead of <code  class="highlighter-rouge notranslate">==</code> and <code  class="highlighter-rouge notranslate">!=</code> to avoid type coercion confusion.</p></li>
  <li><p  dir="auto">Use <code  class="highlighter-rouge notranslate">??</code> instead of <code  class="highlighter-rouge notranslate">||</code> when you only want to handle <code  class="highlighter-rouge notranslate">null</code> or <code  class="highlighter-rouge notranslate">undefined</code>.</p></li>
  <li><p  dir="auto">Be careful with bitwise operators—they convert numbers to <strong>32-bit signed integers</strong>.</p></li>
  <li><p  dir="auto"><code  class="highlighter-rouge notranslate">!!value</code> is a handy trick to convert any value to <code  class="highlighter-rouge notranslate">true</code> or <code  class="highlighter-rouge notranslate">false</code>.</p></li>

          </ol>
        
<h2  id="quick-tips--best-practices" dir="auto">Quick Tips &amp; Best Practices</h2>

          <ol  dir="auto">
              <li><p  dir="auto">Prefer <code  class="highlighter-rouge notranslate">===</code> / <code  class="highlighter-rouge notranslate">!==</code> over <code  class="highlighter-rouge notranslate">==</code> / <code  class="highlighter-rouge notranslate">!=</code> to avoid surprises from type coercion.</p></li>
  <li><p  dir="auto">Use <code  class="highlighter-rouge notranslate">??</code> for defaulting nullish values (<code  class="highlighter-rouge notranslate">null</code> or <code  class="highlighter-rouge notranslate">undefined</code>). Use <code  class="highlighter-rouge notranslate">||</code> when you also want to treat <code  class="highlighter-rouge notranslate">0</code>, <code  class="highlighter-rouge notranslate">""</code>, <code  class="highlighter-rouge notranslate">false</code> as fallbacks.</p></li>
  <li><p  dir="auto">Use <code  class="highlighter-rouge notranslate">?.</code> when reading deeply nested object properties to avoid <code  class="highlighter-rouge notranslate">TypeError</code>.</p></li>
  <li><p  dir="auto"><code  class="highlighter-rouge notranslate">!!value</code> is a succinct pattern to convert any value to boolean.</p></li>
  <li><p  dir="auto">Be careful with bitwise ops — they coerce to 32-bit ints and can be surprising with negative numbers.</p></li>
  <li><p  dir="auto">Logical assignment <code  class="highlighter-rouge notranslate">(&amp;&amp;=</code>, <code  class="highlighter-rouge notranslate">||=</code>, <code  class="highlighter-rouge notranslate">??=</code>) is a readable way to conditionally assign without repeating the variable.</p></li>
  <li><p  dir="auto">Know precedence when mixing many operators or use parentheses to make intentions explicit.</p></li>

          </ol>
        
<h2  id="conclusion" dir="auto">Conclusion</h2>
<p  dir="auto">JavaScript operators are powerful tools for transforming, comparing, and assigning values. From simple arithmetic to advanced optional chaining, knowing them well improves both the clarity and efficiency of your code. With new operators being added to the language (like pipeline and logical assignment), staying updated is key to writing modern JavaScript.</p>
<p  dir="auto">Operators are the building blocks of logic and computation in JavaScript. Mastering them gives you cleaner, more efficient code and helps avoid subtle bugs.</p>
<p  dir="auto">JavaScript operators are fundamental tools for everyday coding. From arithmetic and comparisons to modern features like optional chaining and nullish coalescing, operators make code compact and expressive — but they also bring pitfalls (type coercion, precedence, bitwise conversion). Use strict equality, prefer nullish checks where appropriate, and always keep readability in mind: explicitness beats cleverness.</p>]]></content>

    
      <category term="javascript" scheme="urn:taxonomy:tag" />
    
      <category term="operators" scheme="urn:taxonomy:tag" />
    
      <category term="syntax" scheme="urn:taxonomy:tag" />
    
      <category term="tutorial" scheme="urn:taxonomy:tag" />
    
      <category term="programming" scheme="urn:taxonomy:tag" />
    
      <category term="webdev" scheme="urn:taxonomy:tag" />
    
      <category term="es6+" scheme="urn:taxonomy:tag" />
    
      <category term="frontend" scheme="urn:taxonomy:tag" />
    
      <category term="cheatsheet" scheme="urn:taxonomy:tag" />
    

    
      <category term="JavaScript" scheme="urn:taxonomy:category" />
    
  </entry>
  
  <entry xml:lang="en">
    <title>Responsive CSS Grid Layouts: `fr` Units, `minmax()`, `auto-fill`, and `auto-fit` Explained</title>
    <link rel="alternate" type="text/html" href="https://shivam091.github.io/post/responsive-css-grid-layouts" />
    <id>https://shivam091.github.io/post/responsive-css-grid-layouts</id>

    <published>2025-07-09T15:21:11+05:30</published>
    <updated>2025-08-14T08:42:44+05:30</updated>

    
    <media:thumbnail
      url="https://shivam091.github.io/assets/img/posts/css/responsive-css-grid-layouts/cover.png"
      width="1200"
      height="630" />
    

    <summary type="html">
      Learn how to build truly responsive CSS Grid layouts using `fr` units, `minmax()`, `auto-fit`, `auto-fill`, and modern media &amp; container queries.
    </summary>
    <content type="html"><![CDATA[<h2  id="introduction" dir="auto">Introduction</h2>
<p  dir="auto">Welcome to <strong>Part 3</strong> of the CSS Grid Fundamentals Series — the final and most impactful part!</p>
<p  dir="auto">So far, we’ve explored:</p>

          <ul  dir="auto">
              <li><p  dir="auto"><a  href="/post/getting-started-with-css-grid">Part 1</a>: Grid basics, tracks, and layout structure</p></li>
  <li><p  dir="auto"><a  href="/post/mastering-css-grid">Part 2</a>: Grid areas, alignment, spanning, and implicit/explicit tracks</p></li>

          </ul>
        
<p  dir="auto">Now, we shift gears to what makes CSS Grid truly shine — <strong>responsiveness</strong>.</p>
<p  dir="auto">In this post, you’ll learn how to:</p>

          <ul  dir="auto">
              <li><p  dir="auto">Use fractional units (<code  class="highlighter-rouge notranslate">fr</code>) for flexible sizing</p></li>
  <li><p  dir="auto">Combine <code  class="highlighter-rouge notranslate">minmax()</code> with <code  class="highlighter-rouge notranslate">auto-fit</code> and <code  class="highlighter-rouge notranslate">auto-fill</code> to create fluid, wrapping grids</p></li>
  <li><p  dir="auto">Write responsive layouts with or <strong>without media queries</strong></p></li>
  <li><p  dir="auto">Enhance responsiveness further using <strong>container queries</strong></p></li>

          </ul>
        
<p  dir="auto">Think of this as your guide to <strong>building adaptable, scalable layouts</strong> that behave beautifully on any screen — from a small phone to a wide desktop.</p>
<p  dir="auto">Whether you’re designing cards, product grids, or UI dashboards, these tools let you ditch rigid breakpoints and build with confidence.</p>
<h2  id="fractional-units-fr" dir="auto">Fractional Units (<code  class="highlighter-rouge notranslate">fr</code>)</h2>
<p  dir="auto">The <code  class="highlighter-rouge notranslate">fr</code> unit stands for <strong>fraction of available space</strong>. It’s a powerful tool for creating fluid, responsive layouts.</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">2fr</span> <span class="m">1fr</span><span class="p">;</span> <span class="c">/* First column takes 2/3, second takes 1/3 */</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">In this layout:</p>

          <ul  dir="auto">
              <li><p  dir="auto">The grid container’s space is divided into <strong>3 fractions</strong>.</p></li>
  <li><p  dir="auto">The first column gets <strong>2 parts</strong>, the second column gets <strong>1 part</strong>.</p></li>

          </ul>
        
<h3  id="repeating-equal-columns" dir="auto">Repeating Equal Columns</h3>
<p  dir="auto">You can create equal-width columns easily with <code  class="highlighter-rouge notranslate">repeat()</code> and <code  class="highlighter-rouge notranslate">1fr</code>:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="nf">repeat</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">1fr</span><span class="p">);</span> <span class="c">/* Three equal columns */</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">This setup creates <strong>3 columns of equal width</strong>, with a <code  class="highlighter-rouge notranslate">1rem</code> gap between both columns and rows. It’s clean and scalable.</p>
<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/LEVKBqw" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/LEVKBqw" class="external-link">Try this on CodePen</a></p>
<h2  id="minmax-function" dir="auto"><code  class="highlighter-rouge notranslate">minmax()</code> Function</h2>
<p  dir="auto"><code  class="highlighter-rouge notranslate">minmax(min, max)</code> is a <strong>CSS Grid function</strong> that defines a track (row or column) with:</p>

          <ul  dir="auto">
              <li><p  dir="auto">A <strong>minimum size</strong> it can shrink to</p></li>
  <li><p  dir="auto">A <strong>maximum size</strong> it can grow to</p></li>

          </ul>
        
<p  dir="auto">It’s especially useful when building <strong>responsive</strong> layouts, because it allows a column or row to be flexible—but within limits.</p>
<p  dir="auto"><strong>Syntax:</strong></p>
<p  dir="auto"><code  class="highlighter-rouge notranslate">minmax(&lt;min&gt;, &lt;max&gt;)</code></p>

          <ul  dir="auto">
              <li><p  dir="auto"><strong><code  class="highlighter-rouge notranslate">&lt;min&gt;</code></strong> – the smallest the track can be (can be 0, 100px, min-content, etc.)</p></li>
  <li><p  dir="auto"><strong><code  class="highlighter-rouge notranslate">&lt;max&gt;</code></strong> – the largest the track can be (can be 1fr, auto, max-content, etc.)</p></li>

          </ul>
        
<h3  id="real-world-use-case-responsive-cards" dir="auto">Real-World Use Case: Responsive Cards</h3>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="code"><pre><span class="nc">.card-grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="nf">repeat</span><span class="p">(</span><span class="nb">auto-fit</span><span class="p">,</span> <span class="nf">minmax</span><span class="p">(</span><span class="m">250px</span><span class="p">,</span> <span class="m">1fr</span><span class="p">));</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">2rem</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      HTML
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-html" data-lang="html"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card-grid"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card"</span><span class="nt">&gt;</span>Card 1<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card"</span><span class="nt">&gt;</span>Card 2<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card"</span><span class="nt">&gt;</span>Card 3<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card"</span><span class="nt">&gt;</span>Card 4<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">In this example, cards are laid out in rows on large screens and they stack neatly without overflow on small screens.</p>
<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/raVEZaP" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/raVEZaP" class="external-link">Try this on CodePen</a></p>
<h2  id="auto-fit-vs-auto-fill" dir="auto"><code  class="highlighter-rouge notranslate">auto-fit</code> vs <code  class="highlighter-rouge notranslate">auto-fill</code></h2>
<p  dir="auto">Want a grid that adapts to screen width <em>without media queries</em>? Use <code  class="highlighter-rouge notranslate">auto-fit</code> or <code  class="highlighter-rouge notranslate">auto-fill</code> along with <code  class="highlighter-rouge notranslate">minmax()</code>:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="nf">repeat</span><span class="p">(</span><span class="nb">auto-fit</span><span class="p">,</span> <span class="nf">minmax</span><span class="p">(</span><span class="m">200px</span><span class="p">,</span> <span class="m">1fr</span><span class="p">));</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong>What’s happening here?</strong></p>

          <ul  dir="auto">
              <li><p  dir="auto"><code  class="highlighter-rouge notranslate">minmax(200px, 1fr)</code> ensures each column is at least <code  class="highlighter-rouge notranslate">200px</code> wide but can grow to fill available space.</p></li>
  <li><p  dir="auto"><code  class="highlighter-rouge notranslate">auto-fit</code> collapses empty tracks if there isn’t enough content.</p></li>
  <li><p  dir="auto"><code  class="highlighter-rouge notranslate">auto-fill</code> reserves space for empty tracks, keeping the layout structure intact.</p></li>

          </ul>
        
<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/ogXrMmv" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/ogXrMmv" class="external-link">Try this on CodePen</a></p>
<p  dir="auto"><strong>Clarification:</strong></p>
          <ul  dir="auto">
              <li><p  dir="auto"><code  class="highlighter-rouge notranslate">auto-fit</code>: Shrinks or collapses unused columns when there’s no content.</p></li>
  <li><p  dir="auto"><code  class="highlighter-rouge notranslate">auto-fill</code>: Maintains the grid structure, even if columns are empty. Reserves space for empty columns.</p></li>

          </ul>
        
<h2  id="responsive-grid-with-media-queries" dir="auto">Responsive Grid with Media Queries</h2>
<p  dir="auto">Although CSS Grid handles many responsive scenarios on its own, media queries can still help for more precise control.</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="nf">repeat</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">1fr</span><span class="p">);</span> <span class="c">/* 3 columns on large screens */</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">@media</span> <span class="p">(</span><span class="n">max-width</span><span class="p">:</span> <span class="m">768px</span><span class="p">)</span> <span class="p">{</span>
  <span class="nc">.grid</span> <span class="p">{</span>
    <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">1fr</span><span class="p">;</span> <span class="c">/* Stacks items into a single column */</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">This layout shows:</p>

          <ul  dir="auto">
              <li><p  dir="auto"><strong>3 columns</strong> on desktop screens.</p></li>
  <li><p  dir="auto">A <strong>single-column stacked layout</strong> on tablets or phones (under 768px).</p></li>

          </ul>
        
<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/yyNdqwj" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/yyNdqwj" class="external-link">Try this on CodePen</a></p>
<h2  id="beyond-media-queries-container-queries" dir="auto">Beyond Media Queries: Container Queries</h2>
<p  dir="auto">Media queries are powerful, but sometimes they’re too broad — what if you want a component to adapt <strong>based on its container size</strong>, not the entire viewport?</p>
<p  dir="auto">That’s where <strong>Container Queries</strong> come in. To use container queries:</p>

          <ol  dir="auto">
              <li><p  dir="auto">Add <code  class="highlighter-rouge notranslate">container-type</code> to the parent element.</p></li>
  <li><p  dir="auto">Write container-specific rules using <code  class="highlighter-rouge notranslate">@container</code>.</p></li>

          </ol>
        
<p  dir="auto">This is especially useful for <strong>component-driven UIs</strong>, where layout responsiveness depends on parent size (e.g., sidebar, card wrapper, modal content).</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="code"><pre><span class="c">/* Parent container with container-type enabled */</span>
<span class="nc">.card-grid</span> <span class="p">{</span>
  <span class="nl">container-type</span><span class="p">:</span> <span class="nb">inline-size</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">border</span><span class="p">:</span> <span class="m">2px</span> <span class="nb">dashed</span> <span class="nx">#ccc</span><span class="p">;</span>
  <span class="nl">max-width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">/* Default layout (single column) */</span>
<span class="nc">.card</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">1fr</span><span class="p">;</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">background</span><span class="p">:</span> <span class="nx">#f8f9fa</span><span class="p">;</span>
  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="nx">#ddd</span><span class="p">;</span>
  <span class="nl">border-radius</span><span class="p">:</span> <span class="m">8px</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">/* Container Query kicks in above 500px */</span>
<span class="k">@container</span> <span class="p">(</span><span class="n">min-width</span><span class="p">:</span> <span class="m">500px</span><span class="p">)</span> <span class="p">{</span>
  <span class="nc">.card</span> <span class="p">{</span>
    <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">2fr</span> <span class="m">1fr</span><span class="p">;</span>
    <span class="nl">align-items</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">Here’s the HTML structure:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      HTML
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-html" data-lang="html"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card-grid"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;h2&gt;</span>Card Title<span class="nt">&lt;/h2&gt;</span>
    <span class="nt">&lt;p&gt;</span>This card layout changes based on its container size.<span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/yyNmQXM" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/yyNmQXM" class="external-link">Try this on CodePen</a></p>

          <blockquote  dir="auto">
            <p  dir="auto">Note: Most modern browsers support container queries (except older Safari/Firefox versions). Always check compatibility if building for production.</p>
          </blockquote>
        
<h2  id="real-world-examples" dir="auto">Real-World Examples</h2>
<h3  id="responsive-card-dashboard-media-queries" dir="auto">Responsive Card Dashboard (Media Queries)</h3>
<p  dir="auto">A simple dashboard grid using <code  class="highlighter-rouge notranslate">grid-template-areas</code>, <code  class="highlighter-rouge notranslate">minmax()</code>, and media queries.</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
</pre></td><td class="code"><pre><span class="nc">.dashboard</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-areas</span><span class="p">:</span>
    <span class="s1">"sidebar content"</span>
    <span class="s1">"sidebar widgets"</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">250px</span> <span class="m">1fr</span><span class="p">;</span>
  <span class="nl">grid-template-rows</span><span class="p">:</span> <span class="nb">auto</span> <span class="m">1fr</span><span class="p">;</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1.5rem</span><span class="p">;</span>
  <span class="nl">min-height</span><span class="p">:</span> <span class="m">100vh</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.sidebar</span> <span class="p">{</span>
  <span class="nl">grid-area</span><span class="p">:</span> <span class="n">sidebar</span><span class="p">;</span>
  <span class="nl">background</span><span class="p">:</span> <span class="nx">#f0f0f0</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.content</span> <span class="p">{</span>
  <span class="nl">grid-area</span><span class="p">:</span> <span class="nb">content</span><span class="p">;</span>
  <span class="nl">background</span><span class="p">:</span> <span class="nx">#fff</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.widgets</span> <span class="p">{</span>
  <span class="nl">grid-area</span><span class="p">:</span> <span class="n">widgets</span><span class="p">;</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="nf">repeat</span><span class="p">(</span><span class="nb">auto-fit</span><span class="p">,</span> <span class="nf">minmax</span><span class="p">(</span><span class="m">200px</span><span class="p">,</span> <span class="m">1fr</span><span class="p">));</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">@media</span> <span class="p">(</span><span class="n">max-width</span><span class="p">:</span> <span class="m">768px</span><span class="p">)</span> <span class="p">{</span>
  <span class="nc">.dashboard</span> <span class="p">{</span>
    <span class="nl">grid-template-areas</span><span class="p">:</span>
      <span class="s1">"sidebar"</span>
      <span class="s1">"content"</span>
      <span class="s1">"widgets"</span><span class="p">;</span>
    <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">1fr</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      HTML
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-html" data-lang="html"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"dashboard"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;aside</span> <span class="na">class=</span><span class="s">"sidebar"</span><span class="nt">&gt;</span>Sidebar<span class="nt">&lt;/aside&gt;</span>
  <span class="nt">&lt;main</span> <span class="na">class=</span><span class="s">"content"</span><span class="nt">&gt;</span>Main Content<span class="nt">&lt;/main&gt;</span>
  <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">"widgets"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"widget"</span><span class="nt">&gt;</span>Widget 1<span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"widget"</span><span class="nt">&gt;</span>Widget 2<span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"widget"</span><span class="nt">&gt;</span>Widget 3<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/section&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/yyNmQGP" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/yyNmQGP" class="external-link">Try this on CodePen</a></p>
<h3  id="card-grid-with-container-queries" dir="auto">Card Grid with Container Queries</h3>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
</pre></td><td class="code"><pre><span class="nc">.card-wrapper</span> <span class="p">{</span>
  <span class="nl">container-type</span><span class="p">:</span> <span class="nb">inline-size</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">max-width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="nx">#ccc</span><span class="p">;</span>
  <span class="nl">margin-bottom</span><span class="p">:</span> <span class="m">2rem</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.dashboard-card</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-areas</span><span class="p">:</span>
    <span class="s1">"title"</span>
    <span class="s1">"meta"</span>
    <span class="s1">"content"</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">1fr</span><span class="p">;</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">background</span><span class="p">:</span> <span class="nx">#f9fafb</span><span class="p">;</span>
  <span class="nl">border-radius</span><span class="p">:</span> <span class="m">0.5rem</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.dashboard-card</span> <span class="nt">h2</span> <span class="p">{</span> <span class="nl">grid-area</span><span class="p">:</span> <span class="n">title</span><span class="p">;</span> <span class="p">}</span>
<span class="nc">.dashboard-card</span> <span class="nc">.meta</span> <span class="p">{</span> <span class="nl">grid-area</span><span class="p">:</span> <span class="n">meta</span><span class="p">;</span> <span class="p">}</span>
<span class="nc">.dashboard-card</span> <span class="nc">.content</span> <span class="p">{</span> <span class="nl">grid-area</span><span class="p">:</span> <span class="nb">content</span><span class="p">;</span> <span class="p">}</span>

<span class="k">@container</span> <span class="p">(</span><span class="n">min-width</span><span class="p">:</span> <span class="m">600px</span><span class="p">)</span> <span class="p">{</span>
  <span class="nc">.dashboard-card</span> <span class="p">{</span>
    <span class="nl">grid-template-areas</span><span class="p">:</span>
      <span class="s1">"title meta"</span>
      <span class="s1">"content content"</span><span class="p">;</span>
    <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">2fr</span> <span class="m">1fr</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      HTML
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-html" data-lang="html"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"card-wrapper"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"dashboard-card"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;h2&gt;</span>Dashboard Title<span class="nt">&lt;/h2&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"meta"</span><span class="nt">&gt;</span>User • 5 mins ago<span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"content"</span><span class="nt">&gt;</span>
      This card layout changes based on container width. Resize the parent to see it adapt.
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/VYLoVqJ" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/VYLoVqJ" class="external-link">Try this on CodePen</a></p>
<h2  id="quick-reference-common-grid-properties" dir="auto">Quick Reference: Common Grid Properties</h2>
<p  dir="auto">Here’s a concise summary of essential CSS Grid properties:</p>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>Property</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>grid-template-columns</td>
      <td>Defines the number and width of columns in the grid</td>
    </tr>
    <tr>
      <td>grid-template-rows</td>
      <td>Defines the number and height of rows in the grid</td>
    </tr>
    <tr>
      <td>gap</td>
      <td>Sets spacing between rows and columns (shorthand for <code  class="highlighter-rouge notranslate">row-gap</code> and <code  class="highlighter-rouge notranslate">column-gap</code>)</td>
    </tr>
    <tr>
      <td>grid-template-areas</td>
      <td>Defines named areas for placing grid items visually</td>
    </tr>
    <tr>
      <td>justify-items</td>
      <td>Aligns <strong>all grid items</strong> horizontally within their cells</td>
    </tr>
    <tr>
      <td>align-items</td>
      <td>Aligns <strong>all grid items</strong> vertically within their cells</td>
    </tr>
    <tr>
      <td>place-items</td>
      <td>Shorthand for setting both <code  class="highlighter-rouge notranslate">align-items</code> and <code  class="highlighter-rouge notranslate">justify-items</code></td>
    </tr>
    <tr>
      <td>justify-self</td>
      <td>Aligns an <strong>individual item</strong> horizontally</td>
    </tr>
    <tr>
      <td>align-self</td>
      <td>Aligns an <strong>individual item</strong> vertically</td>
    </tr>
    <tr>
      <td>place-self</td>
      <td>Shorthand for setting both <code  class="highlighter-rouge notranslate">align-self</code> and <code  class="highlighter-rouge notranslate">justify-self</code></td>
    </tr>
    <tr>
      <td>grid-auto-rows</td>
      <td>Defines row size for <strong>implicitly created rows</strong></td>
    </tr>
    <tr>
      <td>grid-auto-columns</td>
      <td>Defines column size for <strong>implicitly created columns</strong></td>
    </tr>
    <tr>
      <td>grid-column</td>
      <td>Specifies how many columns an item spans or where it starts/ends</td>
    </tr>
    <tr>
      <td>grid-row</td>
      <td>Specifies how many rows an item spans or where it starts/ends</td>
    </tr>
  </tbody>

          </table>
        
<h2  id="frequently-asked-questions-faq" dir="auto">Frequently Asked Questions (FAQ)</h2>
<h3  id="when-should-i-use-auto-fit-vs-auto-fill" dir="auto">When should I use <code  class="highlighter-rouge notranslate">auto-fit</code> vs <code  class="highlighter-rouge notranslate">auto-fill</code>?</h3>
<p  dir="auto">Use <strong><code  class="highlighter-rouge notranslate">auto-fit</code></strong> when you want empty tracks to collapse and not reserve space — great for wrapping cards that adjust to available space.
Use <strong><code  class="highlighter-rouge notranslate">auto-fill</code></strong> if you want to maintain the column structure even when there’s no content — helpful for form fields or placeholders.</p>
<h3  id="can-i-use-flexbox-and-grid-together" dir="auto">Can I use Flexbox and Grid together?</h3>
<p  dir="auto">Absolutely! Use <strong>Grid for layout structure</strong> (e.g., page, sections), and Flexbox for <strong>aligning content within grid items</strong> (e.g., buttons inside cards).</p>
<h3  id="should-i-replace-all-media-queries-with-container-queries" dir="auto">Should I replace all media queries with container queries?</h3>
<p  dir="auto">No — container queries are best for <strong>component-based layouts</strong>. Use media queries for <strong>global changes</strong> (headers, nav, grid size) and container queries for <strong>components inside resizable areas</strong>.</p>
<h3  id="do-i-still-need-breakpoints" dir="auto">Do I still need breakpoints?</h3>
<p  dir="auto">Yes — but you’ll need fewer. Grid’s flexibility (with <code  class="highlighter-rouge notranslate">fr</code>, <code  class="highlighter-rouge notranslate">minmax()</code>, and <code  class="highlighter-rouge notranslate">auto-fit</code>) reduces reliance on rigid breakpoints.</p>
<h2  id="conclusion" dir="auto">Conclusion</h2>
<p  dir="auto">🎉 Congratulations! You’ve completed the <strong>CSS Grid Fundamentals Series</strong>.</p>
<p  dir="auto">Let’s recap what you now know:</p>

          <ul  dir="auto">
              <li><p  dir="auto">✅ <strong>Part 1:</strong> The building blocks — containers, tracks, and structure</p></li>
  <li><p  dir="auto">✅ <strong>Part 2:</strong> Layout precision — grid areas, alignment, spanning, and track creation</p></li>
  <li><p  dir="auto">✅ <strong>Part 3:</strong> Flexibility — responsive units (<code  class="highlighter-rouge notranslate">fr</code>, <code  class="highlighter-rouge notranslate">minmax()</code>), smart auto-wrapping, media queries, and container queries</p></li>

          </ul>
        
<p  dir="auto">With these tools, you can:</p>

          <ul  dir="auto">
              <li><p  dir="auto">Create flexible layouts <strong>without bloated media query chains</strong></p></li>
  <li><p  dir="auto">Build components that respond to their own size using <strong>container queries</strong></p></li>
  <li><p  dir="auto">Design responsive grids that scale gracefully and look professional at every breakpoint</p></li>

          </ul>
        
<p  dir="auto"><strong>CSS Grid isn’t just a layout tool</strong> — it’s a complete design system built into the browser. Mastering it means writing less CSS while building better UI.</p>
<p  dir="auto">🚀 Keep experimenting with combinations of Grid, Flexbox, and container queries — that’s where layout magic happens.</p>]]></content>

    
      <category term="css" scheme="urn:taxonomy:tag" />
    
      <category term="grid" scheme="urn:taxonomy:tag" />
    
      <category term="beginner" scheme="urn:taxonomy:tag" />
    
      <category term="responsive" scheme="urn:taxonomy:tag" />
    
      <category term="layout" scheme="urn:taxonomy:tag" />
    
      <category term="fr-units" scheme="urn:taxonomy:tag" />
    
      <category term="minmax" scheme="urn:taxonomy:tag" />
    
      <category term="media-queries" scheme="urn:taxonomy:tag" />
    
      <category term="container-queries" scheme="urn:taxonomy:tag" />
    
      <category term="auto-fit" scheme="urn:taxonomy:tag" />
    
      <category term="auto-fill" scheme="urn:taxonomy:tag" />
    

    
      <category term="CSS" scheme="urn:taxonomy:category" />
    
  </entry>
  
  <entry xml:lang="en">
    <title>Mastering CSS Grid: Grid Areas, Item Alignment, and Spanning</title>
    <link rel="alternate" type="text/html" href="https://shivam091.github.io/post/mastering-css-grid" />
    <id>https://shivam091.github.io/post/mastering-css-grid</id>

    <published>2025-07-09T15:21:11+05:30</published>
    <updated>2025-08-14T08:42:44+05:30</updated>

    
    <media:thumbnail
      url="https://shivam091.github.io/assets/img/posts/css/mastering-css-grid-alignment-spanning/cover.png"
      width="1200"
      height="630" />
    

    <summary type="html">
      Take your CSS Grid skills to the next level by mastering semantic layouts with grid areas, item alignment, and element spanning techniques.
    </summary>
    <content type="html"><![CDATA[<h2  id="introduction" dir="auto">Introduction</h2>
<p  dir="auto">Welcome to <strong>Part 2</strong> of the CSS Grid Fundamentals Series!</p>
<p  dir="auto">In <a  href="/post/getting-started-with-css-grid">Part 1</a>, you laid the groundwork — learning how to define grid containers, set up tracks, and build basic layouts.</p>
<p  dir="auto">Now, it’s time to go beyond the basics.</p>
<p  dir="auto"><strong>Think of CSS Grid as your layout canvas</strong> — and in this part, you’ll pick up new tools like a <strong>ruler, compass, and highlighter</strong> to draw structure, alignment, and flow with precision.</p>
<p  dir="auto">We’ll cover:</p>

          <ul  dir="auto">
              <li><p  dir="auto"><code  class="highlighter-rouge notranslate">grid-template-areas</code> for clean, visual layout structure</p></li>
  <li><p  dir="auto">Alignment techniques using <code  class="highlighter-rouge notranslate">place-items</code> and <code  class="highlighter-rouge notranslate">place-self</code></p></li>
  <li><p  dir="auto">Spanning elements across rows and columns</p></li>
  <li><p  dir="auto">The hidden mechanics of <strong>explicit</strong> and <strong>implicit</strong> grids</p></li>

          </ul>
        
<p  dir="auto">These are the techniques that elevate your layouts from <em>functional</em> to <em>flexible and scalable</em> — especially in real-world, component-based frontend projects.</p>
<h2  id="grid-template-areas" dir="auto">Grid Template Areas</h2>
<p  dir="auto">The <code  class="highlighter-rouge notranslate">grid-template-areas</code> property allows you to define your layout using named areas, making the grid structure more readable and easier to
maintain—especially for complex page layouts. It acts as a visual blueprint of your design and simplifies the placement of grid items.</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-areas</span><span class="p">:</span>
    <span class="s1">"header header header"</span>
    <span class="s1">"sidebar main main"</span>
    <span class="s1">"footer footer footer"</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">1fr</span> <span class="m">2fr</span> <span class="m">2fr</span><span class="p">;</span>
  <span class="nl">grid-template-rows</span><span class="p">:</span> <span class="nb">auto</span> <span class="m">1fr</span> <span class="nb">auto</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">Each quoted line defines a row in the grid. The repeated area names indicate how many columns that area spans. You can then assign elements to these areas
using the <code  class="highlighter-rouge notranslate">grid-area</code> property:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="code"><pre><span class="nc">.header</span> <span class="p">{</span>
  <span class="nl">grid-area</span><span class="p">:</span> <span class="n">header</span><span class="p">;</span>
  <span class="nl">background</span><span class="p">:</span> <span class="nx">#f8b400</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.main</span> <span class="p">{</span>
  <span class="nl">grid-area</span><span class="p">:</span> <span class="n">main</span><span class="p">;</span>
  <span class="nl">background</span><span class="p">:</span> <span class="nx">#4caf50</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.sidebar</span> <span class="p">{</span>
  <span class="nl">grid-area</span><span class="p">:</span> <span class="n">sidebar</span><span class="p">;</span>
  <span class="nl">background</span><span class="p">:</span> <span class="nx">#2196f3</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.footer</span> <span class="p">{</span>
  <span class="nl">grid-area</span><span class="p">:</span> <span class="n">footer</span><span class="p">;</span>
  <span class="nl">background</span><span class="p">:</span> <span class="nx">#9c27b0</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">Here’s the HTML structure:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      HTML
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-html" data-lang="html"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"grid"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;header</span> <span class="na">class=</span><span class="s">"header"</span><span class="nt">&gt;</span>Header<span class="nt">&lt;/header&gt;</span>
  <span class="nt">&lt;aside</span> <span class="na">class=</span><span class="s">"sidebar"</span><span class="nt">&gt;</span>Sidebar<span class="nt">&lt;/aside&gt;</span>
  <span class="nt">&lt;main</span> <span class="na">class=</span><span class="s">"main"</span><span class="nt">&gt;</span>Main Content<span class="nt">&lt;/main&gt;</span>
  <span class="nt">&lt;footer</span> <span class="na">class=</span><span class="s">"footer"</span><span class="nt">&gt;</span>Footer<span class="nt">&lt;/footer&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong>Explanation:</strong></p>

          <ul  dir="auto">
              <li><p  dir="auto">The layout is visually defined using <code  class="highlighter-rouge notranslate">grid-template-areas</code>, making it easier to understand and modify.</p></li>
  <li><p  dir="auto">The grid has <strong>3 columns</strong> and <strong>3 rows</strong>.</p></li>
  <li><p  dir="auto">Named areas like <code  class="highlighter-rouge notranslate">"header"</code>, <code  class="highlighter-rouge notranslate">"sidebar"</code>, <code  class="highlighter-rouge notranslate">"main"</code>, and <code  class="highlighter-rouge notranslate">"footer"</code> are assigned using <code  class="highlighter-rouge notranslate">grid-area</code>, allowing semantic HTML elements to be positioned without relying on source order.</p></li>
  <li><p  dir="auto">The column layout uses <code  class="highlighter-rouge notranslate">1fr 2fr 2fr</code>, giving the sidebar less space than the main content.</p></li>
  <li><p  dir="auto">This is a clean, semantic approach to building responsive page sections—no floats or nested containers needed.</p></li>

          </ul>
        
<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/JodQLgg" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/JodQLgg" class="external-link">Try this on CodePen</a></p>
<h2  id="aligning-grid-items" dir="auto">Aligning Grid Items</h2>
<p  dir="auto">CSS Grid not only lets you organize content into rows and columns—it also gives you precise control over <strong>how items are aligned within their grid cells</strong>.</p>
<p  dir="auto">Alignment can be applied at two levels:</p>
<h3  id="container-level-alignment" dir="auto">Container-Level Alignment</h3>
<p  dir="auto">These properties are applied to the <strong>grid container</strong> and affect <strong>all items</strong> inside the grid:</p>

          <ul  dir="auto">
              <li><p  dir="auto"><strong>justify-items</strong> — Aligns items <strong>horizontally</strong> (inline axis) within each cell.</p></li>
  <li><p  dir="auto"><strong>align-items</strong> — Aligns items <strong>vertically</strong> (block axis) within each cell.</p></li>
  <li><p  dir="auto"><strong>place-items</strong> — A shorthand for combining both <code  class="highlighter-rouge notranslate">align-items</code> and <code  class="highlighter-rouge notranslate">justify-items</code>.</p></li>

          </ul>
        
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">justify-items</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span> <span class="c">/* Horizontally center all grid items within their cells */</span>
  <span class="nl">align-items</span><span class="p">:</span> <span class="nb">center</span><span class="p">;</span>   <span class="c">/* Vertically center all grid items within their cells */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong>Visual Reference (Centered Items)</strong></p>
<pre><code>+-------------+-------------+-------------+
|             |             |             |
|     [ ]     |     [ ]     |     [ ]     |  ← centered in both directions
|             |             |             |
+-------------+-------------+-------------+
|             |             |             |
|     [ ]     |     [ ]     |     [ ]     |
|             |             |             |
+-------------+-------------+-------------+
</code></pre>

<p  dir="auto">You can also use <code  class="highlighter-rouge notranslate">place-items</code> as a shorthand:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">place-items</span><span class="p">:</span> <span class="nb">end</span> <span class="nb">start</span><span class="p">;</span> <span class="c">/* Aligns all grid items to the bottom (block-end) and left (inline-start) */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong>Visual Reference (Bottom-Left Aligned)</strong></p>
<pre><code>+-------------+-------------+-------------+
|             |             |             |
|             |             |             |
| [ ]         | [ ]         | [ ]         |  ← bottom-left alignment
+-------------+-------------+-------------+
|             |             |             |
|             |             |             |
| [ ]         | [ ]         | [ ]         |
+-------------+-------------+-------------+
</code></pre>

<h3  id="item-level-alignment" dir="auto">Item-Level Alignment</h3>
<p  dir="auto">While container-level alignment applies to <strong>all grid items, item-level alignment</strong> lets you override alignment <strong>per individual item</strong>.
These properties are set directly on the grid items themselves:</p>

          <ul  dir="auto">
              <li><p  dir="auto"><strong>justify-self</strong> — Aligns an item <strong>horizontally</strong> (inline axis) within its grid cell.</p></li>
  <li><p  dir="auto"><strong>align-self</strong> — Aligns an item <strong>vertically</strong> (block axis) within its grid cell.</p></li>
  <li><p  dir="auto"><strong>place-self</strong> — A shorthand for combining <code  class="highlighter-rouge notranslate">align-self</code> and <code  class="highlighter-rouge notranslate">justify-self</code>.</p></li>

          </ul>
        
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="nc">.item</span> <span class="p">{</span>
  <span class="nl">justify-self</span><span class="p">:</span> <span class="nb">end</span><span class="p">;</span> <span class="c">/* Aligns this item to the right (inline-end) of its cell */</span>
  <span class="nl">align-self</span><span class="p">:</span> <span class="nb">start</span><span class="p">;</span> <span class="c">/* Aligns this item to the top (block-start) of its cell */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong>Visual Reference (Top-Right Alignment)</strong></p>
<pre><code>+-------------+
|         [ ] |  ← aligned to top-right
|             |
|             |
+-------------+
</code></pre>

<p  dir="auto">You can also achieve the same alignment with <code  class="highlighter-rouge notranslate">place-self</code>:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="code"><pre><span class="nc">.item</span> <span class="p">{</span>
  <span class="nl">place-self</span><span class="p">:</span> <span class="nb">end</span> <span class="nb">start</span><span class="p">;</span> <span class="c">/* Aligns this item to the bottom (block-end) and left (inline-start) */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong>Visual Reference (Bottom-Left Alignment)</strong></p>
<pre><code>+-------------+
|             |
|             |
| [ ]         |  ← aligned to bottom-left
+-------------+
</code></pre>

<div class="alert alert-accent alert-outlined" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg version="1.0" role="img" class="icon icon-info-circle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path d="M9.5 11a1 1 0 0 1 1-1H12a1 1 0 0 1 1 1v4h1a1 1 0 1 1 0 2h-4a1 1 0 1 1 0-2h1v-3h-.5a1 1 0 0 1-1-1ZM12 9a1.25 1.25 0 1 0 0-2.5A1.25 1.25 0 0 0 12 9Z" />
  <path fill-rule="evenodd" d="M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12Zm10-8a8 8 0 1 0 0 16 8 8 0 0 0 0-16Z" clip-rule="evenodd" />
</svg>


  </div>
  <div class="alert-content">
    <p><strong>Pro Tip</strong>: You can override grid container alignment (<code>place-items</code>, <code>align-items</code>, <code>justify-items</code>) on a per-item basis using <code>place-self</code>, <code>align-self</code>, or <code>justify-self</code>.</p>

  </div>
  
</div>

<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/bNdPMKj" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/bNdPMKj" class="external-link">Try these alignments on CodePen</a></p>
<h2  id="spanning-grid-items" dir="auto">Spanning Grid Items</h2>
<p  dir="auto">CSS Grid allows items to span across multiple columns or rows using <code  class="highlighter-rouge notranslate">grid-column</code> and <code  class="highlighter-rouge notranslate">grid-row</code>. These properties let you define
where an item starts and ends in the grid layout.</p>
<p  dir="auto">Imagine a <strong>3×3</strong> grid:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      HTML
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-html" data-lang="html"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"grid"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"item"</span><span class="nt">&gt;</span>Spanning<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 2<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 3<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 4<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="nf">repeat</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">1fr</span><span class="p">);</span> <span class="c">/* 3 equal columns */</span>
  <span class="nl">grid-template-rows</span><span class="p">:</span> <span class="nf">repeat</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">100px</span><span class="p">);</span>   <span class="c">/* 3 equal rows */</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">0.5rem</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">And you apply:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="nc">.item</span> <span class="p">{</span>
  <span class="nl">grid-column</span><span class="p">:</span> <span class="m">1</span> <span class="o">/</span> <span class="m">3</span><span class="p">;</span> <span class="c">/* Spans from column line 1 to 3 → covers columns 1 and 2 */</span>
  <span class="nl">grid-row</span><span class="p">:</span> <span class="m">2</span> <span class="o">/</span> <span class="m">4</span><span class="p">;</span>    <span class="c">/* Spans from row line 2 to 4 → covers rows 2 and 3 */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong>Visual Reference (Lines Shown)</strong></p>
<pre><code>+------------+------------+------------+
|            |            |            |
|   Item 2   |   Item 3   |   Item 4   |
|            |            |            |
+------------+------------+------------+
|            |            |            |
|            |            |            |
|            |            |            |
+         Spanning        +------------+
|            |            |            |
|            |            |            |
|            |            |            |
+------------+------------+------------+
</code></pre>

<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/bNdPKwJ" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/bNdPKwJ" class="external-link">Try this on CodePen</a></p>
<h3  id="shorthand-vs-longhand" dir="auto">Shorthand vs Longhand</h3>
<p  dir="auto">The <code  class="highlighter-rouge notranslate">grid-column</code> and <code  class="highlighter-rouge notranslate">grid-row</code> properties are shorthands for their respective <strong>start</strong> and <strong>end</strong> lines:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="nc">.item</span> <span class="p">{</span>
  <span class="nl">grid-column</span><span class="p">:</span> <span class="m">2</span> <span class="o">/</span> <span class="m">4</span><span class="p">;</span>
  <span class="nl">grid-row</span><span class="p">:</span> <span class="m">1</span> <span class="o">/</span> <span class="m">3</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">This is functionally the same as:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="nc">.item</span> <span class="p">{</span>
  <span class="nl">grid-column-start</span><span class="p">:</span> <span class="m">2</span><span class="p">;</span>
  <span class="nl">grid-column-end</span><span class="p">:</span> <span class="m">4</span><span class="p">;</span>

  <span class="nl">grid-row-start</span><span class="p">:</span> <span class="m">1</span><span class="p">;</span>
  <span class="nl">grid-row-end</span><span class="p">:</span> <span class="m">3</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<h3  id="shorthand-with-span" dir="auto">Shorthand with <code  class="highlighter-rouge notranslate">span</code></h3>
<p  dir="auto">Instead of specifying <strong>start</strong> and <strong>end</strong> lines manually, you can use the <code  class="highlighter-rouge notranslate">span</code> keyword to make your code simpler and more flexible:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="nc">.item</span> <span class="p">{</span>
  <span class="nl">grid-column</span><span class="p">:</span> <span class="nb">span</span> <span class="m">2</span><span class="p">;</span> <span class="c">/* Span 2 columns from auto-start */</span>
  <span class="nl">grid-row</span><span class="p">:</span> <span class="nb">span</span> <span class="m">2</span><span class="p">;</span>    <span class="c">/* Span 2 rows from auto-start */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">This tells the grid item to span <strong>2 columns and 2 rows</strong> starting from its <strong>auto-determined position</strong> (i.e. where the browser places it in the flow).</p>
<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/raVEKzW" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/raVEKzW" class="external-link">Try this on CodePen</a></p>
<details>
  <summary>
    <svg version="1.0" role="img" class="icon icon-plus" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1.25rem" height="1.25rem" fill="currentColor" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="6" y1="12" x2="18" y2="12" />
  <line x1="12" y1="18" x2="12" y2="6" />
</svg>

    <p dir="auto">When to use it?</p>
  </summary>
  <div class="content">
    
          <ul dir="auto">
              <li><p dir="auto">You <strong>don’t need to control exact start/end line numbers</strong>.</p></li>
  <li><p dir="auto">You want the browser to determine the position automatically.</p></li>
  <li><p dir="auto">You’re working with <strong>auto-placed items</strong> in a dynamic or responsive layout.</p></li>

          </ul>
        
  </div>
</details>

<h2  id="grid-types" dir="auto">Grid Types</h2>
<p  dir="auto">In CSS Grid, it’s important to understand the two types of grids: <strong>explicit</strong> and <strong>implicit</strong>. These define how grid tracks (rows and columns)
are created—either by the developer or automatically by the browser.</p>
<h3  id="explicit-grids" dir="auto">Explicit Grids</h3>
<p  dir="auto">An <strong>explicit</strong> grid is one that you define yourself using properties like <code  class="highlighter-rouge notranslate">grid-template-columns</code> and <code  class="highlighter-rouge notranslate">grid-template-rows</code>.</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">1fr</span> <span class="m">1fr</span><span class="p">;</span>   <span class="c">/* Two equal-width columns */</span>
  <span class="nl">grid-template-rows</span><span class="p">:</span> <span class="m">100px</span> <span class="m">100px</span><span class="p">;</span>  <span class="c">/* Two fixed-height rows */</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      HTML
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-html" data-lang="html"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"grid"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 1<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 2<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 3<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 4<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">In this case, you’ve explicitly created a <strong>2×2 grid</strong>, which gives you <strong>4 cells</strong>. Each of the 4 items is placed within this defined layout.</p>
<p  dir="auto"><strong>Visual Illustration</strong></p>
<p  dir="auto">This shows how the explicit grid looks like:</p>
<pre><code>+---------+--------+    
| Item 1  | Item 2 |    
+---------+--------+    
| Item 3  | Item 4 |    
+---------+--------+   
</code></pre>

<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/jEPjpzL" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/jEPjpzL" class="external-link">Try this on CodePen</a></p>
<p  dir="auto">If you place more items than your explicit tracks can hold, the grid will automatically generate new rows or columns to accommodate them — these are known as <em>implicit tracks</em>, which we’ll explore next.</p>
<h3  id="implicit-grids" dir="auto">Implicit Grids</h3>
<p  dir="auto">In CSS Grid, if the number of items exceeds the explicitly defined rows or columns, the browser <strong>automatically creates additional tracks</strong> — these
form what’s known as the <strong>implicit grid</strong>.</p>
<p  dir="auto">You can control the size of these extra rows and columns using:</p>

          <ul  dir="auto">
              <li><p  dir="auto"><strong>grid-auto-rows</strong> – defines height of implicit rows.</p></li>
  <li><p  dir="auto"><strong>grid-auto-columns</strong> – defines width of implicit columns.</p></li>

          </ul>
        
<h4  id="example-implicit-rows" dir="auto">Example: Implicit Rows</h4>
<p  dir="auto">Let’s say you define only 2 rows, but add 5 items:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">1fr</span> <span class="m">1fr</span><span class="p">;</span>
  <span class="nl">grid-template-rows</span><span class="p">:</span> <span class="m">100px</span> <span class="m">100px</span><span class="p">;</span> <span class="c">/* Explicit: only 2 rows defined */</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      HTML
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-html" data-lang="html"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"grid"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 1<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 2<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 3<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 4<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 5<span class="nt">&lt;/div&gt;</span> <span class="c">&lt;!-- This item doesn't fit in the defined grid --&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong>What happens?</strong></p>

          <ul  dir="auto">
              <li><p  dir="auto">The first 4 items fill the 2×2 grid.</p></li>
  <li><p  dir="auto">The 5th item <strong>overflows</strong> the defined rows.</p></li>
  <li><p  dir="auto">So, the browser <strong>creates a 3rd row automatically</strong> — this is the <strong>implicit grid</strong>.</p></li>

          </ul>
        
<p  dir="auto"><strong>Visual Illustration</strong></p>
<p  dir="auto">This shows what happens when items overflow the defined rows (and new <strong>implicit rows</strong> are added):</p>
<pre><code>Explicit Grid:          Implicit Grid:

+---------+--------+    +---------+--------+
| Item 1  | Item 2 |    | Item 1  | Item 2 |
+---------+--------+    +---------+--------+
| Item 3  | Item 4 |    | Item 3  | Item 4 |
+---------+--------+    +---------+--------+
                        | Item 5  |   —    | ← auto-created implicit row
                        +---------+--------+
</code></pre>

<p  dir="auto">By default, the height of implicit rows is <code  class="highlighter-rouge notranslate">auto</code>. You can control their size using <code  class="highlighter-rouge notranslate">grid-auto-rows</code>:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">grid-auto-rows</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span> <span class="c">/* Applies height to all implicit rows */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/bNdPjMq" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/bNdPjMq" class="external-link">Try this on CodePen</a></p>
<h4  id="example-implicit-columns" dir="auto">Example: Implicit Columns</h4>
<p  dir="auto">Now let’s say you only define rows, and use <strong>manual placement</strong> or <strong>grid-auto-flow: column</strong> to push items into new columns:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-rows</span><span class="p">:</span> <span class="m">100px</span> <span class="m">100px</span><span class="p">;</span>
  <span class="nl">grid-auto-flow</span><span class="p">:</span> <span class="nb">column</span><span class="p">;</span> <span class="c">/* Place items column-wise */</span>
  <span class="nl">grid-auto-columns</span><span class="p">:</span> <span class="m">150px</span><span class="p">;</span> <span class="c">/* Width for any implicitly created columns */</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      HTML
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-html" data-lang="html"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"grid"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 1<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 2<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 3<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 4<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div&gt;</span>Item 5<span class="nt">&lt;/div&gt;</span> <span class="c">&lt;!-- This item doesn't fit in the defined grid --&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong>What happens?</strong></p>

          <ul  dir="auto">
              <li><p  dir="auto">Items will flow <strong>across columns</strong>, not rows.</p></li>
  <li><p  dir="auto">Since no <code  class="highlighter-rouge notranslate">grid-template-columns</code> is defined, the browser will <strong>generate columns implicitly</strong>.</p></li>
  <li><p  dir="auto">Each column will now be <strong>150px wide</strong> (because of <code  class="highlighter-rouge notranslate">grid-auto-columns</code>).</p></li>

          </ul>
        
<p  dir="auto"><strong>Visual Illustration</strong></p>
<p  dir="auto">This shows what happens when items overflow the defined columns (or <code  class="highlighter-rouge notranslate">grid-auto-flow: column</code> creates new <strong>implicit columns</strong>):</p>
<pre><code>Explicit Grid:          Implicit Grid:

+---------+--------+    +---------+--------+--------+
| Item 1  | Item 2 |    | Item 1  | Item 2 | Item 5 |
+---------+--------+    +---------+--------+--------+
| Item 3  | Item 4 |    | Item 3  | Item 4 |        |
+---------+--------+    +---------+--------+--------+
                                                ↑ implicit columns created dynamically
</code></pre>

<p  dir="auto">Use <code  class="highlighter-rouge notranslate">grid-auto-columns</code> to control the width of these new columns.</p>
<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/JodgZqM" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/JodgZqM" class="external-link">Try this on CodePen</a></p>
<div class="alert alert-accent alert-outlined" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg version="1.0" role="img" class="icon icon-info-circle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path d="M9.5 11a1 1 0 0 1 1-1H12a1 1 0 0 1 1 1v4h1a1 1 0 1 1 0 2h-4a1 1 0 1 1 0-2h1v-3h-.5a1 1 0 0 1-1-1ZM12 9a1.25 1.25 0 1 0 0-2.5A1.25 1.25 0 0 0 12 9Z" />
  <path fill-rule="evenodd" d="M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12Zm10-8a8 8 0 1 0 0 16 8 8 0 0 0 0-16Z" clip-rule="evenodd" />
</svg>


  </div>
  <div class="alert-content">
    <p>Tip: You rarely need to use <code>grid-auto-columns</code> unless:</p>

<ul>
  <li>You’re manually placing items across columns (e.g. <code>grid-column: 4</code>)</li>
  <li>You use <code>grid-auto-flow: column</code> and want to control generated column width</li>
</ul>

  </div>
  
</div>

<h2  id="conclusion" dir="auto">Conclusion</h2>
<p  dir="auto">You’ve now mastered the core tools that bring <strong>power, readability, and precision</strong> to CSS Grid layouts:</p>

          <ul  dir="auto">
              <li><p  dir="auto">Named areas help you design layouts visually and semantically.</p></li>
  <li><p  dir="auto">Item alignment ensures pixel-perfect placement in every cell.</p></li>
  <li><p  dir="auto">Spanning techniques let you control flow and sizing beyond automatic placement.</p></li>
  <li><p  dir="auto">Explicit vs. implicit grids give you confidence when your layout grows unexpectedly.</p></li>

          </ul>
        
<p  dir="auto">Up next in <a  href="/post/responsive-css-grid-layouts">Part 3 → Responsive CSS Grid Layouts: fr Units, minmax(), auto-fill, and auto-fit Explained</a>, we’ll unlock how to:</p>

          <ul  dir="auto">
              <li><p  dir="auto">Use <code  class="highlighter-rouge notranslate">fr</code>, <code  class="highlighter-rouge notranslate">minmax()</code>, <code  class="highlighter-rouge notranslate">auto-fit</code>, and <code  class="highlighter-rouge notranslate">auto-fill</code> for fluid responsive tracks</p></li>
  <li><p  dir="auto">Pair grid with <strong>media</strong> and <strong>container</strong> queries</p></li>
  <li><p  dir="auto">Build <strong>robust, flexible layouts</strong> that adapt to any screen — no media query soup needed!</p></li>

          </ul>
        ]]></content>

    
      <category term="css" scheme="urn:taxonomy:tag" />
    
      <category term="css-grid" scheme="urn:taxonomy:tag" />
    
      <category term="grid" scheme="urn:taxonomy:tag" />
    
      <category term="beginner" scheme="urn:taxonomy:tag" />
    
      <category term="layout" scheme="urn:taxonomy:tag" />
    
      <category term="grid-template-areas" scheme="urn:taxonomy:tag" />
    
      <category term="grid-alignment" scheme="urn:taxonomy:tag" />
    
      <category term="frontend" scheme="urn:taxonomy:tag" />
    

    
      <category term="CSS" scheme="urn:taxonomy:category" />
    
  </entry>
  
  <entry xml:lang="en">
    <title>Getting Started with CSS Grid: A Beginner&apos;s Guide to 2D Layouts</title>
    <link rel="alternate" type="text/html" href="https://shivam091.github.io/post/getting-started-with-css-grid" />
    <id>https://shivam091.github.io/post/getting-started-with-css-grid</id>

    <published>2025-07-09T15:21:11+05:30</published>
    <updated>2025-08-14T08:42:44+05:30</updated>

    
    <media:thumbnail
      url="https://shivam091.github.io/assets/img/posts/css/getting-started-with-css-grid/cover.png"
      width="1200"
      height="630" />
    

    <summary type="html">
      A beginner-friendly introduction to CSS Grid that covers core concepts and guides you through building your first 2D layouts with real-world examples.
    </summary>
    <content type="html"><![CDATA[<h2  id="the-power-of-css-grid-for-layouts" dir="auto">The Power of CSS Grid for Layouts</h2>
<p  dir="auto">Modern web layouts are more dynamic and complex than ever. Whether it’s a blog, dashboard, or product grid, developers need layout systems that are both powerful and easy to use.</p>
<p  dir="auto">That’s where <strong>CSS Grid</strong> shines. Unlike Flexbox, which works in only one direction at a time, CSS Grid enables true two-dimensional layouts — rows and columns — without extra hacks or hassles.</p>
<p  dir="auto">This is the first post in a three-part series where we’ll break down CSS Grid from the ground up. You’ll learn the core concepts, understand key terminology, and build your first layout from scratch.</p>
<p  dir="auto">By the end of this post, you’ll be able to:</p>

          <ul  dir="auto">
              <li><p  dir="auto">Define a grid container and grid items</p></li>
  <li><p  dir="auto">Set up column and row templates</p></li>
  <li><p  dir="auto">Use fractional units and spacing with <code  class="highlighter-rouge notranslate">gap</code></p></li>
  <li><p  dir="auto">Build simple, scalable 2D layouts</p></li>

          </ul>
        
<p  dir="auto">Let’s dive in.</p>
<h2  id="why-css-grid" dir="auto">Why CSS Grid?</h2>
<p  dir="auto">Modern websites demand layout techniques that are <strong>flexible</strong>, <strong>responsive</strong>, and <strong>easy to maintain</strong>. Before Grid, developers relied on:</p>

          <ul  dir="auto">
              <li><p  dir="auto"><code  class="highlighter-rouge notranslate">float</code>, <code  class="highlighter-rouge notranslate">inline-block</code>, or table-based layouts,</p></li>
  <li><p  dir="auto">JavaScript (or jQuery) to measure and equalize heights,</p></li>
  <li><p  dir="auto">Flexbox for 1D layouts, which wasn’t always ideal for grid-like structures.</p></li>

          </ul>
        
<p  dir="auto">But none of these offered full control over <strong>2D layouts</strong>.</p>
<p  dir="auto">That’s where <strong>CSS Grid</strong> shines. Here’s why it’s a game changer:</p>
<h3  id="two-dimensional-power" dir="auto">Two-Dimensional Power</h3>
<p  dir="auto"><strong>Flexbox</strong> handles layout in <strong>one direction</strong> at a time — rows or columns. But <strong>CSS Grid</strong> enables layouts in <strong>both axes simultaneously</strong>.</p>
<p  dir="auto"><strong>Use case examples:</strong></p>

          <ul  dir="auto">
              <li><p  dir="auto">Product galleries</p></li>
  <li><p  dir="auto">Dashboards</p></li>
  <li><p  dir="auto">Magazine-style articles</p></li>
  <li><p  dir="auto">Calendars</p></li>
  <li><p  dir="auto">Full-page app layouts</p></li>

          </ul>
        
<h3  id="declarative-clean-predictable" dir="auto">Declarative, Clean, Predictable</h3>
<p  dir="auto">You define what the layout <strong>should look like</strong>, not how elements get there.</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">1fr</span> <span class="m">2fr</span> <span class="m">1fr</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">The code is <strong>descriptive</strong>, like a wireframe.</p>
<h3  id="layout-without-extra-markup" dir="auto">Layout Without Extra Markup</h3>
<p  dir="auto">With floats or Flexbox, you often need wrapper <code  class="highlighter-rouge notranslate">div</code>s, utility classes, or nesting. Grid reduces that. Your HTML becomes <strong>cleaner</strong>, while CSS handles layout logic in one place.</p>
<h3  id="built-in-layout-superpowers" dir="auto">Built-In Layout Superpowers</h3>
<p  dir="auto">CSS Grid brings native support for layout patterns that once required complex CSS tricks—or even JavaScript—to implement.</p>

          <ul  dir="auto">
              <li><p  dir="auto">Gaps (<code  class="highlighter-rouge notranslate">gap</code>, <code  class="highlighter-rouge notranslate">row-gap</code>, <code  class="highlighter-rouge notranslate">column-gap</code>)</p></li>
  <li><p  dir="auto">Auto item placement</p></li>
  <li><p  dir="auto">Item spanning (<code  class="highlighter-rouge notranslate">grid-column</code>, <code  class="highlighter-rouge notranslate">grid-row</code>)</p></li>
  <li><p  dir="auto">Template areas with <strong>named regions</strong></p></li>
  <li><p  dir="auto">Layered grid items</p></li>

          </ul>
        
<h3  id="naturally-responsive" dir="auto">Naturally Responsive</h3>
<p  dir="auto">CSS Grid thrives in responsive design. With units like:</p>

          <ul  dir="auto">
              <li><p  dir="auto"><code  class="highlighter-rouge notranslate">fr</code> (fraction of available space)</p></li>
  <li><p  dir="auto"><code  class="highlighter-rouge notranslate">minmax()</code></p></li>
  <li><p  dir="auto"><code  class="highlighter-rouge notranslate">auto-fit</code>, <code  class="highlighter-rouge notranslate">auto-fill</code></p></li>

          </ul>
        
<p  dir="auto">…you can build layouts that <strong>adapt seamlessly</strong>, without needing extra breakpoints.</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
</pre></td><td class="code"><pre><span class="nt">grid-template-columns</span><span class="o">:</span> <span class="nt">repeat</span><span class="o">(</span><span class="nt">auto-fit</span><span class="o">,</span> <span class="nt">minmax</span><span class="o">(</span><span class="err">200</span><span class="nt">px</span><span class="o">,</span> <span class="err">1</span><span class="nt">fr</span><span class="o">));</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">Try doing that with Flexbox alone 😅</p>

          <blockquote  dir="auto">
            <p  dir="auto">Not sure what does <code  class="highlighter-rouge notranslate">fr</code>, <code  class="highlighter-rouge notranslate">auto-fit</code>, <code  class="highlighter-rouge notranslate">minmax()</code>, or <code  class="highlighter-rouge notranslate">auto-fill</code> mean?<br />
Don’t worry — we’ll cover all of these in depth in <strong><a  href="/post/responsive-css-grid-layouts">Part 3 → Responsive CSS Grid Layouts: fr Units, minmax(), auto-fill, and auto-fit Explained</a></strong>.</p>
          </blockquote>
        
<h3  id="component-friendly" dir="auto">Component-Friendly</h3>
<p  dir="auto">In frameworks like React or Vue, <strong>Grid makes layout self-contained</strong> — no dependency on external wrappers or parents. It’s great for reusable components like:</p>

          <ul  dir="auto">
              <li><p  dir="auto">Cards</p></li>
  <li><p  dir="auto">Sidebars</p></li>
  <li><p  dir="auto">Media objects</p></li>
  <li><p  dir="auto">Complex page sections</p></li>

          </ul>
        
<h2  id="grid-vs-flexbox-when-to-use-what" dir="auto">Grid vs. Flexbox: When to Use What?</h2>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th>Scenario</th>
      <th style="text-align: center">Use Grid</th>
      <th style="text-align: center">Use Flexbox</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Page layout (header, sidebar, content)</td>
      <td style="text-align: center">✓</td>
      <td style="text-align: center">✗</td>
    </tr>
    <tr>
      <td>Navbar with links</td>
      <td style="text-align: center">✗</td>
      <td style="text-align: center">✓</td>
    </tr>
    <tr>
      <td>Gallery or card grid</td>
      <td style="text-align: center">✓</td>
      <td style="text-align: center">✗</td>
    </tr>
    <tr>
      <td>Single row of buttons</td>
      <td style="text-align: center">✗</td>
      <td style="text-align: center">✓</td>
    </tr>
    <tr>
      <td>Calendar or table layout</td>
      <td style="text-align: center">✓</td>
      <td style="text-align: center">✗</td>
    </tr>
  </tbody>

          </table>
        

          <blockquote  dir="auto">
            <p  dir="auto"><strong>Summary</strong>: Use <strong>flexbox</strong> for 1D layout (e.g., navbars, button groups) and use <strong>grid</strong> for 2D layout (e.g., pages, cards, dashboard panels)
and you can always combine them!</p>
          </blockquote>
        
<details>
  <summary>
    <svg version="1.0" role="img" class="icon icon-plus" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1.25rem" height="1.25rem" fill="currentColor" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="6" y1="12" x2="18" y2="12" />
  <line x1="12" y1="18" x2="12" y2="6" />
</svg>

    <p dir="auto">When <em>not</em> to use CSS Grid?</p>
  </summary>
  <div class="content">
    
          <ul dir="auto">
              <li><p dir="auto">If you just need a horizontal or vertical alignment — use Flexbox.</p></li>
  <li><p dir="auto">If the layout is linear and small-scale (e.g. tag chips, breadcrumbs), Grid might be overkill.</p></li>
  <li><p dir="auto">Old browser support? Flexbox may be safer. (Grid has great support though!)</p></li>

          </ul>
        
  </div>
</details>

<h2  id="basic-terminology" dir="auto">Basic Terminology</h2>

          <ul  dir="auto">
              <li><p  dir="auto"><strong>Grid Container:</strong> The parent element on which <code  class="highlighter-rouge notranslate">display: grid</code> or <code  class="highlighter-rouge notranslate">display: inline-grid</code> is applied. It defines the grid context for its children.</p></li>
  <li><p  dir="auto"><strong>Grid Item:</strong> The direct child elements of the grid container. These are placed and aligned within the grid layout.</p></li>
  <li><p  dir="auto"><strong>Grid Line:</strong> The horizontal or vertical dividing lines that separate grid tracks. They’re used for placing grid items.</p></li>
  <li><p  dir="auto"><strong>Grid Track:</strong> A row or column in the grid. It’s the space between two adjacent grid lines.</p></li>
  <li><p  dir="auto"><strong>Grid Cell:</strong> The smallest unit of a grid layout — the space at the intersection of a single row and column.</p></li>

          </ul>
        
<h2  id="building-layouts-with-css-grid" dir="auto">Building Layouts with CSS Grid</h2>
<h3  id="fundamental-properties" dir="auto">Fundamental Properties</h3>

          <ul  dir="auto">
              <li><p  dir="auto"><strong>display: grid;</strong> — Converts an element into a grid container, enabling grid-based layout for its direct children.</p></li>
  <li><p  dir="auto"><strong>grid-template-columns</strong> — Defines the number and width of columns in the grid. You can specify fixed sizes, percentages, or use flexible units
like fr (fraction of available space).</p></li>
  <li><p  dir="auto"><strong>grid-template-rows</strong> — Defines the number and height of rows in the grid, using the same unit options as columns.</p></li>
  <li><p  dir="auto"><strong>gap (or row-gap and column-gap)</strong> — Sets the spacing between rows and columns of grid items. A shorthand that simplifies layout spacing.</p></li>
  <li><p  dir="auto"><strong>grid-column / grid-row</strong> — Specifies how many columns or rows an item should span, or where it should start and end within the grid.</p></li>

          </ul>
        
<h3  id="column-and-row-templates" dir="auto">Column and Row Templates</h3>
<p  dir="auto">CSS Grid gives you precise control over your layout’s structure using the <code  class="highlighter-rouge notranslate">grid-template-columns</code> and <code  class="highlighter-rouge notranslate">grid-template-rows</code> properties.</p>

          <ul  dir="auto">
              <li><p  dir="auto"><strong>grid-template-columns</strong> — Defines the number and width of columns in the grid.</p></li>
  <li><p  dir="auto"><strong>grid-template-rows</strong> — Defines the number and height of rows.</p></li>

          </ul>
        
<p  dir="auto">Each value you specify represents the size of a single column or row, ordered left-to-right (for columns) or top-to-bottom (for rows). You can use:</p>

          <ul  dir="auto">
              <li><p  dir="auto">Flexible units like <code  class="highlighter-rouge notranslate">fr</code> (fraction of available space),</p></li>
  <li><p  dir="auto">Fixed units like <code  class="highlighter-rouge notranslate">px</code> or <code  class="highlighter-rouge notranslate">em</code>,</p></li>
  <li><p  dir="auto">keywords like <code  class="highlighter-rouge notranslate">auto</code>, which sizes based on content.</p></li>

          </ul>
        

          <blockquote  dir="auto">
            <p  dir="auto">💡 <strong>Tip:</strong> You can use <code  class="highlighter-rouge notranslate">repeat()</code> in <code  class="highlighter-rouge notranslate">grid-template-columns</code> to reduce repetition: <code  class="highlighter-rouge notranslate">repeat(3, 1fr)</code></p>
          </blockquote>
        
<p  dir="auto">Here’s an example:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      CSS
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-css" data-lang="css"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="nc">.grid</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">grid</span><span class="p">;</span>
  <span class="nl">grid-template-columns</span><span class="p">:</span> <span class="m">1fr</span> <span class="m">2fr</span> <span class="m">1fr</span><span class="p">;</span> <span class="c">/* Three columns: middle column is twice as wide */</span>
  <span class="nl">grid-template-rows</span><span class="p">:</span> <span class="m">150px</span> <span class="nb">auto</span> <span class="m">75px</span><span class="p">;</span> <span class="c">/* Three rows: fixed top &amp; bottom, flexible middle */</span>
  <span class="nl">gap</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.item</span> <span class="p">{</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1rem</span><span class="p">;</span>
  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="nx">#000</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto">Here’s the HTML structure:</p>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      HTML
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-html" data-lang="html"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"grid"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"item"</span><span class="nt">&gt;</span>Item 1<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"item"</span><span class="nt">&gt;</span>Item 2<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"item"</span><span class="nt">&gt;</span>Item 3<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"item"</span><span class="nt">&gt;</span>Item 4<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"item"</span><span class="nt">&gt;</span>Item 5<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"item"</span><span class="nt">&gt;</span>Item 6<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"item"</span><span class="nt">&gt;</span>Item 7<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"item"</span><span class="nt">&gt;</span>Item 8<span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"item"</span><span class="nt">&gt;</span>Item 9<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<p  dir="auto"><strong>Explanation:</strong></p>

          <ul  dir="auto">
              <li>
<p  dir="auto">The grid has three columns: the first and third are equal in width, while the middle column is twice as wide.</p>  </li>
  <li>
<p  dir="auto">The rows are defined as:</p>
          <ul  dir="auto">
                  <li><p  dir="auto"><code  class="highlighter-rouge notranslate">150px</code> → a fixed-height top row</p></li>
      <li><p  dir="auto"><code  class="highlighter-rouge notranslate">auto</code> → a middle row that adjusts to content</p></li>
      <li><p  dir="auto"><code  class="highlighter-rouge notranslate">75px</code> → a fixed-height footer row</p></li>

          </ul>
          </li>

          </ul>
        
<p  dir="auto">This layout gives you both <strong>predictability</strong> and <strong>flexibility</strong>, especially when paired with responsive design techniques.</p>
<p  dir="auto">👉 <a  href="https://codepen.io/shivam091/pen/raVEvMb" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://codepen.io/shivam091/pen/raVEvMb" class="external-link">Try this on CodePen</a></p>
<h2  id="frequently-asked-questions-faq" dir="auto">Frequently Asked Questions (FAQ)</h2>
<h3  id="when-should-i-use-grid-over-flexbox" dir="auto">When should I use Grid over Flexbox?</h3>
<p  dir="auto">Use <strong>CSS Grid</strong> when:</p>
          <ul  dir="auto">
              <li><p  dir="auto">You need both rows and columns (2D layout).</p></li>
  <li><p  dir="auto">You want consistent alignment across an entire section or page.</p></li>
  <li><p  dir="auto">You’re building full-page layouts, dashboards, or card grids.</p></li>

          </ul>
        
<p  dir="auto">Use <strong>Flexbox</strong> when:</p>
          <ul  dir="auto">
              <li><p  dir="auto">You’re arranging items in a single row or column.</p></li>
  <li><p  dir="auto">You need precise content alignment or small-scale layout logic.</p></li>

          </ul>
        
<hr />

<h3  id="is-css-grid-responsive" dir="auto">Is CSS Grid responsive?</h3>
<p  dir="auto">Absolutely! Grid works beautifully with:</p>
          <ul  dir="auto">
              <li><p  dir="auto">Units like <code  class="highlighter-rouge notranslate">fr</code>, <code  class="highlighter-rouge notranslate">auto</code>, and <code  class="highlighter-rouge notranslate">minmax()</code></p></li>
  <li><p  dir="auto">Functions like <code  class="highlighter-rouge notranslate">auto-fit</code> and <code  class="highlighter-rouge notranslate">auto-fill</code></p></li>
  <li><p  dir="auto">Media queries and even container queries</p></li>

          </ul>
        

          <blockquote  dir="auto">
            <p  dir="auto">📌 <strong>Tip:</strong> We’ll explore responsive Grid techniques in depth in <a  href="/post/responsive-css-grid-layouts">Part 3 → Responsive CSS Grid Layouts: fr Units, minmax(), auto-fill, and auto-fit Explained</a>.</p>
          </blockquote>
        
<hr />

<h3  id="does-css-grid-work-in-all-browsers" dir="auto">Does CSS Grid work in all browsers?</h3>
<p  dir="auto">✅ <strong>Yes</strong>, all modern browsers fully support CSS Grid.<br />
⚠️ <strong>IE11</strong> supports an older version, but it’s largely deprecated and not recommended for new projects.</p>
<h2  id="conclusion" dir="auto">Conclusion</h2>
<p  dir="auto">🎉 Congratulations — you’ve just taken your first steps into the world of CSS Grid!</p>
<p  dir="auto">Here’s a quick recap of what you’ve learned in this post:</p>
          <ul  dir="auto">
              <li><p  dir="auto">Why CSS Grid is a game changer for modern layouts</p></li>
  <li><p  dir="auto">The key differences between Grid and Flexbox</p></li>
  <li><p  dir="auto">Core terminology: containers, items, tracks, and lines</p></li>
  <li><p  dir="auto">How to define columns and rows using units like <code  class="highlighter-rouge notranslate">fr</code>, <code  class="highlighter-rouge notranslate">px</code>, and <code  class="highlighter-rouge notranslate">auto</code></p></li>
  <li><p  dir="auto">How to build a clean, semantic, and scalable 2D layout from scratch</p></li>

          </ul>
        
<p  dir="auto">You now have a solid foundation to build upon — and this is just the beginning.</p>
<p  dir="auto">🔗 <strong>Up Next (Part 2):</strong> <a  href="/post/mastering-css-grid">Mastering CSS Grid: Grid Areas, Item Alignment, and Spanning</a> — we’ll dive deeper into advanced techniques like:</p>

          <ul  dir="auto">
              <li><p  dir="auto">Naming and using grid areas</p></li>
  <li><p  dir="auto">Aligning and justifying items</p></li>
  <li><p  dir="auto">Spanning items across rows and columns</p></li>
  <li><p  dir="auto">Understanding explicit vs. implicit grids</p></li>

          </ul>
        
<p  dir="auto">Stay tuned — you’re just one step away from turning your layout skills from good to great 💪</p>]]></content>

    
      <category term="css" scheme="urn:taxonomy:tag" />
    
      <category term="grid" scheme="urn:taxonomy:tag" />
    
      <category term="css-grid" scheme="urn:taxonomy:tag" />
    
      <category term="beginner" scheme="urn:taxonomy:tag" />
    
      <category term="layout" scheme="urn:taxonomy:tag" />
    
      <category term="web design" scheme="urn:taxonomy:tag" />
    
      <category term="frontend" scheme="urn:taxonomy:tag" />
    
      <category term="2d-layouts" scheme="urn:taxonomy:tag" />
    

    
      <category term="CSS" scheme="urn:taxonomy:category" />
    
  </entry>
  
  <entry xml:lang="en">
    <title>Components</title>
    <link rel="alternate" type="text/html" href="https://shivam091.github.io/post/components" />
    <id>https://shivam091.github.io/post/components</id>

    <published>2025-06-16T19:10:40+05:30</published>
    <updated>2025-08-26T10:32:05+05:30</updated>

    
    <media:thumbnail
      url="https://shivam091.github.io/assets/img/posts/components/cover.png"
      width="1200"
      height="630" />
    

    <summary type="html">
      This post is a comprehensive test of various components. It includes alerts, code blocks, buttons, and more.
    </summary>
    <content type="html"><![CDATA[<div class="playground">
  <!-- Toolbar -->
  <div class="toolbar">
    <div class="brand">
      <span class="dot close"><svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>
</span>
      <span class="dot minimize"><svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>
</span>
      <span class="dot maximize"><svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>
</span>
      <span class="title">Code Playground</span>
    </div>
    <div class="actions">
      <button class="cp-btn" data-cp-reset=""><svg version="1.0" role="img" class="icon icon-skip-back" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="5" y1="19" x2="5" y2="5" />
  <polygon points="19 20 9 12 19 4 19 20" />
</svg>
</button>
      <button class="cp-btn" data-cp-reset=""><svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>
</button>
      <button class="cp-btn" data-cp-export=""><svg version="1.0" role="img" class="icon icon-download" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <path d="M21 15v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4" />
  <polyline points="7 10 12 15 17 10" />
  <line x1="12" y1="15" x2="12" y2="3" />
</svg>
</button>
      
      <a href="https://codepen.io/shivam091/pen/NPGavRO" class="cp-btn" target="_blank" title="Open in CodePen"><svg version="1.0" role="img" class="icon icon-external-link" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <mask id="external-icon-mask">
    <rect x="0" y="0" width="24" height="24" fill="white" />
    <rect x="10" y="0" width="16" height="14" fill="black" />
  </mask>
  <rect x="3" y="6" width="15" height="15" rx="2" mask="url(#external-icon-mask)" />
  <path d="M 10 14 L 20 4 h -6 h 6 v 6" stroke="currentColor" style="transition: stroke .25s;" />
</svg>
</a>
      
    </div>
  </div>

  <!-- Main -->
  <div class="pen" data-code-playground="" data-autorun="true">
    <div class="editors-col">
      <!-- Editor Tabs -->
      <div class="tabs" role="tablist" aria-label="Editor Tabs">
        
        <button class="tab" role="tab" aria-selected="true" data-tab="html" id="tab-html">HTML</button>
        
        
        <button class="tab" role="tab" aria-selected="false" data-tab="css" id="tab-css">CSS</button>
        
        
        <button class="tab" role="tab" aria-selected="false" data-tab="js" id="tab-js">JS</button>
        
        <div class="spacer"></div>
      </div>

      <!-- Editors -->
      <div class="editors">
        
        <div class="editor" role="tabpanel" aria-hidden="false" aria-labelledby="tab-html" data-editor="html">
          <div class="editor-actions">
            <button class="cp-btn" data-copy-target="#code-html" title="Copy code"><svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>
</button>
            <button class="cp-btn" data-beautify="html" title="Beautify code"><svg version="1.0" role="img" class="icon icon-magic-wand" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
  <defs>
    <!-- Sparkle symbol -->
    <symbol id="sparkle" viewBox="0 0 10 10">
      <polygon points="4.6,5.4 6.6,6.0 7.2,8.0 8.0,6.0 10.0,5.4 8.0,4.8 7.2,2.8 6.6,4.8" stroke-width="1" />
    </symbol>
  </defs>

  <!-- Wand (handle + head grouped together) -->
  <g transform="rotate(-45 10 15)" stroke-width="2">
    <!-- Full wand body -->
    <rect x="0" y="12" width="24" height="5" rx="2" />

    <!-- Divider between handle and head -->
    <line x1="18" y1="12" x2="18" y2="16" />
  </g>

  <!-- Sparkles using <use> -->
  <use href="#sparkle" x="-9" y="-9" width="18" height="18" />
  <use href="#sparkle" x="9" y="14" width="16" height="16" />
  <use href="#sparkle" x="15" y="-10" width="17" height="17" />
</svg>
</button>
          </div>
          <textarea spellcheck="false" id="code-html">&lt;div class=&quot;card&quot;&gt;
  &lt;h1&gt;Hello, I&#39;m Harshal LADHE 👋&lt;/h1&gt;
  &lt;p&gt;
    Edit HTML, CSS, and JS, then hit
    &lt;strong&gt;Run&lt;/strong&gt;
    or enable
    &lt;em&gt;Auto‑run&lt;/em&gt;.
  &lt;/p&gt;
  &lt;button id=&quot;btn&quot;&gt;Click me&lt;/button&gt;
&lt;/div&gt;
</textarea>
        </div>
        
        
        <div class="editor" role="tabpanel" aria-hidden="true" aria-labelledby="tab-css" data-editor="css">
          <div class="editor-actions">
            <button class="cp-btn" data-copy-target="#code-css" title="Copy code"><svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>
</button>
            <button class="cp-btn" data-beautify="css" title="Beautify code"><svg version="1.0" role="img" class="icon icon-magic-wand" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
  <defs>
    <!-- Sparkle symbol -->
    <symbol id="sparkle" viewBox="0 0 10 10">
      <polygon points="4.6,5.4 6.6,6.0 7.2,8.0 8.0,6.0 10.0,5.4 8.0,4.8 7.2,2.8 6.6,4.8" stroke-width="1" />
    </symbol>
  </defs>

  <!-- Wand (handle + head grouped together) -->
  <g transform="rotate(-45 10 15)" stroke-width="2">
    <!-- Full wand body -->
    <rect x="0" y="12" width="24" height="5" rx="2" />

    <!-- Divider between handle and head -->
    <line x1="18" y1="12" x2="18" y2="16" />
  </g>

  <!-- Sparkles using <use> -->
  <use href="#sparkle" x="-9" y="-9" width="18" height="18" />
  <use href="#sparkle" x="9" y="14" width="16" height="16" />
  <use href="#sparkle" x="15" y="-10" width="17" height="17" />
</svg>
</button>
          </div>
          <textarea spellcheck="false" id="code-css">:root {
  --brand: #0ebeff;
  --ink: #111827;
}
body {
  font-family: system-ui, sans-serif;
  margin: 0;
}
.card {
  width: min(680px, 90%);
  margin: 2rem auto;
  padding: 1.25rem 1.5rem;
  border-radius: 14px;
  background: #ffffff;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}
h1 {
  margin: 0 0 0.5rem;
  font-size: clamp(1.5rem, 1rem + 2vw, 2rem);
  color: #0f172a;
}
p {
  color: #334155;
}
#btn {
  background: var(--brand);
  color: white;
  border: 0;
  padding: 0.6rem 0.9rem;
  border-radius: 999px;
  font-weight: 700;
  cursor: pointer;
}
#btn:hover {
  filter: brightness(0.95);
}
</textarea>
        </div>
        
        
        <div class="editor" role="tabpanel" aria-hidden="true" aria-labelledby="tab-js" data-editor="js">
          <div class="editor-actions">
            <button class="cp-btn" data-copy-target="#code-js" title="Copy code"><svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>
</button>
            <button class="cp-btn" data-beautify="js" title="Beautify code"><svg version="1.0" role="img" class="icon icon-magic-wand" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
  <defs>
    <!-- Sparkle symbol -->
    <symbol id="sparkle" viewBox="0 0 10 10">
      <polygon points="4.6,5.4 6.6,6.0 7.2,8.0 8.0,6.0 10.0,5.4 8.0,4.8 7.2,2.8 6.6,4.8" stroke-width="1" />
    </symbol>
  </defs>

  <!-- Wand (handle + head grouped together) -->
  <g transform="rotate(-45 10 15)" stroke-width="2">
    <!-- Full wand body -->
    <rect x="0" y="12" width="24" height="5" rx="2" />

    <!-- Divider between handle and head -->
    <line x1="18" y1="12" x2="18" y2="16" />
  </g>

  <!-- Sparkles using <use> -->
  <use href="#sparkle" x="-9" y="-9" width="18" height="18" />
  <use href="#sparkle" x="9" y="14" width="16" height="16" />
  <use href="#sparkle" x="15" y="-10" width="17" height="17" />
</svg>
</button>
          </div>
          <textarea spellcheck="false" id="code-js">document.getElementById(&#39;btn&#39;).addEventListener(&#39;click&#39;, () =&gt; {
  console.info(&quot;Boop! CodePen‑style playground ✅&quot;)
});
</textarea>
        </div>
        
      </div>
    </div>

    <!-- Preview -->
    <div class="preview-col">
      <div class="preview">
        <div class="preview-tabs" role="tablist">
          <button class="tab" role="tab" aria-selected="true" data-preview="result">Result</button>
          <button class="tab" role="tab" aria-selected="false" data-preview="console">Console</button>
          <div class="spacer"></div>
          <label class="check">
            <input type="checkbox" data-cp-autorun="" checked="" /> Auto-run
          </label>
        </div>
        <div class="preview-panels">
          <div class="preview-panel" data-panel="result" aria-hidden="false">
            <div class="preview-actions">
              <button class="cp-btn" data-cp-run=""><svg version="1.0" role="img" class="icon icon-refresh" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <path d="M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8" />
  <path d="M21 3v5h-5" />
  <path d="M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16" />
  <path d="M8 16H3v5" />
</svg>
</button>
            </div>
            <iframe class="preview-iframe" title="Result"></iframe>
          </div>
          <div class="preview-panel" data-panel="console" aria-hidden="true">
            <div class="preview-actions">
              <button class="cp-btn" data-cp-clear-console=""><svg version="1.0" role="img" class="icon icon-circle-slash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <circle cx="12" cy="12" r="10" />
  <path d="M22 2 2 22" />&lt;/path&gt;
</svg>
</button>
            </div>
            <div class="console" id="cp-console"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<h2  id="codeblocks" dir="auto">Codeblocks</h2>
<div class="code-block" data-copy-code="">
  <div class="code-block-header" role="region" aria-labelledby="code-lang-label">
    <div class="code-block-button-group" aria-hidden="true">
      <span class="code-block-action code-close">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-minimize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
      <span class="code-block-action code-maximize">
        <svg version="1.0" role="img" class="icon icon-circle-fill" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <circle cx="12" cy="12" r="12" />
</svg>

      </span>
    </div>
    <div class="code-lang" id="code-lang-label">
      <svg version="1.0" role="img" class="icon icon-code" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M16.001 3.19a1 1 0 0 1 1.047-.951l.314.016.063.003c.69.036 1.311.068 1.823.169.57.113 1.095.327 1.547.778.451.452.665.976.778 1.547.101.511.133 1.132.17 1.822l.002.063c.174 3.341.174 7.385 0 10.726l-.003.063c-.036.69-.068 1.31-.169 1.822-.113.57-.327 1.095-.778 1.546-.452.452-.976.666-1.547.779-.511.101-1.132.133-1.822.169l-.063.003a110.84 110.84 0 0 1-10.726 0l-.063-.003c-.69-.036-1.31-.068-1.822-.17-.57-.112-1.095-.326-1.546-.777-.452-.452-.666-.977-.779-1.547-.101-.512-.133-1.133-.169-1.823l-.003-.063a102.21 102.21 0 0 1-.125-4.353 1 1 0 0 1 2-.018c.012 1.478.053 2.932.122 4.267.04.774.067 1.248.137 1.601.062.31.139.43.23.521.093.092.212.17.522.23.353.07.826.098 1.6.138 3.272.17 7.246.17 10.519 0 .773-.04 1.247-.067 1.6-.137.31-.062.429-.139.52-.23.093-.093.17-.212.231-.522.07-.353.097-.826.137-1.6.17-3.272.17-7.246 0-10.519-.04-.773-.067-1.247-.137-1.6-.061-.31-.138-.429-.23-.52-.092-.092-.212-.17-.521-.231-.354-.07-.828-.097-1.601-.137l-.307-.015a1 1 0 0 1-.95-1.047Z" clip-rule="evenodd" />
  <path fill-rule="evenodd" d="M6.707 1.293a1 1 0 0 1 0 1.414L4.121 5.293c-.353.353-.545.549-.662.701A.838.838 0 0 0 3.455 6a.838.838 0 0 0 .004.006c.117.152.31.348.662.701l2.586 2.586a1 1 0 0 1-1.414 1.414L2.707 8.121l-.038-.038c-.3-.3-.592-.591-.8-.864-.234-.307-.455-.705-.455-1.219 0-.514.22-.912.455-1.219.208-.273.5-.564.8-.864l.038-.038 2.586-2.586a1 1 0 0 1 1.414 0Zm2.586 0a1 1 0 0 1 1.414 0l2.586 2.586.039.038c.3.3.59.591.799.864.234.307.455.705.455 1.219 0 .514-.22.912-.455 1.219-.208.273-.5.564-.8.864l-.038.038-2.586 2.586a1 1 0 0 1-1.414-1.414l2.586-2.586c.353-.353.546-.549.662-.701L12.545 6l-.004-.006c-.117-.152-.309-.348-.662-.701L9.293 2.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

      <span class="visually-hidden">Code language:</span>
      Ruby
    </div>
    <div class="code-actions">
      <button type="button" class="btn btn-sm btn-toggle-lines" aria-label="Toggle line numbers" data-tooltip="Toggle line numbers">
        <svg version="1.0" role="img" class="icon icon-hash" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <line x1="4" y1="9" x2="20" y2="9" />
  <line x1="4" y1="15" x2="20" y2="15" />
  <line x1="10" y1="3" x2="8" y2="21" />
  <line x1="16" y1="3" x2="14" y2="21" />
</svg>

      </button>
      <button type="button" class="btn btn-sm btn-copy" aria-label="Copy code" data-tooltip="Copy">
        <svg version="1.0" role="img" class="icon icon-clipboard-check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="none" aria-hidden="true" focusable="false" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
  <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
  <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
  <path d="m9 14 2 2 4-4" stroke-opacity="0" />
</svg>

      </button>
    </div>
  </div>
  <figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre><span class="c1"># Gemfile</span>
<span class="n">gem</span> <span class="s1">'httparty'</span>

<span class="c1"># app/services/weather_api.rb</span>
<span class="nb">require</span> <span class="s1">'httparty'</span>

<span class="k">class</span> <span class="nc">WeatherApi</span>
  <span class="no">API_KEY</span> <span class="o">=</span> <span class="s1">'your_api_key'</span>
  <span class="no">BASE_URL</span> <span class="o">=</span> <span class="s1">'https://api.openweathermap.org/data/2.5/weather'</span>

  <span class="k">def</span> <span class="nf">fetch_weather</span><span class="p">(</span><span class="n">city</span><span class="p">)</span>
    <span class="n">url</span> <span class="o">=</span> <span class="s2">"</span><span class="si">#{</span><span class="no">BASE_URL</span><span class="si">}</span><span class="s2">?q=</span><span class="si">#{</span><span class="n">city</span><span class="si">}</span><span class="s2">&amp;appid=</span><span class="si">#{</span><span class="no">API_KEY</span><span class="si">}</span><span class="s2">&amp;units=metric"</span>
    <span class="n">response</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="k">raise</span> <span class="s2">"API Error: </span><span class="si">#{</span><span class="n">response</span><span class="p">.</span><span class="nf">code</span><span class="si">}</span><span class="s2">"</span> <span class="k">unless</span> <span class="n">response</span><span class="p">.</span><span class="nf">success?</span>
    <span class="n">response</span><span class="p">.</span><span class="nf">parsed_body</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># app/controllers/weather_controller.rb</span>
<span class="k">def</span> <span class="nf">show</span>
  <span class="n">city</span> <span class="o">=</span> <span class="n">params</span><span class="p">[</span><span class="ss">:city</span><span class="p">]</span>
  <span class="n">weather_data</span> <span class="o">=</span> <span class="no">WeatherApi</span><span class="p">.</span><span class="nf">new</span><span class="p">.</span><span class="nf">fetch_weather</span><span class="p">(</span><span class="n">city</span><span class="p">)</span>
  <span class="vi">@temperature</span> <span class="o">=</span> <span class="n">weather_data</span><span class="p">[</span><span class="s1">'main'</span><span class="p">][</span><span class="s1">'temp'</span><span class="p">]</span>
<span class="k">end</span>
</pre></td></tr></tbody></table></code></pre></figure>
</div>

<h2  id="alerts" dir="auto">Alerts</h2>
<h3  id="default" dir="auto">Default</h3>
<div class="alert alert-accent" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg version="1.0" role="img" class="icon icon-info-circle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path d="M9.5 11a1 1 0 0 1 1-1H12a1 1 0 0 1 1 1v4h1a1 1 0 1 1 0 2h-4a1 1 0 1 1 0-2h1v-3h-.5a1 1 0 0 1-1-1ZM12 9a1.25 1.25 0 1 0 0-2.5A1.25 1.25 0 0 0 12 9Z" />
  <path fill-rule="evenodd" d="M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12Zm10-8a8 8 0 1 0 0 16 8 8 0 0 0 0-16Z" clip-rule="evenodd" />
</svg>


  </div>
  <div class="alert-content">
    This is default alert.
  </div>
  
</div>

<h3  id="with-icon-heading-and-dismiss" dir="auto">With icon, heading, and dismiss</h3>
<div class="alert alert-accent alert-dismissible" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg version="1.0" role="img" class="icon icon-info-circle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path d="M9.5 11a1 1 0 0 1 1-1H12a1 1 0 0 1 1 1v4h1a1 1 0 1 1 0 2h-4a1 1 0 1 1 0-2h1v-3h-.5a1 1 0 0 1-1-1ZM12 9a1.25 1.25 0 1 0 0-2.5A1.25 1.25 0 0 0 12 9Z" />
  <path fill-rule="evenodd" d="M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12Zm10-8a8 8 0 1 0 0 16 8 8 0 0 0 0-16Z" clip-rule="evenodd" />
</svg>


  </div>
  <div class="alert-content">
    <div class="alert-heading">Information</div>
This is just for your information.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg version="1.0" role="img" class="icon icon-times" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 0 1 1.414 0L12 10.586l6.293-6.293a1 1 0 1 1 1.414 1.414L13.414 12l6.293 6.293a1 1 0 0 1-1.414 1.414L12 13.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L10.586 12 4.293 5.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

</button>

</div>

<div class="alert alert-success alert-dismissible" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg version="1.0" role="img" class="icon icon-bulb" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" clip-rule="evenodd" d="m12 3c-3.585 0-6.5 2.9225-6.5 6.5385 0 2.2826 1.162 4.2913 2.9248 5.4615h7.1504c1.7628-1.1702 2.9248-3.1789 2.9248-5.4615 0-3.6159-2.915-6.5385-6.5-6.5385zm2.8653 14h-5.7306v1h5.7306v-1zm-1.1329 3h-3.4648c0.3458 0.5978 0.9921 1 1.7324 1s1.3866-0.4022 1.7324-1zm-5.6064 0c0.44403 1.7252 2.0101 3 3.874 3s3.43-1.2748 3.874-3c0.5483-0.0047 0.9913-0.4506 0.9913-1v-2.4593c2.1969-1.5431 3.6347-4.1045 3.6347-7.0022 0-4.7108-3.8008-8.5385-8.5-8.5385-4.6992 0-8.5 3.8276-8.5 8.5385 0 2.8977 1.4378 5.4591 3.6347 7.0022v2.4593c0 0.5494 0.44301 0.9953 0.99128 1z" />
</svg>


  </div>
  <div class="alert-content">
    <div class="alert-heading">Heads Up!</div>
Your profile has been updated successfully.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg version="1.0" role="img" class="icon icon-times" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 0 1 1.414 0L12 10.586l6.293-6.293a1 1 0 1 1 1.414 1.414L13.414 12l6.293 6.293a1 1 0 0 1-1.414 1.414L12 13.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L10.586 12 4.293 5.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

</button>

</div>

<div class="alert alert-danger alert-dismissible" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg version="1.0" role="img" class="icon icon-times" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 0 1 1.414 0L12 10.586l6.293-6.293a1 1 0 1 1 1.414 1.414L13.414 12l6.293 6.293a1 1 0 0 1-1.414 1.414L12 13.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L10.586 12 4.293 5.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>


  </div>
  <div class="alert-content">
    <div class="alert-heading">Error :(</div>
Failed to save your changes. Please try again.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg version="1.0" role="img" class="icon icon-times" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 0 1 1.414 0L12 10.586l6.293-6.293a1 1 0 1 1 1.414 1.414L13.414 12l6.293 6.293a1 1 0 0 1-1.414 1.414L12 13.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L10.586 12 4.293 5.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

</button>

</div>

<div class="alert alert-attention alert-dismissible" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg version="1.0" role="img" class="icon icon-exclamation-triangle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path d="M12,16a1,1,0,1,0,1,1A1,1,0,0,0,12,16Zm10.67,1.47-8.05-14a3,3,0,0,0-5.24,0l-8,14A3,3,0,0,0,3.94,22H20.06a3,3,0,0,0,2.61-4.53Zm-1.73,2a1,1,0,0,1-.88.51H3.94a1,1,0,0,1-.88-.51,1,1,0,0,1,0-1l8-14a1,1,0,0,1,1.78,0l8.05,14A1,1,0,0,1,20.94,19.49ZM12,8a1,1,0,0,0-1,1v4a1,1,0,0,0,2,0V9A1,1,0,0,0,12,8Z" />
</svg>


  </div>
  <div class="alert-content">
    <div class="alert-heading">Attention</div>
This action requires confirmation.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg version="1.0" role="img" class="icon icon-times" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 0 1 1.414 0L12 10.586l6.293-6.293a1 1 0 1 1 1.414 1.414L13.414 12l6.293 6.293a1 1 0 0 1-1.414 1.414L12 13.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L10.586 12 4.293 5.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

</button>

</div>

<h3  id="with-icon-outline-and-dismiss" dir="auto">With icon, outline, and dismiss</h3>
<div class="alert alert-accent alert-dismissible alert-outlined" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg version="1.0" role="img" class="icon icon-info-circle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path d="M9.5 11a1 1 0 0 1 1-1H12a1 1 0 0 1 1 1v4h1a1 1 0 1 1 0 2h-4a1 1 0 1 1 0-2h1v-3h-.5a1 1 0 0 1-1-1ZM12 9a1.25 1.25 0 1 0 0-2.5A1.25 1.25 0 0 0 12 9Z" />
  <path fill-rule="evenodd" d="M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12Zm10-8a8 8 0 1 0 0 16 8 8 0 0 0 0-16Z" clip-rule="evenodd" />
</svg>


  </div>
  <div class="alert-content">
    An example outlined accent alert with an icon.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg version="1.0" role="img" class="icon icon-times" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 0 1 1.414 0L12 10.586l6.293-6.293a1 1 0 1 1 1.414 1.414L13.414 12l6.293 6.293a1 1 0 0 1-1.414 1.414L12 13.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L10.586 12 4.293 5.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

</button>

</div>

<div class="alert alert-success alert-dismissible alert-outlined" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg version="1.0" role="img" class="icon icon-bulb" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" clip-rule="evenodd" d="m12 3c-3.585 0-6.5 2.9225-6.5 6.5385 0 2.2826 1.162 4.2913 2.9248 5.4615h7.1504c1.7628-1.1702 2.9248-3.1789 2.9248-5.4615 0-3.6159-2.915-6.5385-6.5-6.5385zm2.8653 14h-5.7306v1h5.7306v-1zm-1.1329 3h-3.4648c0.3458 0.5978 0.9921 1 1.7324 1s1.3866-0.4022 1.7324-1zm-5.6064 0c0.44403 1.7252 2.0101 3 3.874 3s3.43-1.2748 3.874-3c0.5483-0.0047 0.9913-0.4506 0.9913-1v-2.4593c2.1969-1.5431 3.6347-4.1045 3.6347-7.0022 0-4.7108-3.8008-8.5385-8.5-8.5385-4.6992 0-8.5 3.8276-8.5 8.5385 0 2.8977 1.4378 5.4591 3.6347 7.0022v2.4593c0 0.5494 0.44301 0.9953 0.99128 1z" />
</svg>


  </div>
  <div class="alert-content">
    An example outlined success alert with an icon.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg version="1.0" role="img" class="icon icon-times" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 0 1 1.414 0L12 10.586l6.293-6.293a1 1 0 1 1 1.414 1.414L13.414 12l6.293 6.293a1 1 0 0 1-1.414 1.414L12 13.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L10.586 12 4.293 5.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

</button>

</div>

<div class="alert alert-danger alert-dismissible alert-outlined" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg version="1.0" role="img" class="icon icon-times" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 0 1 1.414 0L12 10.586l6.293-6.293a1 1 0 1 1 1.414 1.414L13.414 12l6.293 6.293a1 1 0 0 1-1.414 1.414L12 13.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L10.586 12 4.293 5.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>


  </div>
  <div class="alert-content">
    An example outlined danger alert with an icon.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg version="1.0" role="img" class="icon icon-times" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 0 1 1.414 0L12 10.586l6.293-6.293a1 1 0 1 1 1.414 1.414L13.414 12l6.293 6.293a1 1 0 0 1-1.414 1.414L12 13.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L10.586 12 4.293 5.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

</button>

</div>

<div class="alert alert-attention alert-dismissible alert-outlined" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg version="1.0" role="img" class="icon icon-exclamation-triangle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path d="M12,16a1,1,0,1,0,1,1A1,1,0,0,0,12,16Zm10.67,1.47-8.05-14a3,3,0,0,0-5.24,0l-8,14A3,3,0,0,0,3.94,22H20.06a3,3,0,0,0,2.61-4.53Zm-1.73,2a1,1,0,0,1-.88.51H3.94a1,1,0,0,1-.88-.51,1,1,0,0,1,0-1l8-14a1,1,0,0,1,1.78,0l8.05,14A1,1,0,0,1,20.94,19.49ZM12,8a1,1,0,0,0-1,1v4a1,1,0,0,0,2,0V9A1,1,0,0,0,12,8Z" />
</svg>


  </div>
  <div class="alert-content">
    An example outlined attention alert with an icon.
  </div>
  <button type="button" class="alert-dismiss" aria-label="Dismiss">
  <svg version="1.0" role="img" class="icon icon-times" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 0 1 1.414 0L12 10.586l6.293-6.293a1 1 0 1 1 1.414 1.414L13.414 12l6.293 6.293a1 1 0 0 1-1.414 1.414L12 13.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L10.586 12 4.293 5.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>

</button>

</div>

<h3  id="with-links" dir="auto">With links</h3>
<div class="alert alert-accent" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg version="1.0" role="img" class="icon icon-info-circle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path d="M9.5 11a1 1 0 0 1 1-1H12a1 1 0 0 1 1 1v4h1a1 1 0 1 1 0 2h-4a1 1 0 1 1 0-2h1v-3h-.5a1 1 0 0 1-1-1ZM12 9a1.25 1.25 0 1 0 0-2.5A1.25 1.25 0 0 0 12 9Z" />
  <path fill-rule="evenodd" d="M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12Zm10-8a8 8 0 1 0 0 16 8 8 0 0 0 0-16Z" clip-rule="evenodd" />
</svg>


  </div>
  <div class="alert-content">
    <div class="alert-heading">Information</div>
This is an <a href="#">important notification</a> that requires your attention.
You can <a href="/settings">update your settings here</a>.
An example showing the <code class="language-plaintext highlighter-rouge">warning</code> type prompt.
  </div>
  
</div>

<h3  id="markdown-support" dir="auto">Markdown support</h3>
<div class="alert alert-danger" role="alert" aria-live="polite" tabindex="0">
  <div class="alert-icon">
    <svg version="1.0" role="img" class="icon icon-times" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" height="1.25rem" width="1.25rem" fill="currentColor" aria-hidden="true" focusable="false">
  <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 0 1 1.414 0L12 10.586l6.293-6.293a1 1 0 1 1 1.414 1.414L13.414 12l6.293 6.293a1 1 0 0 1-1.414 1.414L12 13.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L10.586 12 4.293 5.707a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
</svg>


  </div>
  <div class="alert-content">
    <h3 class="alert-heading" id="markdown-enabled-alert">Markdown enabled alert</h3>

<p>This content is <strong>processed</strong> as <em>Markdown</em>.</p>

  </div>
  
</div>

]]></content>

    
      <category term="typography" scheme="urn:taxonomy:tag" />
    
      <category term="design" scheme="urn:taxonomy:tag" />
    
      <category term="styleguide" scheme="urn:taxonomy:tag" />
    

    
      <category term="General" scheme="urn:taxonomy:category" />
    
  </entry>
  
  <entry xml:lang="en">
    <title>Text and Typography</title>
    <link rel="alternate" type="text/html" href="https://shivam091.github.io/post/typography" />
    <id>https://shivam091.github.io/post/typography</id>

    <published>2025-06-07T18:47:49+05:30</published>
    <updated>2025-08-14T08:42:44+05:30</updated>

    
    <media:thumbnail
      url="https://shivam091.github.io/assets/img/posts/typography/cover.png"
      width="1200"
      height="630" />
    

    <summary type="html">
      This post is a comprehensive test of various HTML elements. It includes headings, paragraphs, lists, tables, forms, code, and more.
    </summary>
    <content type="html"><![CDATA[<h2  id="headings" dir="auto">Headings</h2>
<h1  id="h1-heading-usually-reserved-for-post-title" dir="auto">H1 Heading (usually reserved for post title)</h1><h2  id="h2-heading" dir="auto">H2 Heading</h2><h3  id="h3-heading" dir="auto">H3 Heading</h3><h4  id="h4-heading" dir="auto">H4 Heading</h4><h5  id="h5-heading" dir="auto">H5 Heading</h5><h6  id="h6-heading" dir="auto">H6 Heading</h6>
<h2  id="paragraphs" dir="auto">Paragraphs</h2>
<p  dir="auto">Lorem ipsum dolor sit amet, <strong>consectetur</strong> adipiscing elit. Nulla <em>vehicula</em>, <code  class="highlighter-rouge notranslate">inline code</code>, <a  href="https://example.com" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://example.com" class="external-link">external link</a>, and a line break:<br />
New line here.</p>
<h2  id="blockquote" dir="auto">Blockquote</h2>

          <blockquote  dir="auto">
            <p  dir="auto">“Design is not just what it looks like and feels like. Design is how it works.”<br />
— <em>Steve Jobs</em></p>
          </blockquote>
        
<h2  id="links" dir="auto">Links</h2>
<p  dir="auto"><a  href="https://example.com" target="_blank" rel="noopener noreferrer nofollow" aria-label="External link to https://example.com" class="external-link">External Link</a><br />
<a  href="/about/">Internal Link</a><br />
Mailto: <a  href="mailto:test@example.com">Send Email</a></p>
<h2  id="lists" dir="auto">Lists</h2>
<h3  id="unordered-list" dir="auto">Unordered List</h3>

          <ul  dir="auto">
              <li><p  dir="auto">Chapter 1
</p>
          <ul  dir="auto">
                  <li><p  dir="auto">Section 1
</p>
          <ul  dir="auto">
                      <li><p  dir="auto">Paragraph 1</p></li>

          </ul>
        </li>

          </ul>
        </li>
  <li><p  dir="auto">Chapter 2
</p>
          <ul  dir="auto">
                  <li><p  dir="auto">Section 2</p></li>

          </ul>
        </li>

          </ul>
        
<h3  id="ordered-list" dir="auto">Ordered List</h3>

          <ol  dir="auto">
              <li><p  dir="auto">First item</p></li>
  <li><p  dir="auto">Second item
</p>
          <ol  dir="auto">
                  <li><p  dir="auto">Nested
</p>
          <ol  dir="auto">
                      <li><p  dir="auto">Nested again</p></li>

          </ol>
        </li>

          </ol>
        </li>
  <li><p  dir="auto">Third item</p></li>

          </ol>
        
<h3  id="task-list" dir="auto">Task List</h3>

          <ul  class="task-list" dir="auto">
              <li class="task-list-item"><p  dir="auto"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Job
</p>
          <ul  class="task-list" dir="auto">
                  <li class="task-list-item"><p  dir="auto"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Step 1</p></li>
      <li class="task-list-item"><p  dir="auto"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Step 2</p></li>
      <li class="task-list-item"><p  dir="auto"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Step 3</p></li>

          </ul>
        </li>

          </ul>
        
<h3  id="description-lists" dir="auto">Description Lists</h3><dl>
  <dt>Sun</dt>
  <dd><p  dir="auto">the star around which the earth orbits</p></dd>
  <dt>Moon</dt>
  <dd><p  dir="auto">the natural satellite of the earth, visible by reflected light from the sun</p></dd>
</dl>

<h2  id="inline-elements" dir="auto">Inline Elements</h2>
<p  dir="auto"><strong>bold text</strong>,
<em>italic text</em>,
<code  class="highlighter-rouge notranslate">code</code>,
<del>strikethrough</del>,
<u>underlined</u>,
<small>small text</small>
<mark>highlighted</mark> text.
<abbr title="attribute">attr</abbr></p>
<h2  id="code-blocks" dir="auto">Code Blocks</h2>
<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># Gemfile</span>
<span class="n">gem</span> <span class="s1">'httparty'</span>

<span class="c1"># app/services/weather_api.rb</span>
<span class="nb">require</span> <span class="s1">'httparty'</span>

<span class="k">class</span> <span class="nc">WeatherApi</span>
  <span class="no">API_KEY</span> <span class="o">=</span> <span class="s1">'your_api_key'</span>
  <span class="no">BASE_URL</span> <span class="o">=</span> <span class="s1">'https://api.openweathermap.org/data/2.5/weather'</span>

  <span class="k">def</span> <span class="nf">fetch_weather</span><span class="p">(</span><span class="n">city</span><span class="p">)</span>
    <span class="n">url</span> <span class="o">=</span> <span class="s2">"</span><span class="si">#{</span><span class="no">BASE_URL</span><span class="si">}</span><span class="s2">?q=</span><span class="si">#{</span><span class="n">city</span><span class="si">}</span><span class="s2">&amp;appid=</span><span class="si">#{</span><span class="no">API_KEY</span><span class="si">}</span><span class="s2">&amp;units=metric"</span>
    <span class="n">response</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="k">raise</span> <span class="s2">"API Error: </span><span class="si">#{</span><span class="n">response</span><span class="p">.</span><span class="nf">code</span><span class="si">}</span><span class="s2">"</span> <span class="k">unless</span> <span class="n">response</span><span class="p">.</span><span class="nf">success?</span>
    <span class="n">response</span><span class="p">.</span><span class="nf">parsed_body</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># app/controllers/weather_controller.rb</span>
<span class="k">def</span> <span class="nf">show</span>
  <span class="n">city</span> <span class="o">=</span> <span class="n">params</span><span class="p">[</span><span class="ss">:city</span><span class="p">]</span>
  <span class="n">weather_data</span> <span class="o">=</span> <span class="no">WeatherApi</span><span class="p">.</span><span class="nf">new</span><span class="p">.</span><span class="nf">fetch_weather</span><span class="p">(</span><span class="n">city</span><span class="p">)</span>
  <span class="vi">@temperature</span> <span class="o">=</span> <span class="n">weather_data</span><span class="p">[</span><span class="s1">'main'</span><span class="p">][</span><span class="s1">'temp'</span><span class="p">]</span>
<span class="k">end</span></code></pre></figure>

<p  dir="auto">Inline <code  class="highlighter-rouge notranslate">console.log("Hi")</code> inside text.</p>
<h2  id="details--summary" dir="auto">Details / Summary</h2>
<details>
  <summary>Click to expand</summary>
  <p>This is hidden content revealed with HTML <code>&lt;details&gt;</code> and <code>&lt;summary&gt;</code> tags.</p>
</details>

<h2  id="figures-and-images" dir="auto">Figures and Images</h2>
<h3  id="image-with-caption" dir="auto">Image with Caption</h3>
<figure>
  <img src="/assets/img/hl-sitting.png" alt="Example Image" />
  <figcaption>This is a caption below the image.</figcaption>
</figure>

<h3  id="simple-image" dir="auto">Simple Image</h3>
<p  dir="auto">  <div class="markdown-img-wrapper lazy-wrapper">
<img  alt="Alt text" class="lazy-img" data-src="/assets/img/hl-standing.png" loading="lazy" />
<noscript><img  alt="Alt text" src="/assets/img/hl-standing.png" /></noscript>  </div>
</p>
<h2  id="tables" dir="auto">Tables</h2>

          <table  dir="auto" role="table" class="markdown-table">
              <thead>
    <tr>
      <th style="text-align: right">Feature</th>
      <th style="text-align: center">Supported</th>
      <th style="text-align: left">Notes</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: right">Tables</td>
      <td style="text-align: center">✅</td>
      <td style="text-align: left">Markdown &amp; HTML</td>
    </tr>
    <tr>
      <td style="text-align: right">GFM</td>
      <td style="text-align: center">✅</td>
      <td style="text-align: left">Supported on GitHub</td>
    </tr>
    <tr>
      <td style="text-align: right">Footnotes</td>
      <td style="text-align: center">✅</td>
      <td style="text-align: left">In Markdown config</td>
    </tr>
  </tbody>

          </table>
        
<h2  id="filepath" dir="auto">Filepath</h2>
<p  dir="auto">Here is the <code  class="filepath highlighter-rouge notranslate">/path/to/the/file.extend</code>.</p>
<h2  id="footnotes" dir="auto">Footnotes</h2>
<p  dir="auto">This sentence has a footnote.
          <sup id="fnref:1">
            <a href="#fn:1" class="footnote" rel="footnote" role="doc-noteref" aria-describedby="footnote-label">1</a>
          </sup>
        </p>
<p  dir="auto">This sentence has an another footnote.
          <sup id="fnref:2">
            <a href="#fn:2" class="footnote" rel="footnote" role="doc-noteref" aria-describedby="footnote-label">2</a>
          </sup>
        </p>
<h2  id="misc-elements" dir="auto">Misc elements</h2>
<p  dir="auto"><strong>Abbreviation:</strong><br />
The abbreviation for HyperText Markup Language is <abbr title="HyperText Markup Language">HTML</abbr>.</p>
<p  dir="auto"><strong>Keyboard Input:</strong><br />
To save, press <kbd>Ctrl</kbd> + <kbd>S</kbd>.</p>
<p  dir="auto"><strong>Subscript/Superscript:</strong><br />
H<sub>2</sub>O and E = mc<sup>2</sup></p>
<p  dir="auto"><strong>Time Tag:</strong><br />
<time datetime="2025-05-31">May 31, 2025</time></p><section class="footnotes" role="doc-endnotes" dir="auto">

          <h2 id="footnote-label" class="visually-hidden" dir="auto">Footnotes</h2>
        
          <ol  class="footnote-list" dir="auto">
              <li id="fn:1" class="footnote-list-item">
<p  dir="auto">This is the footnote content.&nbsp;
            <a href="#fnref:1" class="reverse-footnote" aria-label="Back to reference 1" role="doc-backlink">&#8617;</a>
          </p>  </li>
  <li id="fn:2" class="footnote-list-item">
<p  dir="auto">This is the another footnote content.&nbsp;
            <a href="#fnref:2" class="reverse-footnote" aria-label="Back to reference 2" role="doc-backlink">&#8617;</a>
          </p>  </li>

          </ol>
        </section>
]]></content>

    
      <category term="typography" scheme="urn:taxonomy:tag" />
    
      <category term="design" scheme="urn:taxonomy:tag" />
    
      <category term="styleguide" scheme="urn:taxonomy:tag" />
    

    
      <category term="General" scheme="urn:taxonomy:category" />
    
  </entry>
  
</feed>
